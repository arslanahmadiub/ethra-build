{"version":3,"sources":["pages/provider/ProviderProfile/FormFillUpInformation.jsx"],"names":["days","cons","DAY_ON_WEEK","map","item","name","isUsable","times","TIME_ON_DAY","index","provider_types","PROVIDER_TYPE","provider_type","id","defaultState","firstName","lastName","email","phoneNumber","badAction","referral","errors","isFormReady","providerTypes","additional_information","ADDITIONAL_INFORMATION","FormFillUpInformation","props","_this","Object","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__","this","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7__","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8__","call","handleChangeQA","e","_e$target","target","value","info","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__","state","find","answer","trim","setState","handleMultipleSelectDays","tempDateData","_e$target2","checked","Number","handleMultipleSelectTimes","tempTimeData","_e$target3","handleMultipleSelectProviderTypes","tempData","_e$target4","convertDate","_this$state","infoItem","providerTypesItem","filter","tempProviderTypesData","join","concat","handleError","field","status","_objectSpread2","check","key","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","focusFirstError","firstErrorField","keys","element","document","getElementsByName","focus","saveForm","_ref","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","_this$state2","data","wrap","_context","prev","next","preventDefault","updateProvider","stop","_x","apply","arguments","providerApi","update","then","res","toast","success","updateFirstLoginStatus","catch","err","response","error","_this2","isFirstLogin","_this$state3","react__WEBPACK_IMPORTED_MODULE_10___default","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_12__","className","react_router__WEBPACK_IMPORTED_MODULE_28__","to","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","xs","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","reactstrap__WEBPACK_IMPORTED_MODULE_18__","i","md","reactstrap__WEBPACK_IMPORTED_MODULE_19__","type","onChange","htmlFor","placeholder","onClick","HOURS","REFERRAL","components_ErrorSummary__WEBPACK_IMPORTED_MODULE_23__","reactstrap__WEBPACK_IMPORTED_MODULE_20__","reactstrap__WEBPACK_IMPORTED_MODULE_21__","color","Component","mapDispatchToProps","connect","navBars","auth"],"mappings":"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","file":"static/js/50.0b4351ae.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    Input,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    FormGroup,\r\n    Label,\r\n    CardFooter,\r\n} from \"reactstrap\";\r\nimport { toast } from 'react-toastify';\r\nimport ErrorSummary from 'components/ErrorSummary';\r\nimport { updateFirstLoginStatus } from \"../../../redux/actions/auth.action\"\r\nimport cons from '../../../constants';\r\nimport providerApi from '../../../api/providerApi';\r\n\r\nimport './FormFillUpInformation.scss'\r\nimport { Redirect } from 'react-router';\r\n\r\nconst days = cons.DAY_ON_WEEK.map(item => {\r\n    return {\r\n        name: item,\r\n        isUsable: false\r\n    }\r\n});\r\nconst times = cons.TIME_ON_DAY.map((item, index) => {\r\n    return {\r\n        name: item,\r\n        isUsable: false\r\n    }\r\n});\r\nconst provider_types = cons.PROVIDER_TYPE.map(item => {\r\n    return {\r\n        name: item.provider_type,\r\n        isUsable: false,\r\n        id: item.id\r\n    }\r\n})\r\n\r\nconst defaultState = () => {\r\n    return {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phoneNumber: '',\r\n        badAction: '0',\r\n        referral: '',\r\n        errors: {},\r\n        isFormReady: {},\r\n        days: days,\r\n        times: times,\r\n        provider_types: provider_types,\r\n        providerTypes: '',\r\n        additional_information: cons.ADDITIONAL_INFORMATION\r\n    }\r\n}\r\n\r\nclass FormFillUpInformation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = defaultState()\r\n    }\r\n\r\n    handleChangeQA = e => {\r\n        const { id, value } = e.target;\r\n        const info = [...this.state.additional_information]\r\n        let infoItem = info.find(item => item.id === id)\r\n        infoItem.answer = value.trim('')\r\n        this.setState({\r\n            additional_information: info,\r\n        })\r\n    }\r\n\r\n    handleMultipleSelectDays = e => {\r\n        let tempDateData = this.state.days\r\n        const { name, checked } = e.target;\r\n        tempDateData[Number(name)].isUsable = checked;\r\n        this.setState(\r\n            {\r\n                days: tempDateData,\r\n            }\r\n        )\r\n    }\r\n\r\n    handleMultipleSelectTimes = e => {\r\n        let tempTimeData = this.state.times\r\n        const { name, checked } = e.target;\r\n        tempTimeData[Number(name)].isUsable = checked;\r\n        this.setState(\r\n            {\r\n                times: tempTimeData,\r\n            }\r\n        );\r\n    }\r\n\r\n    handleMultipleSelectProviderTypes = e => {\r\n        let tempData = this.state.provider_types\r\n        const { id, checked } = e.target;\r\n        tempData[id].isUsable = checked;\r\n        this.setState(\r\n            {\r\n                provider_types: tempData,\r\n            }\r\n        );\r\n    }\r\n\r\n    convertDate = () => {\r\n        const { days, times, additional_information, provider_types } = this.state\r\n\r\n        let infoItem = additional_information.find(item => item.id === \"011\")\r\n        let providerTypesItem = additional_information.find(item => item.id === \"001\")\r\n\r\n        const tempDateData = days.filter(item => item.isUsable)\r\n        const tempTimeData = times.filter(item => item.isUsable)\r\n        const tempProviderTypesData = provider_types.filter(item => item.isUsable)\r\n        this.setState({\r\n            providerTypes: [...(tempProviderTypesData.map(item => item.id))].join(\",\")\r\n        })\r\n        infoItem.answer = [...(tempDateData.map(item => item.name)), ...(tempTimeData.map(item => item.name))].join(\",\");\r\n        providerTypesItem.answer = [...(tempProviderTypesData.map(item => item.id))].join(\",\")\r\n    }\r\n\r\n    handleError = (field, status) => {\r\n        let check = true;\r\n        if (status) {\r\n            for (let key in this.state.isFormReady) {\r\n                check = check && this.state.isFormReady[key];\r\n            }\r\n        }\r\n        this.setState(\r\n            { isFormReady: { ...this.state.isFormReady, [field]: status, check: check && status } }\r\n        );\r\n    }\r\n\r\n    badAction = (badAction) => {\r\n        this.setState({ badAction })\r\n    }\r\n\r\n    referral = (referral) => {\r\n        this.setState({ referral })\r\n    }\r\n\r\n    focusFirstError = (errors) => {\r\n        const firstErrorField = Object.keys(errors)[0];\r\n        const element = document.getElementsByName(firstErrorField)[0];\r\n        if (element) {\r\n            element.focus();\r\n        }\r\n    }\r\n\r\n    saveForm = async e => {\r\n        e.preventDefault();\r\n        await this.convertDate()\r\n        const { id } = this.props.data\r\n        const { additional_information, providerTypes } = this.state;\r\n        const data = { additional_information, providerTypes, id }\r\n        this.updateProvider(data)\r\n    }\r\n\r\n    updateProvider = (data) => {\r\n        providerApi.update(data).then(res => {\r\n            toast.success(\"Update information success\");\r\n            this.props.updateFirstLoginStatus(false)\r\n        }).catch(err => {\r\n            const errors = err.response && err.response.data;\r\n            if (errors) {\r\n                this.focusFirstError(errors);\r\n                this.setState({ errors });\r\n            }\r\n            toast.error(\"Update information fail\");\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { isFirstLogin } = this.props\r\n        const { badAction, referral, errors, days, times, provider_types } = this.state;\r\n        return (\r\n            <Container className=\"mt-3 pb-5 form-fill-up-data\">\r\n                {!isFirstLogin && <Redirect to=\"/provider/calendar\" />}\r\n                <Card className=\"\">\r\n                    <div className=\"text-center mt-4 mb-0 px-3\">\r\n                        <h1><b>Update Your Information</b></h1>\r\n                        <Col xs=\"12\" className=\"text-justify\">\r\n                            <small>\r\n                                Thank you for your interest in joining the Ethera community!\r\n                                We are building a collaborative community of passionate providers that\r\n                                will be empowered with flexible access to a warm and comfortable\r\n                                space, specifically designed to nurture the therapist-client relationship.\r\n                                The customized space will also be integrated with easy-to-use\r\n                                technology to simplify communication, scheduling and billing.\r\n                                    </small>\r\n                        </Col>\r\n                        <Col xs=\"12\" className=\"text-justify mt-3\">\r\n                            <small>\r\n                                We would love to learn more about you. Please fill out our application and an Ethera team\r\n                                member will reach out to you within 24 hours. Thank you!\r\n                                </small>\r\n                        </Col>\r\n                    </div>\r\n                    <CardBody>\r\n                        <FormGroup>\r\n                            <Label className=\"form-control-label\">\r\n                                Which of the following degrees/licenses do you have?\r\n                                </Label>\r\n                            <Row className=\"mx-3\">\r\n                                {provider_types.map((item, i) => {\r\n                                    return (\r\n                                        <Col md={6} key={i} className=\"custom-control custom-checkbox mt-3\">\r\n                                            <Input\r\n                                                className=\"custom-control-input\"\r\n                                                id={item.id}\r\n                                                type=\"checkbox\"\r\n                                                name={item.name}\r\n                                                checked={item.isUsable}\r\n                                                onChange={this.handleMultipleSelectProviderTypes}\r\n                                            />\r\n                                            <Label className=\"custom-control-label\" htmlFor={item.id}>\r\n                                                {item.name}\r\n                                            </Label>\r\n                                        </Col>\r\n                                    )\r\n                                })}\r\n                            </Row>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label className=\"form-control-label\"> Which school or program did you receive your degree/license from?</Label>\r\n                            <Input placeholder=\"School or program\" type=\"textarea\" id=\"002\" onChange={this.handleChangeQA} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label className=\"form-control-label\">What is your license number?</Label>\r\n                            <Input placeholder=\"license number\" type=\"text\" id=\"003\" onChange={this.handleChangeQA} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label className=\"form-control-label\"> Any additional certifications, trainings or professional background to include in your profile?</Label>\r\n                            <Input type=\"textarea\" id=\"004\" onChange={this.handleChangeQA} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label className=\"form-control-label\"> What is your website, LinkedIn or Psychology Today address?</Label>\r\n                            <Input id=\"005\" type=\"textarea\" onChange={this.handleChangeQA} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label className=\"form-control-label\"> How many years have you been in private practice? </Label>\r\n                            <Input type=\"textarea\" id=\"006\" onChange={this.handleChangeQA} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label className=\"form-control-label\">Have you ever been the subject of any disciplinary action or malpractice claim?</Label>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <div className=\"custom-control custom-radio mb-3\">\r\n                                        <input\r\n                                            className=\"custom-control-input\"\r\n                                            id=\"customRadio11\"\r\n                                            name=\"custom-radio-2\"\r\n                                            type=\"radio\"\r\n                                            onClick={() => this.badAction(\"1\")}\r\n                                        />\r\n                                        <Label className=\"custom-control-label\" htmlFor=\"customRadio11\">\r\n                                            YES\r\n                                            </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <div className=\"custom-control custom-radio mb-3\">\r\n                                        <input\r\n                                            className=\"custom-control-input\"\r\n                                            id=\"customRadio22\"\r\n                                            name=\"custom-radio-2\"\r\n                                            type=\"radio\"\r\n                                            onClick={() => this.badAction(\"0\")}\r\n                                        />\r\n                                        <Label className=\"custom-control-label\" htmlFor=\"customRadio22\">NO</Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Input\r\n                                    placeholder=\"Please describe the circumstances and status of the action or claim?\"\r\n                                    type=\"textarea\"\r\n                                    id=\"007\"\r\n                                    onChange={this.handleChangeQA}\r\n                                    className={`${badAction}` === \"0\" ? 'd-none' : 'mx-3'}\r\n                                />\r\n                            </Row>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label className=\"form-control-label\">When do you want to join the Ethera community?</Label>\r\n                            <Input\r\n                                type=\"textarea\"\r\n                                id=\"008\"\r\n                                onChange={this.handleChangeQA}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label className=\"form-control-label\">Which type of membership are you interested in?</Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                id=\"009\"\r\n                                onChange={this.handleChangeQA}\r\n                            >\r\n                                <option>---selected---</option>\r\n                                <option>Ethera Community Membership</option>\r\n                                <option>Ethera Space and Community Membership (using Ethera space for your practice)</option>\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label className=\"form-control-label\">How many hours per week do you plan on practicing at Ethera?</Label>\r\n                            <Input\r\n                                id=\"010\"\r\n                                type=\"select\"\r\n                                onChange={this.handleChangeQA}\r\n                            >\r\n                                <option>---selected---</option>\r\n                                {\r\n                                    cons.HOURS.map((item, i) => {\r\n                                        return (\r\n                                            <option key={i}>{item}</option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label className=\"form-control-label\">What days and times are you planning to practice at Ethera?</Label>\r\n                            <Row >\r\n                                <Col md={6} >\r\n                                    {\r\n                                        days.map((item, i) => {\r\n                                            return (\r\n                                                <div key={i} className=\"custom-control custom-checkbox mb-3\">\r\n                                                    <Input\r\n                                                        className=\"custom-control-input\"\r\n                                                        id={item.name}\r\n                                                        type=\"checkbox\"\r\n                                                        name={i}\r\n                                                        checked={item.isUsable}\r\n                                                        onChange={this.handleMultipleSelectDays}\r\n                                                    />\r\n                                                    <Label className=\"custom-control-label\" htmlFor={item.name}>\r\n                                                        {item.name}\r\n                                                    </Label>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Col>\r\n                                <Col md={6} >\r\n                                    {\r\n                                        times.map((item, i) => {\r\n                                            return (\r\n                                                <div key={i} className=\"custom-control custom-checkbox mb-3\">\r\n                                                    <Input\r\n                                                        className=\"custom-control-input\"\r\n                                                        id={item.name}\r\n                                                        name={i}\r\n                                                        checked={item.isUsable}\r\n                                                        type=\"checkbox\"\r\n                                                        onChange={this.handleMultipleSelectTimes}\r\n                                                    />\r\n                                                    <Label className=\"custom-control-label\" htmlFor={item.name}>\r\n                                                        {item.name}\r\n                                                    </Label>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label className=\"form-control-label\">Why are you interested in being a Ethera member?</Label>\r\n                            <Input\r\n                                type=\"textarea\"\r\n                                id=\"012\"\r\n                                onChange={this.handleChangeQA}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label className=\"form-control-label\">How did you hear about Ethera?</Label>\r\n                            <Row className=\"d-block\">\r\n                                <Col >\r\n                                    <div className=\"custom-control custom-radio mb-3\">\r\n                                        <Input\r\n                                            className=\"custom-control-input\"\r\n                                            id=\"referral01\"\r\n                                            name=\"custom-radio-5\"\r\n                                            type=\"radio\"\r\n                                            onClick={() => this.referral('1')}\r\n                                        />\r\n                                        <Label className=\"custom-control-label\" htmlFor=\"referral01\">Ethena member</Label>\r\n                                    </div>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"013\"\r\n                                        onChange={this.handleChangeQA}\r\n                                        className={`${referral}` === '1' ? 'd-block' : 'd-none'}\r\n                                    />\r\n                                    <div className=\"custom-control custom-radio mb-3\">\r\n                                        <Input\r\n                                            className=\"custom-control-input\"\r\n                                            id=\"referral2\"\r\n                                            name=\"custom-radio-5\"\r\n                                            type=\"radio\"\r\n                                            onClick={() => this.referral('0')}\r\n                                        />\r\n                                        <Label className=\"custom-control-label\" htmlFor=\"referral2\">Multiple Media</Label>\r\n                                    </div>\r\n                                    <Input\r\n                                        id=\"013\"\r\n                                        type=\"select\"\r\n                                        onChange={this.handleChangeQA}\r\n                                        className={`${referral}` === '0' ? 'd-block' : 'd-none'}\r\n                                    >\r\n                                        <option>---selected---</option>\r\n                                        {\r\n                                            cons.REFERRAL.map((item, i) => {\r\n                                                return (\r\n                                                    <option key={i}>{item}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Input>\r\n                                    <div className=\"custom-control custom-radio mb-3\">\r\n                                        <Input\r\n                                            className=\"custom-control-input\"\r\n                                            id=\"referral3\"\r\n                                            name=\"custom-radio-5\"\r\n                                            type=\"radio\"\r\n                                            onClick={() => this.referral('2')}\r\n                                        />\r\n                                        <Label className=\"custom-control-label\" htmlFor=\"referral3\">Other</Label>\r\n                                    </div>\r\n                                    <Input\r\n                                        placeholder=\"other\"\r\n                                        type=\"text\"\r\n                                        id=\"013\"\r\n                                        onChange={this.handleChangeQA}\r\n                                        className={`${referral}` === '2' ? 'd-block' : 'd-none'}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </FormGroup>\r\n                        <ErrorSummary error={errors} className=\"mt-3\" />\r\n                    </CardBody>\r\n                    <CardFooter className=\"text-center\">\r\n                        <Button className=\"btn-register\" color=\"success\" onClick={this.saveForm}>Save</Button>\r\n                    </CardFooter>\r\n                </Card>\r\n            </Container >\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: state.navBars.data,\r\n        isFirstLogin: state.auth.isFirstLogin,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = { updateFirstLoginStatus }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormFillUpInformation);"],"sourceRoot":""}