{"version":3,"sources":["pages/shared/ForgotPassword/ForgotPassword.jsx","pages/shared/ForgotPassword/index.js","../node_modules/reactstrap/es/InputGroupText.js","../node_modules/reactstrap/es/InputGroup.js","../node_modules/reactstrap/es/InputGroupAddon.js"],"names":["ForgotPassword","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","_e$target","target","name","value","setState","defineProperty","resetPassword","preventDefault","email","state","sendMailToResetPassword","getConfigObject","pathName","headerTitle","loginPath","getPortalType","location","pathname","errors","localStorage","setItem","_this2","loading","data","errorFromServer","error","response","react_default","a","createElement","Fragment","AuthHeader","title","lead","concat","Container","className","Loading","Row","Col","lg","md","Card","style","boxShadow","CardBody","Form","role","onSubmit","FormGroup","classnames","focused","focusedEmail","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","type","onFocus","onBlur","onChange","maxLength","autoFocus","ErrorSummary","Button","color","disabled","react_router_dom","to","React","Component","connect","isAuthenticated","haveError","dispatch","RESET_PASSWORD_ACTIONS","SEND_MAIL_RESET_PASSWORD","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","string","cssModule","object","Tag","attributes","classes","defaultProps","__webpack_exports__","size","_InputGroupText__WEBPACK_IMPORTED_MODULE_6__","oneOf","isRequired","children","node"],"mappings":"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","file":"static/js/42.d20f1b80.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n\r\nimport { RESET_PASSWORD_ACTIONS } from \"redux/actions\";\r\nimport Loading from \"components/Loading\";\r\nimport ErrorSummary from \"components/ErrorSummary\";\r\nimport AuthHeader from \"components/Headers/AuthHeader.jsx\";\r\nimport './ForgotPassword.scss';\r\n\r\nclass ForgotPassword extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      errors: null\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState(\r\n      { [name]: value }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Send mail reset password by email has been entered\r\n   */\r\n  resetPassword = e => {\r\n    e.preventDefault();\r\n    const { email } = this.state;\r\n    if (email) {\r\n      this.props.sendMailToResetPassword({ email });\r\n    }\r\n  }\r\n\r\n  getConfigObject = pathName => {\r\n    switch (pathName) {\r\n      case '/admin/forgot-password':\r\n        return {\r\n          headerTitle: 'Admin',\r\n          loginPath: 'admin/login',\r\n        }\r\n      case '/provider/forgot-password':\r\n        return {\r\n          headerTitle: 'Provider',\r\n          loginPath: 'provider/login',\r\n        }\r\n      case '/client/forgot-password':\r\n        return {\r\n          headerTitle: 'Client',\r\n          loginPath: 'client/login',\r\n        }\r\n      default:\r\n        return {\r\n          headerTitle: 'Unknown identity'\r\n        }\r\n\r\n    }\r\n  }\r\n\r\n  getPortalType = () => {\r\n    const pathName = this.props.location && this.props.location.pathname;\r\n    switch (pathName) {\r\n      case '/admin/forgot-password':\r\n        return 'admin'\r\n      case '/provider/forgot-password':\r\n        return 'provider'\r\n      case '/client/forgot-password':\r\n        return 'client'\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    localStorage.setItem('USER_TYPE', this.getPortalType());\r\n  }\r\n\r\n  render() {\r\n    const pathName = this.props.location && this.props.location.pathname;\r\n    const { email } = this.state;\r\n    const { loading } = this.props;\r\n\r\n    const { data } = this.props;\r\n\r\n    // Get errors from server\r\n    const errorFromServer = data && data.error ? data.error.response.data : {};\r\n    return (\r\n      <>\r\n        <AuthHeader\r\n          title=\"\"\r\n          lead={`${this.getConfigObject(pathName).headerTitle} Portal`}\r\n        />\r\n        <Container className=\"mt--8 pb-5 forgot-password\">\r\n          {loading && <Loading />}\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"5\" md=\"7\">\r\n              <Card className=\"bg-secondary border-0 mb-0\" style={{boxShadow: \"none\"}}>\r\n                <CardBody className=\"px-lg-5 py-lg-5\">\r\n                  <Form role=\"form\" onSubmit={this.resetPassword}>\r\n                    <FormGroup\r\n                      className={classnames(\"mb-3\", {\r\n                        focused: this.state.focusedEmail\r\n                      })}\r\n                    >\r\n                      <div className=\"text-center mb-4 help-text\">\r\n                      Please enter your email to reset your password\r\n                      </div>\r\n                      <InputGroup className=\"input-group-alternative\">\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                          <InputGroupText>\r\n                            <i className=\"ni ni-email-83\" />\r\n                          </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input\r\n                          placeholder=\"Email\"\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          onFocus={() => this.setState({ focusedEmail: true })}\r\n                          onBlur={() => this.setState({ focusedEmail: false })}\r\n                          onChange={this.handleChange}\r\n                          maxLength=\"255\"\r\n                          autoFocus=\"True\"\r\n                        />\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                    <ErrorSummary error={errorFromServer} className=\"mt-3\" />\r\n                    <div className=\"text-center submit-button\">\r\n                      <Button className=\"mt-4\" color=\"info\" type=\"submit\" disabled={!email}>\r\n                        Submit\r\n                      </Button>\r\n                    </div>\r\n                    <div className=\"text-center mt-4\">\r\n                      <Link to={this.getConfigObject(pathName).loginPath}>\r\n                        <small className=\"back\">\r\n                          <i className=\"fas fa-chevron-circle-left\" /> Go login page.\r\n                        </small>\r\n                      </Link>\r\n                    </div>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.resetPassword.isAuthenticated,\r\n    haveError: state.resetPassword.haveError,\r\n    loading: state.resetPassword.loading,\r\n    data: state.resetPassword.data,\r\n  };\r\n};\r\n\r\nconst mapActionToProps = dispatch => {\r\n  return {\r\n    sendMailToResetPassword: data => dispatch({ type: RESET_PASSWORD_ACTIONS.SEND_MAIL_RESET_PASSWORD, data }),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(ForgotPassword);\r\n","import ForgotPassword from './ForgotPassword.jsx';\r\n\r\nexport default ForgotPassword;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'span'\n};\n\nvar InputGroupText = function InputGroupText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-text'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroupText.propTypes = propTypes;\nInputGroupText.defaultProps = defaultProps;\nexport default InputGroupText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroup = function InputGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      size = props.size,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"size\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\nexport default InputGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport InputGroupText from './InputGroupText';\nvar propTypes = {\n  tag: tagPropType,\n  addonType: PropTypes.oneOf(['prepend', 'append']).isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroupAddon = function InputGroupAddon(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      addonType = props.addonType,\n      children = props.children,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"addonType\", \"children\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-' + addonType), cssModule); // Convenience to assist with transition\n\n  if (typeof children === 'string') {\n    return React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    }), React.createElement(InputGroupText, {\n      children: children\n    }));\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    children: children\n  }));\n};\n\nInputGroupAddon.propTypes = propTypes;\nInputGroupAddon.defaultProps = defaultProps;\nexport default InputGroupAddon;"],"sourceRoot":""}