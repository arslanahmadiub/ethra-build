{"version":3,"sources":["pages/provider/ProviderProfile/ProviderProfile.jsx","pages/provider/ProviderProfile/index.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/CardFooter.js","components/Form/ChangePassword.jsx"],"names":["statusList","cons","PROVIDER_STATUS_INFO","map","item","status","id","Number","provider_types","PROVIDER_TYPE","name","provider_type","isUsable","ProviderProfile","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","e","_e$target","value","wrap","_context","prev","next","target","state","errors","phoneNumber","length","keyPress","setState","defineProperty","props","changeStatus","stop","_x","apply","arguments","handleFile","event","_event$target","files","handleMultipleSelectProviderTypes","newArr","_e$target2","checked","find","selectedItemsString","filter","join","changeProviderTypes","handleError","field","_objectSpread2","check","key","isFormReady","objectSpread","_objectSpread3","getFormatPhone","text","substring","updateProviderAccount","data","providerTypes","providerData","_","isString","avatar","isNull","isEmpty","update","isDeleteAccount","isOpenSideBar","user","AuthHelper","getUserInfo","getDetail","user_id","_this2","document","addEventListener","_this3","avatarUrl","defaultAvatar","tempProviderTypesArr","split","_this$state","firstName","lastName","email","includes","String","newArrData","orderBy","afterPush","splice","findIndex","push","react_default","createElement","Container","className","fluid","Card","Row","onClick","openImageFile","click","CardImg","alt","src","isObject","URL","createObjectURL","CardHeader","Col","ref","onChange","type","accept","Button","color","CardBody","FormGroup","Label","Form","required","defaultValue","address","sort","i","md","Input","htmlFor","regex","maxlengths","disabled","headline","specialties","CardFooter","react_router_dom","to","ChangePassword","Component","mapActionToProps","connect","provider","loading","billing","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","string","cssModule","object","Tag","attributes","classes","defaultProps","__webpack_exports__","misMatchPasswordMessage","requiredMessage","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","toggle","isOpen","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","handleChangePassword","errorsPassword","handleCheckPasswordMatch","new_password","confirmPassword","tempError","updatePassword","_this$state2","old_password","newError","getApiUpdatePassword","passwordApi","then","res","toast","success","catch","err","response","error","password","_this$state3","react__WEBPACK_IMPORTED_MODULE_7___default","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","outline","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","components_Form__WEBPACK_IMPORTED_MODULE_16__","minLength","components_ErrorSummary__WEBPACK_IMPORTED_MODULE_17__","reactstrap__WEBPACK_IMPORTED_MODULE_15__"],"mappings":"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","file":"static/js/35.e62649b7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _, { xor } from \"lodash\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Container,\r\n  FormGroup,\r\n  Label,\r\n  CardImg,\r\n  CardFooter,\r\n} from \"reactstrap\";\r\nimport { FormInput } from \"components/Form\";\r\nimport AuthHelper from \"../../../helpers/AuthHelper\";\r\nimport {\r\n  getDetail,\r\n  update,\r\n  changeProviderTypes,\r\n  changeStatus,\r\n} from \"../../../redux/actions/providerAction\";\r\n\r\nimport ChangePassword from \"components/Form/ChangePassword.jsx\";\r\nimport defaultAvatar from \"../../../assets/img/theme/default-avatar.png\";\r\nimport cons from \"../../../constants\";\r\nimport \"./ProviderProfile.scss\";\r\n\r\nconst statusList = cons.PROVIDER_STATUS_INFO.map((item) => {\r\n  return {\r\n    status: item.status,\r\n    id: Number(item.id),\r\n  };\r\n});\r\n\r\nconst provider_types = cons.PROVIDER_TYPE.map((item) => {\r\n  return {\r\n    name: item.provider_type,\r\n    isUsable: false,\r\n    id: item.id,\r\n  };\r\n});\r\n\r\nclass ProviderProfile extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      errors: {},\r\n      isFormReady: {},\r\n      isDeleteAccount: false,\r\n      isOpenSideBar: false,\r\n      statusList: statusList,\r\n      avatar: null,\r\n      phoneNumber: \"\",\r\n      keyPress: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthHelper.getUserInfo();\r\n    this.props.getDetail(user.user_id);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    document.addEventListener(\"keydown\", (e) => {\r\n      if (this.state.keyPress !== e.key) {\r\n        this.setState({ keyPress: e.key });\r\n      }\r\n    });\r\n  }\r\n  handleChange = async (e) => {\r\n    const { name, value } = e.target;\r\n    delete this.state.errors[name];\r\n\r\n    if (\r\n      (name === \"phoneNumber\" && this.state.phoneNumber.length !== 12) ||\r\n      this.state.keyPress === \"Backspace\"\r\n    ) {\r\n      await this.setState({ [name]: value });\r\n      if (this.state.keyPress !== \"Backspace\") {\r\n        if (this.state.phoneNumber.length === 3) {\r\n          await this.setState({ phoneNumber: this.state.phoneNumber + \"-\" });\r\n        }\r\n        if (this.state.phoneNumber.length === 7) {\r\n          await this.setState({ phoneNumber: this.state.phoneNumber + \"-\" });\r\n        }\r\n      }\r\n    }\r\n    if (name !== \"phoneNumber\" && name !== \"status\") {\r\n      this.setState({\r\n        [name]: value,\r\n      });\r\n    }\r\n\r\n    if (name === \"status\") {\r\n      this.props.changeStatus(value);\r\n    }\r\n  };\r\n\r\n  handleFile = (event) => {\r\n    const { name, files } = event.target;\r\n    if (files.length) {\r\n      this.setState({\r\n        [name]: files[0],\r\n      });\r\n    }\r\n  };\r\n\r\n  handleMultipleSelectProviderTypes = (e, newArr) => {\r\n    const { id, checked } = e.target;\r\n    const selectedItem = newArr.find((item) => item.id === Number(id));\r\n    selectedItem.isUsable = checked;\r\n    const selectedItems = newArr\r\n      .filter((item) => item.isUsable)\r\n      .map((item) => Number(item.id));\r\n    const selectedItemsString = selectedItems.join(\",\");\r\n    this.props.changeProviderTypes(selectedItemsString);\r\n  };\r\n\r\n  handleError = (field, status) => {\r\n    if (status) {\r\n      let check = true;\r\n      for (let key in this.state.isFormReady) {\r\n        if (key !== field && key !== \"check\") {\r\n          check = check && this.state.isFormReady[key];\r\n        }\r\n      }\r\n      this.setState({\r\n        isFormReady: { ...this.state.isFormReady, [field]: true, check: check },\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isFormReady: {\r\n          ...this.state.isFormReady,\r\n          [field]: false,\r\n          check: false,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  getFormatPhone = (text) => {\r\n    if (!text || text === \"null\" || text === \"undefined\") {\r\n      return \"\";\r\n    } else {\r\n      let newText =\r\n        text.substring(0, 3) +\r\n        \"-\" +\r\n        text.substring(3, 6) +\r\n        \"-\" +\r\n        text.substring(6, text.length);\r\n      return newText;\r\n    }\r\n  };\r\n\r\n  updateProviderAccount = (id) => {\r\n    const { isFormReady } = this.state;\r\n    const data = {\r\n      ...this.state,\r\n      providerTypes: this.props.providerData.providerTypes,\r\n      id,\r\n    };\r\n    if (data.phoneNumber.length < 1) {\r\n      delete data[\"phoneNumber\"];\r\n      if (_.isString(data.avatar) || _.isNull(data.avatar)) {\r\n        delete data[\"avatar\"];\r\n      }\r\n      if (isFormReady.check || _.isEmpty(isFormReady)) {\r\n        this.props.update(data);\r\n      }\r\n    } else {\r\n      if (_.isString(data.avatar) || _.isNull(data.avatar)) {\r\n        delete data[\"avatar\"];\r\n      }\r\n      if (isFormReady.check || _.isEmpty(isFormReady)) {\r\n        this.props.update(data);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { providerData } = this.props;\r\n    const { providerTypes } = providerData;\r\n    const avatarUrl = providerData.avatar ? providerData.avatar : defaultAvatar;\r\n    const tempProviderTypesArr = providerTypes && providerTypes.split(\",\");\r\n    const { errors, isFormReady, firstName, lastName, email, avatar } =\r\n      this.state;\r\n    const formValid = firstName && email && lastName && isFormReady.check;\r\n\r\n    const newArr = provider_types.map((item) => ({\r\n      ...item,\r\n      isUsable: tempProviderTypesArr\r\n        ? tempProviderTypesArr.includes(String(item.id))\r\n        : false,\r\n    }));\r\n    let newArrData = _.orderBy(newArr, [\"name\"], [\"asc\"]);\r\n    let afterPush = newArrData.splice(\r\n      newArrData.findIndex((item) => item.name === \"Other\"),\r\n      1\r\n    )[0];\r\n    newArrData.push(afterPush);\r\n\r\n    return (\r\n      <Container className=\"mt-6 provider-profile\" fluid>\r\n        <Card className=\"mt-3\">\r\n          <Row className=\"align-items-center card-profile-image\">\r\n            <div onClick={() => this.openImageFile.click()}>\r\n              <CardImg\r\n                alt=\"...\"\r\n                className=\"rounded-circle custom-avatar avatar\"\r\n                src={\r\n                  _.isObject(avatar) ? URL.createObjectURL(avatar) : avatarUrl\r\n                }\r\n              />\r\n            </div>\r\n          </Row>\r\n\r\n          <CardHeader className=\"text-center border-0 pb-0\">\r\n            <Row className=\"justify-content-center mt-4\">\r\n              <Col>\r\n                <input\r\n                  ref={(ref) => (this.openImageFile = ref)}\r\n                  onChange={this.handleFile}\r\n                  className=\"d-none\"\r\n                  type=\"file\"\r\n                  name=\"avatar\"\r\n                  id=\"roomImage\"\r\n                  accept=\".jpg,.gif,.jpeg,.png\"\r\n                />\r\n                <Button\r\n                  className=\"mt-4 align-items-center\"\r\n                  color=\"link\"\r\n                  onClick={() => this.openImageFile.click()}\r\n                >\r\n                  Change Image\r\n                </Button>\r\n                <div className=\"error-text mt-3\">{errors[\"image\"]}</div>\r\n              </Col>\r\n            </Row>\r\n            <h1>\r\n              <b> My Profile</b>\r\n            </h1>\r\n          </CardHeader>\r\n          <CardBody className=\"text-center border-0 pb-0 mx-3 provider-profile__body\">\r\n            <FormGroup>\r\n              <Row>\r\n                <Label className=\"form-control-label\">\r\n                  First Name\r\n                  <sup className=\"text-required\">*</sup>\r\n                </Label>\r\n              </Row>\r\n              <Row className=\"d-block\">\r\n                <FormInput\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  handleError={this.handleError}\r\n                  errors={errors[\"firstName\"]}\r\n                  onChange={this.handleChange}\r\n                  required={true}\r\n                  defaultValue={providerData.firstName || \"\"}\r\n                />\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Row>\r\n                <Label className=\"form-control-label\">\r\n                  Last Name\r\n                  <sup className=\"text-required\">*</sup>\r\n                </Label>\r\n              </Row>\r\n              <Row className=\"d-block\">\r\n                <FormInput\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  handleError={this.handleError}\r\n                  errors={errors[\"lastName\"]}\r\n                  onChange={this.handleChange}\r\n                  required={true}\r\n                  defaultValue={providerData.lastName || \"\"}\r\n                />\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Row>\r\n                <Label className=\"form-control-label\">Residing City</Label>\r\n              </Row>\r\n              <Row className=\"d-block\">\r\n                <FormInput\r\n                  type=\"text\"\r\n                  name=\"address\"\r\n                  handleError={this.handleError}\r\n                  errors={errors[\"address\"]}\r\n                  onChange={this.handleChange}\r\n                  defaultValue={providerData.address || \"\"}\r\n                />\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Row>\r\n                <Label className=\"form-control-label\">Provider Type</Label>\r\n              </Row>\r\n              <Row>\r\n                {newArrData.sort().map((item, i) => {\r\n                  return (\r\n                    <Col\r\n                      md=\"4\"\r\n                      key={i}\r\n                      className=\"custom-control custom-checkbox text-left mb-3\"\r\n                    >\r\n                      <Input\r\n                        className=\"custom-control-input\"\r\n                        id={item.id}\r\n                        type=\"checkbox\"\r\n                        name={item.name}\r\n                        checked={item.isUsable}\r\n                        onChange={(e) =>\r\n                          this.handleMultipleSelectProviderTypes(e, newArrData)\r\n                        }\r\n                      />\r\n                      <Label className=\"custom-control-label\" htmlFor={item.id}>\r\n                        {item.name}\r\n                      </Label>\r\n                    </Col>\r\n                  );\r\n                })}\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Row>\r\n                <Label className=\"form-control-label\">Phone Number</Label>\r\n              </Row>\r\n              <Row className=\"d-block\">\r\n                <FormInput\r\n                  type=\"text\"\r\n                  name=\"phoneNumber\"\r\n                  handleError={this.handleError}\r\n                  errors={errors[\"phoneNumber\"]}\r\n                  onChange={this.handleChange}\r\n                  regex=\"phoneNumber\"\r\n                  defaultValue={this.getFormatPhone(providerData.phoneNumber)}\r\n                  value={this.state.phoneNumber}\r\n                  required={true}\r\n                  maxlengths={15}\r\n                />\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Row>\r\n                <Label className=\"form-control-label\">\r\n                  E-mail\r\n                  <sup className=\"text-required\">*</sup>\r\n                </Label>\r\n              </Row>\r\n              <Row className=\"d-block\">\r\n                <FormInput\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  handleError={this.handleError}\r\n                  errors={errors[\"email\"]}\r\n                  onChange={this.handleChange}\r\n                  regex=\"email\"\r\n                  required={true}\r\n                  disabled={true}\r\n                  defaultValue={providerData.email || \"\"}\r\n                />\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Row>\r\n                <Label className=\"form-control-label\">\r\n                  Professional Headline\r\n                </Label>\r\n              </Row>\r\n              <Row className=\"d-block\">\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"headline\"\r\n                  onChange={this.handleChange}\r\n                  defaultValue={providerData.headline || \"\"}\r\n                />\r\n              </Row>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Row>\r\n                <Label className=\"form-control-label\">Specialties</Label>\r\n              </Row>\r\n              <Row className=\"d-block\">\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"specialties\"\r\n                  onChange={this.handleChange}\r\n                  defaultValue={providerData.specialties || \"\"}\r\n                />\r\n              </Row>\r\n            </FormGroup>\r\n          </CardBody>\r\n          <CardFooter className=\"pb-md-4\">\r\n            <Row className=\"justify-content-around\">\r\n              <Link to={`/provider/calendar`}>\r\n                <Button color=\"secondary\"> CANCEL</Button>\r\n              </Link>\r\n              <Button\r\n                color=\"success\"\r\n                disabled={false && formValid}\r\n                onClick={() => this.updateProviderAccount(providerData.id)}\r\n              >\r\n                Save Changes\r\n              </Button>\r\n            </Row>\r\n          </CardFooter>\r\n        </Card>\r\n        <ChangePassword />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    providerData: state.provider.data,\r\n    loading: state.billing.loading,\r\n  };\r\n};\r\n\r\nconst mapActionToProps = {\r\n  getDetail,\r\n  update,\r\n  changeProviderTypes,\r\n  changeStatus,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(ProviderProfile);\r\n","import ProviderProfile from './ProviderProfile'\r\n\r\nexport default ProviderProfile","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardFooter = function CardFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-footer'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardFooter.propTypes = propTypes;\nCardFooter.defaultProps = defaultProps;\nexport default CardFooter;","import React, { Component } from 'react';\r\nimport _ from \"lodash\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    FormGroup,\r\n    Label,\r\n    CardFooter,\r\n    Button,\r\n    Collapse,\r\n} from \"reactstrap\";\r\nimport { FormInput } from 'components/Form';\r\nimport ErrorSummary from 'components/ErrorSummary';\r\nimport passwordApi from '../../api/passwordApi'\r\nimport { toast } from 'react-toastify';\r\n\r\nconst misMatchPasswordMessage = \"Password does not match\";\r\nconst requiredMessage = \"This Field is required\";\r\n\r\nclass ChangePassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n            password: '',\r\n            old_password: '',\r\n            new_password: '',\r\n            confirmPassword: '',\r\n            errorsPassword: {},\r\n            errors: {},\r\n            isFormReady: {},\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({ isOpen: !this.state.isOpen })\r\n    }\r\n\r\n    handleError = (field, status) => {\r\n        if (status) {\r\n            let check = true;\r\n            for (let key in this.state.isFormReady) {\r\n                if (key !== field && key !== 'check') {\r\n                    check = check && this.state.isFormReady[key];\r\n                }\r\n            }\r\n            this.setState({ isFormReady: { ...this.state.isFormReady, [field]: true, check: check } });\r\n        } else {\r\n            this.setState({ isFormReady: { ...this.state.isFormReady, [field]: false, check: false } });\r\n        }\r\n    }\r\n\r\n    handleChangePassword = e => {\r\n        const { name, value } = e.target;\r\n        delete this.state.errors[\"nonFieldErrors\"];\r\n        delete this.state.errors[name];\r\n        delete this.state.errorsPassword[name];\r\n        this.setState({ [name]: value }, (name) => this.handleCheckPasswordMatch(name));\r\n    }\r\n\r\n    handleCheckPasswordMatch = (name) => {\r\n        const { new_password, confirmPassword, errorsPassword } = this.state;\r\n        if (new_password && confirmPassword && new_password !== confirmPassword) {\r\n            this.setState({ errorsPassword: { ...errorsPassword, confirmPassword: [misMatchPasswordMessage] } })\r\n        } else {\r\n            const tempError = errorsPassword;\r\n            delete tempError['confirmPassword'];\r\n            this.setState({ errorsPassword: tempError });\r\n        }\r\n    }\r\n\r\n    updatePassword = () => {\r\n        const { new_password, old_password, errorsPassword, isFormReady, confirmPassword } = this.state;\r\n        const data = { new_password, old_password, confirmPassword }\r\n        let newError = {}\r\n        for (const key in data) {\r\n            if (data[key] === '') {\r\n                newError[key] = [requiredMessage]\r\n            }\r\n            this.setState({ errorsPassword: { ...errorsPassword, ...newError } })\r\n        }\r\n        if (_.isEmpty(errorsPassword) && isFormReady.new_password && isFormReady.confirmPassword && isFormReady.old_password && new_password === confirmPassword) {\r\n            this.getApiUpdatePassword(data)\r\n        }\r\n    }\r\n\r\n    getApiUpdatePassword = (data) => {\r\n        passwordApi.update(data).then(res => {\r\n            toast.success(\"Update password success\");\r\n        }).catch(err => {\r\n            const errors = err.response && err.response.data;\r\n            if (errors) {\r\n                this.setState({ errors });\r\n            }\r\n            toast.error(\"Update password fail\");\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { isOpen, errorsPassword, errors } = this.state\r\n        return (\r\n            <Card className=\"my-3\">\r\n                <div className=\"text-center mt-3 mb-3 mb-0\">\r\n                    <Button color=\"info\" outline onClick={this.toggle}>\r\n                        Change Password\r\n                        {!isOpen ?\r\n                            <i className=\"fas fa-chevron-down fa-lg ml-2\" /> :\r\n                            <i className=\"fas fa-chevron-up fa-lg ml-2\" />}\r\n                    </Button>\r\n                </div>\r\n                <Collapse isOpen={isOpen}>\r\n                    <CardBody>\r\n                        <FormGroup>\r\n                            <Label className=\"form-control-label\" >\r\n                                Current Password\r\n                            <sup className=\"text-required\">*</sup>\r\n                            </Label>\r\n                            <FormInput\r\n                                type=\"password\"\r\n                                name=\"old_password\"\r\n                                handleError={this.handleError}\r\n                                errors={errorsPassword['old_password']}\r\n                                onChange={this.handleChangePassword}\r\n                                required={true}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label className=\"form-control-label\" >\r\n                                New Password\r\n                            <sup className=\"text-required\">*</sup>\r\n                            </Label>\r\n                            <FormInput\r\n                                type=\"password\"\r\n                                name=\"new_password\"\r\n                                handleError={this.handleError}\r\n                                errors={errorsPassword['new_password']}\r\n                                onChange={this.handleChangePassword}\r\n                                minLength={8}\r\n                                regex=\"password\"\r\n                                required={true}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label className=\"form-control-label\" >\r\n                                Confirm Password\r\n                            <sup className=\"text-required\">*</sup>\r\n                            </Label>\r\n                            <FormInput\r\n                                type=\"password\"\r\n                                name=\"confirmPassword\"\r\n                                handleError={this.handleError}\r\n                                errors={errorsPassword['confirmPassword']}\r\n                                onChange={this.handleChangePassword}\r\n                                required={true}\r\n                            />\r\n                        </FormGroup>\r\n                        <ErrorSummary error={errors} className=\"mt-3\" />\r\n                    </CardBody>\r\n                    <CardFooter className=\"text-center\">\r\n                        <Button color=\"info\" onClick={this.updatePassword}>Update Password</Button>\r\n                    </CardFooter>\r\n                </Collapse>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChangePassword;"],"sourceRoot":""}