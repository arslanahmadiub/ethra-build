{"version":3,"sources":["pages/client/MainScreen/ProviderMessage.jsx","pages/client/MainScreen/ClientMessage.jsx","pages/client/MainScreen/MainScreen.jsx","pages/client/MainScreen/index.js","helpers/FileHelper.js"],"names":["ListFile","props","files","length","map","file","i","fileName","getFileNameFromPath","messageFile","react_default","a","createElement","key","className","href","target","rel","RenderContent","message","Number","messageType","cons","MESSAGE_TYPE","DEFAULT_MESSAGE","ProviderMessage_RenderManualMessage","content","APPOINTMENT_MESSAGE","ProviderMessage_RenderAppointmentMessage","RenderManualMessage","messageText","__html","dangerouslySetInnerHTML","RenderAppointmentMessage","_appointment$fields","JSON","parse","fields","start_time","end_time","react_router_dom","to","moment","concat","format","ProviderMessage","timeCreate","providerData","providerName","providerAvatar","_","isNull","avatar","defaultAvatar","isNotification","Fragment","Row","src","alt","ProviderMessage_RenderContent","ProviderMessage_ListFile","ClientMessage","client","clientName","initLetter","firstName","charAt","lastName","ClientMessage_ListFile","style","display","width","height","background","borderRadius","justifyContent","alignItems","fontSize","color","defaultState","attachments","isShowWelcomeClientModal","defaultFilters","ordering","desc","MainScreen","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","el","React","createRef","getProviderInfo","user","AuthHelper","getUserInfo","clientApi","detail","user_id","then","res","getDetail","userProvider","catch","err","console","error","scrollToBottom","scrollIntoView","block","behavior","inline","handleChange","value","setState","handleUploadFile","e","tempArr","keys","forEach","push","handleSubmit","_this$state","state","stripHtml","data","clientSendMessage","clearData","closeWelcomeClientModal","id","clientData","isFirstLogin","update","errors","window","location","reload","response","focusFirstError","toast","filters","_this2","getProviderMessage","setInterval","clearInterval","_this3","_this$props","messageData","listMessage","result","_this$state2","fileCount","getUserFullName","Container","fluid","Card","CardBody","ref","item","getDateTime","createdAt","type","fromType","FROM_TYPE","CLIENT","MainScreen_ClientMessage","PROVIDER","MainScreen_ProviderMessage","providerId","CardFooter","lib_default","onChange","name","modules","toolbar","list","placeholder","Input","accept","multiple","htmlFor","Button","disabled","outline","onClick","MainScreen_WelcomeClientModal","isOpen","toggle","fullname","Component","WelcomeClientModal","Modal","assign","size","keyboard","backdrop","ModalBody","ModalFooter","mapActionToProps","connect","navBars","loading","provider","path","replace","split","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/46.cd5d6f53.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport { Row } from \"reactstrap\";\r\nimport cons from \"../../../constants\";\r\nimport { getFileNameFromPath } from \"../../../helpers/FileHelper\";\r\nimport defaultAvatar from \"../../../assets/img/theme/default-avatar.png\";\r\nimport moment from \"moment\";\r\n\r\nfunction ProviderMessage(props) {\r\n  const { timeCreate, providerData, files, message, providerName } = props;\r\n\r\n  const providerAvatar =\r\n    _.isNull(providerData) || _.isNull(providerData.avatar)\r\n      ? defaultAvatar\r\n      : providerData.avatar;\r\n  const isNotification =\r\n    message.messageType === cons.MESSAGE_TYPE.APPOINTMENT_MESSAGE\r\n      ? true\r\n      : false;\r\n  return (\r\n    <>\r\n      {isNotification ? (\r\n        <Row className=\"user d-flex align-items-start justify-content-center\">\r\n          {/* <div className=\"text-center msg-box\">\r\n            <div className=\"notification\">\r\n              <RenderContent message={message} />\r\n            </div>\r\n          </div> */}\r\n        </Row>\r\n      ) : (\r\n        <Row className=\"user d-flex align-items-start justify-content-start\">\r\n          <div className=\"user__avatar mr-2\">\r\n            <img\r\n              src={providerAvatar}\r\n              className=\"avatar rounded-circle\"\r\n              alt=\"avatar\"\r\n            />\r\n            <span className=\"user__avatar__name\">{providerName}</span>\r\n          </div>\r\n          <div className=\"text-left msg-box\">\r\n            <div className=\"message-content\">\r\n              <RenderContent message={message} />\r\n              <div className={files.length > 0 ? \"file-list mt-3\" : \"d-none\"}>\r\n                <b>Attachments</b>\r\n                {files.length > 0 ? <ListFile files={files} /> : \"\"}\r\n              </div>\r\n            </div>\r\n            <span className=\"time_date mr-2 mt-2\"> {timeCreate} </span>\r\n          </div>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst ListFile = (props) => {\r\n  const { files } = props;\r\n  return (\r\n    files.length > 0 &&\r\n    files.map((file, i) => {\r\n      const fileName = getFileNameFromPath(file.messageFile);\r\n      return (\r\n        <div key={i} className=\"d-flex justify-content-start\">\r\n          <a\r\n            className=\"file-name\"\r\n            href={file.messageFile}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <li>{fileName}</li>\r\n          </a>\r\n        </div>\r\n      );\r\n    })\r\n  );\r\n};\r\n\r\nconst RenderContent = (props) => {\r\n  const { message } = props;\r\n  switch (Number(message.messageType)) {\r\n    case cons.MESSAGE_TYPE.DEFAULT_MESSAGE:\r\n      return <RenderManualMessage content={message.content} />;\r\n    case cons.MESSAGE_TYPE.APPOINTMENT_MESSAGE:\r\n      return <RenderAppointmentMessage content={message.content} />;\r\n    default:\r\n      return <RenderManualMessage content={message.content} />;\r\n  }\r\n};\r\n\r\nconst RenderManualMessage = (props) => {\r\n  const { content } = props;\r\n  const messageText = { __html: content };\r\n  return <div dangerouslySetInnerHTML={messageText} />;\r\n};\r\n\r\nconst RenderAppointmentMessage = (props) => {\r\n  const { content } = props;\r\n  const appointment = JSON.parse(content)[0];\r\n  const { start_time, end_time } = appointment.fields;\r\n  return (\r\n    <Link to={`/client/appointments`}>\r\n      <i>Your provider has added a new appointment</i>\r\n      <span className=\"time_date mr-2 mt-2\">\r\n        from {moment(`1-1-1 ${start_time}`).format(\"hh:mm A\")} to{\" \"}\r\n        {moment(`1-1-1 ${end_time}`).format(\"hh:mm A\")}\r\n      </span>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ProviderMessage;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Row } from \"reactstrap\";\r\nimport { getFileNameFromPath } from \"../../../helpers/FileHelper\";\r\nimport defaultAvatar from \"../../../assets/img/theme/default-avatar.png\";\r\n\r\nfunction ClientMessage(props) {\r\n  const { client, content, files, timeCreate, clientName } = props;\r\n\r\n  let initLetter =\r\n    client && client.firstName.charAt(0) + client.lastName.charAt(0);\r\n\r\n  const message = { __html: content };\r\n  const clientAvatar =\r\n    _.isNull(client) || _.isNull(client.avatar) ? defaultAvatar : client.avatar;\r\n  return (\r\n    <Row className=\"user d-flex align-items-start justify-content-end\">\r\n      <div className=\"msg-box\">\r\n        <div className=\"message-content text-left\">\r\n          <div dangerouslySetInnerHTML={message} />\r\n          <div className={files.length > 0 ? \"file-list mt-3\" : \"d-none\"}>\r\n            <b>Attachments</b>\r\n            {files.length > 0 ? <ListFile files={files} /> : \"\"}\r\n          </div>\r\n        </div>\r\n        <span className=\"time_date text-right mr-2 mt-2\">{timeCreate}</span>\r\n      </div>\r\n\r\n      <div className=\"user__avatar ml-2\">\r\n        {/* <img\r\n          src={clientAvatar}\r\n          className=\"avatar rounded-circle\"\r\n          alt=\"avatar\"\r\n        /> */}\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"50px\",\r\n            height: \"50px\",\r\n            background: \"gray\",\r\n            borderRadius: \"50%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <p style={{ fontSize: \"1.4rem\", color: \"white\" }}>{initLetter}</p>\r\n        </div>\r\n\r\n        <span className=\"user__avatar__name\">{clientName}</span>\r\n      </div>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ClientMessage;\r\n\r\nconst ListFile = (props) => {\r\n  const { files } = props;\r\n  return (\r\n    files.length > 0 &&\r\n    files.map((file, i) => {\r\n      const fileName = getFileNameFromPath(file.messageFile);\r\n      return (\r\n        <div key={i} className=\"d-flex justify-content-start\">\r\n          <a\r\n            className=\"file-name\"\r\n            href={file.messageFile}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <li>{fileName}</li>\r\n          </a>\r\n        </div>\r\n      );\r\n    })\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Container,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport ReactQuill from \"react-quill\";\r\nimport AuthHelper from \"helpers/AuthHelper\";\r\nimport { getDateTime, getUserFullName, stripHtml } from \"helpers/UtilsHelper\";\r\nimport {\r\n  getProviderMessage,\r\n  clientSendMessage,\r\n} from \"../../../redux/actions/messageAction\";\r\nimport { getDetail } from \"../../../redux/actions/providerAction\";\r\nimport clientApi from \"../../../api/clientApi\";\r\nimport ProviderMessage from \"./ProviderMessage.jsx\";\r\nimport ClientMessage from \"./ClientMessage.jsx\";\r\nimport cons from \"../../../constants\";\r\nimport \"./MainScreen.scss\";\r\n\r\nconst defaultState = () => {\r\n  return {\r\n    content: \"\",\r\n    files: [],\r\n    attachments: [],\r\n    isShowWelcomeClientModal: true,\r\n  };\r\n};\r\nconst defaultFilters = () => {\r\n  return {\r\n    ordering: \"created_at\",\r\n    desc: false,\r\n  };\r\n};\r\n\r\nclass MainScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = defaultState();\r\n    this.filters = defaultFilters();\r\n  }\r\n  el = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.getProviderInfo();\r\n    this.props.getProviderMessage(this.filters, this.scrollToBottom);\r\n    this.getProviderMessage = setInterval(\r\n      () => this.props.getProviderMessage(this.filters),\r\n      5000\r\n    );\r\n  }\r\n\r\n  getProviderInfo = () => {\r\n    const user = AuthHelper.getUserInfo();\r\n    clientApi\r\n      .detail(user.user_id)\r\n      .then((res) => {\r\n        this.props.getDetail(res.userProvider);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.getProviderMessage);\r\n  }\r\n\r\n  scrollToBottom = () => {\r\n    this.el.scrollIntoView(false);\r\n    this.el.scrollIntoView({ block: \"nearest\" });\r\n    this.el.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"nearest\",\r\n      inline: \"nearest\",\r\n    });\r\n  };\r\n\r\n  handleChange = (value) => {\r\n    this.setState({ content: value });\r\n  };\r\n\r\n  handleUploadFile = (e) => {\r\n    let tempArr = [];\r\n    if (e.target.files.length) {\r\n      Object.keys(e.target.files).forEach((i) => {\r\n        tempArr.push(e.target.files[i]);\r\n      });\r\n      this.setState({\r\n        files: [...tempArr],\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    let { content, files } = this.state;\r\n    if (stripHtml(content)) {\r\n      let data = {\r\n        content,\r\n        files: files,\r\n      };\r\n      this.props.clientSendMessage(data);\r\n      this.clearData();\r\n    }\r\n  };\r\n\r\n  clearData = () => {\r\n    this.setState(defaultState());\r\n  };\r\n\r\n  closeWelcomeClientModal = () => {\r\n    this.setState({ isShowWelcomeClientModal: false });\r\n\r\n    const data = {\r\n      id: this.props.clientData.id,\r\n      isFirstLogin: false,\r\n    };\r\n    clientApi\r\n      .update(data)\r\n      .then((res) => {\r\n        this.setState({ errors: {} });\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        const errors = err.response.data;\r\n        this.focusFirstError(errors);\r\n        this.setState({ errors });\r\n        toast.error(\"Update Fail\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { clientData, messageData, providerData } = this.props;\r\n    const listMessage = messageData.result;\r\n    const { content, files, isShowWelcomeClientModal } = this.state;\r\n    const fileCount = files.length;\r\n    const clientName = getUserFullName(clientData);\r\n    const providerName = getUserFullName(providerData);\r\n    return (\r\n      <Container fluid className=\"main\">\r\n        <Card className=\"mt-3 mx-auto\">\r\n          <CardBody>\r\n            <div\r\n              ref={(el) => {\r\n                this.el = el;\r\n              }}\r\n            >\r\n              {listMessage &&\r\n                listMessage.map((item) => {\r\n                  const content = item.content;\r\n                  const timeCreate = getDateTime(\r\n                    item.createdAt,\r\n                    \"MM/DD/YYYY - hh:mm:ss a\"\r\n                  );\r\n                  const type = item.fromType || 0;\r\n                  const files = item.files;\r\n                  if (type === cons.FROM_TYPE.CLIENT) {\r\n                    return (\r\n                      <ClientMessage\r\n                        key={item.id}\r\n                        client={clientData}\r\n                        timeCreate={timeCreate}\r\n                        content={content}\r\n                        files={files}\r\n                        clientName={clientName}\r\n                      />\r\n                    );\r\n                  } else if (type === cons.FROM_TYPE.PROVIDER) {\r\n                    return (\r\n                      <ProviderMessage\r\n                        key={item.id}\r\n                        providerId={clientData.userProvider}\r\n                        providerData={providerData}\r\n                        timeCreate={timeCreate}\r\n                        files={files}\r\n                        message={item}\r\n                        providerName={providerName}\r\n                      />\r\n                    );\r\n                  }\r\n                  return \"\";\r\n                })}\r\n            </div>\r\n          </CardBody>\r\n          <CardFooter className=\"client-screen-messages\">\r\n            <p className=\"disclaimer\">\r\n              <small>\r\n                This messaging platform is not intended for immediate support,\r\n                crisis intervention, or as a replacement of therapeutic\r\n                services. If you are experiencing an emergency or crisis and\r\n                need immediate help, call 911 or go to the nearest emergency\r\n                room\r\n              </small>\r\n            </p>\r\n            <ReactQuill\r\n              className=\"mt-3\"\r\n              value={content}\r\n              onChange={this.handleChange}\r\n              name=\"content\"\r\n              modules={{\r\n                toolbar: [\r\n                  [\"bold\", \"italic\", \"underline\"],\r\n                  [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n                  [\"link\", \"blockquote\", \"code\"],\r\n                ],\r\n              }}\r\n              placeholder=\"This message is sent directly to your provider's portal\"\r\n            />\r\n            <Row className=\"my-3 md-ml-2 align-items-center d-flex justify-content-end mr-1\">\r\n              <div>\r\n                <Input\r\n                  accept=\"file/*\"\r\n                  id=\"text-button-file\"\r\n                  className=\"d-none\"\r\n                  type=\"file\"\r\n                  multiple\r\n                  onChange={this.handleUploadFile}\r\n                />\r\n                <div className=\"mr-3 mt-3\">\r\n                  <label className=\"mr-2 text-muted\">\r\n                    {fileCount > 0\r\n                      ? fileCount > 1\r\n                        ? `${fileCount} files`\r\n                        : `${fileCount} file`\r\n                      : \"\"}\r\n                  </label>\r\n                  <label htmlFor=\"text-button-file\" className=\"cursor-pointer\">\r\n                    <i className=\"fas fa-paperclip fa-lg\"></i>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <Button\r\n                className=\"text-right\"\r\n                color=\"info\"\r\n                disabled={!content}\r\n                outline\r\n                onClick={this.handleSubmit}\r\n              >\r\n                <i className=\"fas fa-paper-plane\"></i> Send\r\n              </Button>\r\n            </Row>\r\n          </CardFooter>\r\n        </Card>\r\n        <WelcomeClientModal\r\n          isOpen={clientData.isFirstLogin && isShowWelcomeClientModal}\r\n          toggle={this.closeWelcomeClientModal}\r\n          fullname={clientName}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst WelcomeClientModal = (props) => {\r\n  return (\r\n    <Modal {...props} size=\"md\" keyboard={false} backdrop=\"static\">\r\n      <ModalBody>\r\n        <p>\r\n          Hi {props.fullname}, Thank you for registering your account with\r\n          Ethera! You can now use this secure client portal to track your\r\n          appointments, download forms, make payments, and directly message your\r\n          provider. If you have any questions about using the portal, please\r\n          email <a href=\"mailto:support@myethera.com\">support@myethera.com</a>.\r\n        </p>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <div className=\"w-100 text-center\">\r\n          <Button color=\"primary\" onClick={props.toggle}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    clientData: state.navBars.data,\r\n    messageData: state.message.data,\r\n    loading: state.message.loading,\r\n    providerData: state.provider.data,\r\n  };\r\n};\r\n\r\nconst mapActionToProps = { getProviderMessage, clientSendMessage, getDetail };\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(MainScreen);\r\n","import MainScreen from './MainScreen';\r\n\r\nexport default MainScreen;","export function getFileNameFromPath(path) {\r\n    try {\r\n        // eslint-disable-next-line\r\n        return path.replace(/^.*[\\\\\\/]/, '').split('?')[0];\r\n    } catch (error) {\r\n        return 'File error';\r\n    }\r\n}"],"sourceRoot":""}