{"version":3,"sources":["pages/provider/Community/index.js","pages/provider/Community/Community.jsx","../node_modules/reactstrap/es/CardHeader.js","helpers/FileHelper.js","../node_modules/reactstrap/es/InputGroup.js","../node_modules/reactstrap/es/ModalHeader.js","../node_modules/reactstrap/es/ButtonDropdown.js","components/Community/ListComment.jsx","components/Community/Post.jsx","components/Community/index.js"],"names":["Community","dispatch","useDispatch","_useState","useState","limit","Object","slicedToArray","_useState3","_useState4","offset","setOffset","postData","useSelector","state","post","data","loading","useEffect","getPostList","postList","result","react_default","a","createElement","Fragment","Loading","map","index","className","key","editable","length","count","Row","Button","onClick","tempOffset","loadMore","color","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","string","cssModule","object","CardHeader","props","Tag","attributes","classes","defaultProps","__webpack_exports__","getFileNameFromPath","path","replace","split","error","d","size","InputGroup","wrapTag","toggle","func","children","node","closeAriaLabel","charCode","oneOfType","number","close","ModalHeader","closeButton","WrapTag","closeIcon","String","fromCharCode","type","aria-label","aria-hidden","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","_Dropdown__WEBPACK_IMPORTED_MODULE_3__","ButtonDropdown","group","ListComment","commentData","commentId","id","postId","_useState2","comment","setComment","dropdownOpen","setDropdownOpen","_useState5","_useState6","modal","setModal","toggleUpdate","isDisable","stripHtml","userName","createdBy","getUserFullName","alt","concat","src","avatar","href","e","preventDefault","updatedAt","getDateTime","isOpen","DropdownToggle","DropdownMenu","DropdownItem","divider","deleteComment","style","fontSize","fontWeight","Modal","onSubmit","updateComment","ModalBody","Input","defaultValue","onChange","target","value","autoFocus","ModalFooter","disabled","ListFile","listFiles","file","i","fullName","postFile","rel","Post","content","setContent","_useState7","_useState8","Card","deletePost","files","comments","rep","addComment","placeholder","rows","name","updatePost","Community_Post"],"mappings":"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","file":"static/js/22.749c01a2.chunk.js","sourcesContent":["import Community from './Community'\r\n\r\nexport default Community","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Button, Row } from \"reactstrap\";\r\nimport { getPostList, loadMore } from \"../../../redux/actions/postAction\";\r\nimport { Post } from \"../../../components/Community\";\r\nimport Loading from \"../../../components/Loading\";\r\nimport \"./Community.scss\";\r\n\r\nexport default function Community() {\r\n  const dispatch = useDispatch();\r\n  const [limit] = useState(5);\r\n  const [offset, setOffset] = useState(0);\r\n  const postData = useSelector((state) => state.post.data);\r\n  const loading = useSelector((state) => state.post.loading);\r\n\r\n  useEffect(() => {\r\n    dispatch(getPostList({ limit, offset }));\r\n  }, []);\r\n\r\n  const handleLoadMore = () => {\r\n    const tempOffset = offset + limit;\r\n    setOffset(tempOffset);\r\n    dispatch(loadMore({ limit, offset: tempOffset }));\r\n  };\r\n\r\n  const postList = postData.result;\r\n  return (\r\n    <>\r\n      {loading && <Loading />}\r\n      {postList &&\r\n        postList.map((data, index) => {\r\n          return (\r\n            <div className=\"post-list container\" key={index}>\r\n              <Post editable={false} post={data} />\r\n            </div>\r\n          );\r\n        })}\r\n      {postData.result && postData.result.length >= postData.count ? (\r\n        \"\"\r\n      ) : (\r\n        <Row className=\"d-flex justify-content-center mb-3\">\r\n          <Button onClick={handleLoadMore} color=\"link\">\r\n            Load More\r\n          </Button>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","export function getFileNameFromPath(path) {\r\n    try {\r\n        // eslint-disable-next-line\r\n        return path.replace(/^.*[\\\\\\/]/, '').split('?')[0];\r\n    } catch (error) {\r\n        return 'File error';\r\n    }\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroup = function InputGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      size = props.size,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"size\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\nexport default InputGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  wrapTag: tagPropType,\n  toggle: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  closeAriaLabel: PropTypes.string,\n  charCode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  close: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'h5',\n  wrapTag: 'div',\n  closeAriaLabel: 'Close',\n  charCode: 215\n};\n\nvar ModalHeader = function ModalHeader(props) {\n  var closeButton;\n\n  var className = props.className,\n      cssModule = props.cssModule,\n      children = props.children,\n      toggle = props.toggle,\n      Tag = props.tag,\n      WrapTag = props.wrapTag,\n      closeAriaLabel = props.closeAriaLabel,\n      charCode = props.charCode,\n      close = props.close,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"children\", \"toggle\", \"tag\", \"wrapTag\", \"closeAriaLabel\", \"charCode\", \"close\"]);\n\n  var classes = mapToCssModules(classNames(className, 'modal-header'), cssModule);\n\n  if (!close && toggle) {\n    var closeIcon = typeof charCode === 'number' ? String.fromCharCode(charCode) : charCode;\n    closeButton = React.createElement(\"button\", {\n      type: \"button\",\n      onClick: toggle,\n      className: mapToCssModules('close', cssModule),\n      \"aria-label\": closeAriaLabel\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, closeIcon));\n  }\n\n  return React.createElement(WrapTag, _extends({}, attributes, {\n    className: classes\n  }), React.createElement(Tag, {\n    className: mapToCssModules('modal-title', cssModule)\n  }, children), close || closeButton);\n};\n\nModalHeader.propTypes = propTypes;\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  children: PropTypes.node\n};\n\nvar ButtonDropdown = function ButtonDropdown(props) {\n  return React.createElement(Dropdown, _extends({\n    group: true\n  }, props));\n};\n\nButtonDropdown.propTypes = propTypes;\nexport default ButtonDropdown;","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  ButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport {\r\n  getDateTime,\r\n  stripHtml,\r\n  getUserFullName,\r\n} from \"../../helpers/UtilsHelper\";\r\nimport { updateComment, deleteComment } from \"../../redux/actions/postAction\";\r\nimport avatar from \"../../assets/img/theme/default-avatar.png\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function ListComment(props) {\r\n  const dispatch = useDispatch();\r\n  const { commentData, editable } = props;\r\n  const commentId = commentData.id;\r\n  const postId = commentData.post;\r\n  const [comment, setComment] = useState(\"\");\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const toggleAction = () => {\r\n    setDropdownOpen(!dropdownOpen);\r\n  };\r\n  const [modal, setModal] = useState(false);\r\n  const toggleUpdate = () => {\r\n    setModal(!modal);\r\n  };\r\n  const isDisable = !stripHtml(comment);\r\n  const userName =\r\n    commentData.createdBy && getUserFullName(commentData.createdBy);\r\n\r\n  const handleUpdateComment = (e) => {\r\n    if (comment !== commentData.comment) {\r\n      dispatch(updateComment(commentId, postId, comment));\r\n      toggleUpdate();\r\n    }\r\n  };\r\n\r\n  const handleDeleteComment = (e) => {\r\n    dispatch(deleteComment(commentId, postId));\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment-wrapper\">\r\n      <div className=\"comment-wrapper__header\">\r\n        <div>\r\n          <img\r\n            alt={`Avatar from ${userName}`}\r\n            className=\"avatar rounded-circle\"\r\n            src={\r\n              commentData.createdBy && commentData.createdBy.avatar\r\n                ? commentData.createdBy.avatar\r\n                : avatar\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\" ml-3\">\r\n          <a\r\n            className=\"text-dark text-sm\"\r\n            href=\"#\"\r\n            onClick={(e) => e.preventDefault()}\r\n          >\r\n            {userName}\r\n          </a>\r\n          <small className=\"d-block\">\r\n            {commentData.updatedAt && getDateTime(commentData.updatedAt)}\r\n          </small>\r\n        </div>\r\n        <div className={editable ? \"comment-wrapper__header__btn\" : \"d-none\"}>\r\n          <ButtonDropdown isOpen={dropdownOpen} toggle={toggleAction}>\r\n            <DropdownToggle size=\"sm\" color=\"link\" className=\"dropdown-customs\">\r\n              <i className=\"ni ni-settings-gear-65\" />\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n              <DropdownItem onClick={toggleUpdate}>Update</DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem onClick={handleDeleteComment}>Delete</DropdownItem>\r\n            </DropdownMenu>\r\n          </ButtonDropdown>\r\n        </div>\r\n      </div>\r\n      <div className=\"ml-6 mr-2 my-2\">\r\n        <p\r\n          className=\"comment-wrapper__comment \"\r\n          style={{ fontSize: \"17px\", fontWeight: \"500\" }}\r\n        >\r\n          {commentData.comment}\r\n        </p>\r\n      </div>\r\n      <Modal isOpen={modal} toggle={toggleUpdate}>\r\n        <form onSubmit={handleUpdateComment}>\r\n          <ModalHeader toggle={toggleUpdate}>Update This Comment</ModalHeader>\r\n          <ModalBody>\r\n            <Input\r\n              type=\"textarea\"\r\n              defaultValue={commentData.comment}\r\n              onChange={(e) => setComment(e.target.value)}\r\n              autoFocus={true}\r\n            />\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" disabled={isDisable} type=\"submit\">\r\n              Save\r\n            </Button>{\" \"}\r\n            <Button color=\"link\" onClick={toggleUpdate}>\r\n              CANCEL\r\n            </Button>\r\n          </ModalFooter>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Input,\r\n  ButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  InputGroup,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport {\r\n  getDateTime,\r\n  stripHtml,\r\n  getUserFullName,\r\n} from \"../../helpers/UtilsHelper\";\r\nimport { getFileNameFromPath } from \"../../helpers/FileHelper\";\r\nimport {\r\n  addComment,\r\n  updatePost,\r\n  deletePost,\r\n} from \"../../redux/actions/postAction\";\r\nimport ListComment from \"./ListComment\";\r\nimport \"./Post.scss\";\r\nimport avatar from \"../../assets/img/theme/default-avatar.png\";\r\n\r\nfunction ListFile(props) {\r\n  const files = props.listFiles;\r\n  return files.map((file, i) => {\r\n    const fullName = getFileNameFromPath(file.postFile);\r\n    return (\r\n      <div key={i} className=\"d-flex justify-content-start\">\r\n        <a\r\n          className=\"post-wrapper__body__file-name\"\r\n          href={file.postFile}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <li>{fullName}</li>\r\n        </a>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nfunction Post(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const { post, editable } = props;\r\n  const postId = post.id;\r\n\r\n  const [comment, setComment] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const toggleAction = () => {\r\n    setDropdownOpen(!dropdownOpen);\r\n  };\r\n  const toggleUpdate = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const isDisable = !stripHtml(content);\r\n  const userName = post.createdBy && getUserFullName(post.createdBy);\r\n\r\n  const handleAddComment = (e) => {\r\n    e.preventDefault();\r\n    if (comment) {\r\n      dispatch(addComment(postId, comment));\r\n      setComment(\"\");\r\n    }\r\n  };\r\n\r\n  const handleUpdatePost = (e) => {\r\n    e.preventDefault();\r\n    if (content !== post.content) {\r\n      dispatch(updatePost(postId, content));\r\n      toggleUpdate();\r\n    }\r\n  };\r\n\r\n  const handleDeletePost = (e) => {\r\n    e.preventDefault();\r\n    dispatch(deletePost(postId));\r\n  };\r\n\r\n  return (\r\n    <Card className=\"post-wrapper\">\r\n      <CardHeader className=\"post-wrapper__header\">\r\n        <Row className=\"d-flex justify-content-space-around align-items-start\">\r\n          <div>\r\n            <img\r\n              alt=\"...\"\r\n              className=\"avatar rounded-circle\"\r\n              src={\r\n                post.createdBy && post.createdBy.avatar\r\n                  ? post.createdBy.avatar\r\n                  : avatar\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"post-wrapper__header__info\">\r\n            <a\r\n              className=\"text-dark text-sm info__user-name\"\r\n              href=\"#\"\r\n              onClick={(e) => e.preventDefault()}\r\n            >\r\n              {userName}\r\n            </a>\r\n            <small className=\"d-block\">\r\n              {\" \"}\r\n              {post.updatedAt && getDateTime(post.updatedAt)}{\" \"}\r\n            </small>\r\n          </div>\r\n          <div className={editable ? \"post-wrapper__header__btn\" : \"d-none\"}>\r\n            <ButtonDropdown isOpen={dropdownOpen} toggle={toggleAction}>\r\n              <DropdownToggle color=\"link\" className=\"dropdown-customs\">\r\n                <i className=\"ni ni-settings-gear-65\" />\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem onClick={toggleUpdate}>Update</DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem onClick={handleDeletePost}>Delete</DropdownItem>\r\n              </DropdownMenu>\r\n            </ButtonDropdown>\r\n          </div>\r\n        </Row>\r\n      </CardHeader>\r\n      <div>\r\n        <p className=\"post-wrapper__body__content\">{post.content}</p>\r\n        <div\r\n          className={\r\n            `${post.files}` && `${post.files.length}` > 0\r\n              ? \"post-wrapper__body__file-list\"\r\n              : \"d-none\"\r\n          }\r\n        >\r\n          <ListFile listFiles={post.files} />\r\n        </div>\r\n        {post.comments &&\r\n          post.comments.map((rep, i) => {\r\n            return (\r\n              <div key={i}>\r\n                <ListComment editable={editable} commentData={rep} />\r\n              </div>\r\n            );\r\n          })}\r\n        <form onSubmit={handleAddComment}>\r\n          <InputGroup className=\"mb-4 ml-3\">\r\n            <Input\r\n              placeholder=\"Write your comment\"\r\n              rows=\"1\"\r\n              type=\"input\"\r\n              onChange={(e) => setComment(e.target.value)}\r\n              name=\"comment\"\r\n              value={comment}\r\n              style={{ color: \"black\" }}\r\n            />\r\n            <Button type=\"submit\" color=\"link\">\r\n              <i className=\"ni ni-send text-info\" />\r\n            </Button>\r\n          </InputGroup>\r\n        </form>\r\n      </div>\r\n      <Modal isOpen={modal} toggle={toggleUpdate}>\r\n        <form onSubmit={handleUpdatePost}>\r\n          <ModalHeader toggle={toggleUpdate}>Update This Post</ModalHeader>\r\n          <ModalBody>\r\n            <Input\r\n              type=\"textarea\"\r\n              defaultValue={post.content}\r\n              onChange={(e) => setContent(e.target.value)}\r\n              name=\"content\"\r\n              autoFocus={true}\r\n            />\r\n            <div className=\"mt-3\">\r\n              <ListFile listFiles={post.files} />\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" disabled={isDisable} type=\"submit\">\r\n              Save\r\n            </Button>{\" \"}\r\n            <Button color=\"link\" onClick={toggleUpdate}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </form>\r\n      </Modal>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import ListComment from './ListComment.jsx';\r\nimport Post from './Post.jsx';\r\n\r\n\r\nexport { ListComment, Post };\r\n"],"sourceRoot":""}