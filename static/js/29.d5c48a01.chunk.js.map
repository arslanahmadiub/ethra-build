{"version":3,"sources":["pages/admin/Provider/ProviderDetail/ProfileDetailSideBar.jsx","pages/admin/Provider/ProviderDetail/ProfileDetail.jsx","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/CardFooter.js","../node_modules/reactstrap/es/InputGroupText.js","../node_modules/reactstrap/es/InputGroup.js","../node_modules/reactstrap/es/InputGroupAddon.js"],"names":["ProfileDetailSideBar","props","dispatch","useDispatch","showSidebar","toggle","providerData","id","_useState","useState","_useState2","Object","slicedToArray","credit","setCredit","_useState3","_useState4","cancelation","setCancelation","_useState5","_useState6","isDisableCreditRemove","setIsDisableCreditRemove","_useState7","_useState8","isDisableCancelationRemove","setIsDisableCancelationRemove","_useState9","_useState10","isDisableCreditAdd","setIsDisableCreditAdd","_useState11","_useState12","isDisableCancelationAdd","setIsDisableCancelationAdd","_useState13","_useState14","etheraCredit","setEtheraCredit","_useState15","_useState16","cancelationBalance","setCancelationBalance","useEffect","handleEtheraCredit","type","Number","handleCancelationBalance","updateProviderAccount","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","data","wrap","_context","prev","next","update","stop","apply","this","arguments","react_default","createElement","Fragment","className","concat","Button","onClick","color","Card","CardHeader","Label","CardBody","Col","Row","fixNumber","InputGroup","Input","onChange","e","value","target","max","InputGroupAddon","addonType","InputGroupText","outline","disabled","name","statusList","cons","PROVIDER_STATUS_INFO","map","item","status","provider_types","PROVIDER_TYPE","provider_type","isUsable","defaultState","errors","isFormReady","isDeleteAccount","isOpenSideBar","avatar","isAddNewProvider","firstName","lastName","phoneNumber","email","requiredMessage","ProfileDetail","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","_e$target","addProviderAccountError","state","deleteError","setState","defineProperty","trim","changeStatus","handleFile","event","_event$target","files","length","handleMultipleSelectProviderTypes","newArr","_e$target2","checked","find","selectedItemsString","filter","join","changeProviderTypes","saveForm","addNewProvider","_this$state","newError","key","objectSpread","_","isEmpty","addProviderAccount","match","params","providerTypes","isString","isNull","handleError","field","_objectSpread2","check","_objectSpread3","toggleProfileDetailSideBar","providerId","getDetail","_this2","_this$props","isAddNewProviderSuccess","avatarUrl","defaultAvatar","tempProviderTypesArr","split","_this$state2","includes","String","react_router","to","Container","fluid","openImageFile","click","CardImg","alt","src","isObject","URL","createObjectURL","ref","accept","FormGroup","Form","required","defaultValue","placeholder","maxLength","address","i","md","sm","htmlFor","regex","headline","biography","specialties","socialLinks","ErrorSummary","error","CardFooter","react_router_dom","Component","mapActionToProps","connect","provider","loading","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","string","cssModule","object","Tag","attributes","classes","defaultProps","__webpack_exports__","size","_InputGroupText__WEBPACK_IMPORTED_MODULE_6__","oneOf","isRequired","children","node"],"mappings":"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","file":"static/js/29.d5c48a01.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button, Row, Col, Input, InputGroup, InputGroupAddon, InputGroupText, Label, Card, CardHeader, CardBody } from 'reactstrap';\r\nimport { fixNumber } from 'helpers/UtilsHelper'\r\nimport { update } from \"../../../../redux/actions/providerAction\";\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function ProfileDetailSideBar(props) {\r\n    const dispatch = useDispatch()\r\n    const { showSidebar, toggle, providerData } = props\r\n    const { id } = props.providerData\r\n    const [credit, setCredit] = useState(0)\r\n    const [cancelation, setCancelation] = useState(0)\r\n    const [isDisableCreditRemove, setIsDisableCreditRemove] = useState(false)\r\n    const [isDisableCancelationRemove, setIsDisableCancelationRemove] = useState(false)\r\n    const [isDisableCreditAdd, setIsDisableCreditAdd] = useState(false)\r\n    const [isDisableCancelationAdd, setIsDisableCancelationAdd] = useState(false)\r\n    const [etheraCredit, setEtheraCredit] = useState(0)\r\n    const [cancelationBalance, setCancelationBalance] = useState(0)\r\n\r\n    useEffect(() => {\r\n        setEtheraCredit(providerData.etheraCredit)\r\n        setCancelationBalance(providerData.cancelationBalance)\r\n    }, [providerData])\r\n\r\n    const handleChangeCredit = (value) => {\r\n        if (Number(value) < 0) {\r\n            setIsDisableCreditAdd(true)\r\n        }\r\n        else if (Number(value) > Number(etheraCredit)) {\r\n            setIsDisableCreditRemove(true)\r\n        }\r\n        else {\r\n            setIsDisableCreditAdd(false)\r\n            setIsDisableCreditRemove(false)\r\n        }\r\n        setCredit(value)\r\n    }\r\n\r\n    const handleEtheraCredit = (type) => {\r\n        if (type === \"add\") {\r\n            setEtheraCredit(Number(etheraCredit) + Number(credit))\r\n        }\r\n        else {\r\n            setEtheraCredit(Number(etheraCredit) - Number(credit))\r\n        }\r\n        setCredit(0)\r\n        setIsDisableCreditRemove(Number(etheraCredit) + Number(credit) < 0 ? true : false)\r\n    }\r\n\r\n    const handleChangeCancelation = (value) => {\r\n        if (Number(value) < 0) {\r\n            setIsDisableCancelationAdd(true)\r\n        }\r\n        else if (Number(cancelationBalance) < Number(value)) {\r\n            setIsDisableCancelationRemove(true)\r\n        }\r\n        else {\r\n            setIsDisableCancelationAdd(false)\r\n            setIsDisableCancelationRemove(false)\r\n        }\r\n        setCancelation(value)\r\n    }\r\n\r\n    const handleCancelationBalance = (type) => {\r\n        if (type === \"add\") {\r\n            setCancelationBalance(Number(cancelationBalance) + Number(cancelation))\r\n        }\r\n        else {\r\n            setCancelationBalance(Number(cancelationBalance) - Number(cancelation))\r\n        }\r\n        setCancelation(0)\r\n    }\r\n\r\n    const updateProviderAccount = async () => {\r\n        const isValid = isDisableCreditRemove && isDisableCancelationRemove && isDisableCreditAdd && isDisableCancelationAdd\r\n        if (!isValid) {\r\n            const data = { etheraCredit, cancelationBalance, id }\r\n            dispatch(update(data))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"sidebar__wrapper wrapper\">\r\n                <div className={`sidebar ${showSidebar ? 'sidebar-show' : 'sidebar-hide'}`}>\r\n                    <div className=\"sidebar__main\">\r\n                        <span className={showSidebar ? \"sidebar__icon\" : \"d-none\"}>\r\n                            <Button\r\n                                onClick={toggle}\r\n                                className=\"sidebar__icon\"\r\n                                color=\"link\"\r\n                            >\r\n                                <i className=\"fas fa-arrow-right fa-lg\"></i>\r\n                            </Button>\r\n                        </span>\r\n                        <Card>\r\n                            <CardHeader className=\"sidebar__card__header text-center\">\r\n                                <Label> Ethera Balance </Label>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <Col className=\"mb-2\">\r\n                                    <Row className=\"mb-2 justify-content-center\">\r\n                                        <h3 className=\"sidebar__card__title\"> EtheraCredit Balance: {fixNumber(etheraCredit)}$</h3>\r\n                                    </Row>\r\n                                    <Row className=\"my-3 justify-content-center\">\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                type=\"number\"\r\n                                                onChange={(e) => handleChangeCredit(e.target.value)}\r\n                                                value={credit}\r\n                                                max={100000000}\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\">\r\n                                                <InputGroupText>\r\n                                                    <i className=\"fas fa-dollar-sign\" />\r\n                                                </InputGroupText>\r\n                                            </InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Row>\r\n                                    <Row className=\"my-2 justify-content-center text-center\">\r\n                                        <Button\r\n                                            color=\"info\"\r\n                                            outline\r\n                                            className=\"customs-btn\"\r\n                                            onClick={() => handleEtheraCredit(\"add\")}\r\n                                            disabled={isDisableCreditAdd}\r\n                                        >\r\n                                            Add</Button>\r\n                                        <Button\r\n                                            color=\"danger\"\r\n                                            outline\r\n                                            className=\"customs-btn\"\r\n                                            onClick={() => handleEtheraCredit(\"remove\")}\r\n                                            disabled={isDisableCreditRemove}\r\n                                        >Remove</Button>\r\n                                    </Row>\r\n                                </Col>\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                        <Card>\r\n                            <CardHeader className=\"sidebar__card__header text-center\">\r\n                                <Label> Cancellation Balance </Label>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <Col className=\"mb-2\">\r\n                                    <Row className=\"mb-2 justify-content-center\">\r\n                                        <h3 className=\"sidebar__card__title\"> Cancellation Balance: {cancelationBalance} (time) </h3>\r\n                                    </Row>\r\n                                    <Row className=\"my-3 justify-content-center\">\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                type=\"number\"\r\n                                                name=\"cancelation\"\r\n                                                onChange={(e) => handleChangeCancelation(e.target.value)}\r\n                                                value={cancelation}\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\">\r\n                                                <InputGroupText>\r\n                                                    <i className=\"far fa-clock\" />\r\n                                                </InputGroupText>\r\n                                            </InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Row>\r\n                                    <Row className=\"my-2 justify-content-center\">\r\n                                        <Button\r\n                                            color=\"info\"\r\n                                            outline\r\n                                            className=\"customs-btn\"\r\n                                            onClick={() => handleCancelationBalance(\"add\")}\r\n                                            disabled={isDisableCancelationAdd}\r\n                                        >\r\n                                            Add</Button>\r\n                                        <Button\r\n                                            color=\"danger\"\r\n                                            outline\r\n                                            className=\"customs-btn\"\r\n                                            onClick={() => handleCancelationBalance(\"remove\")}\r\n                                            disabled={isDisableCancelationRemove}\r\n                                        >\r\n                                            Remove</Button>\r\n                                    </Row>\r\n                                </Col>\r\n                            </CardBody>\r\n                        </Card>\r\n                        <Row className=\"mt-4 justify-content-around\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                className=\"sidebar__card__btn\"\r\n                                onClick={toggle}\r\n                            >\r\n                                Cancel\r\n                                    </Button>\r\n                            <Button\r\n                                color=\"success\"\r\n                                className=\"sidebar__card__btn\"\r\n                                onClick={updateProviderAccount}\r\n                            >\r\n                                Save\r\n                                    </Button>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  FormGroup,\r\n  Label,\r\n  CardImg,\r\n  CardFooter,\r\n} from \"reactstrap\";\r\nimport _ from \"lodash\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { FormInput } from \"components/Form\";\r\nimport {\r\n  getDetail,\r\n  addProviderAccount,\r\n  update,\r\n  changeProviderTypes,\r\n  changeStatus,\r\n  deleteError,\r\n} from \"../../../../redux/actions/providerAction\";\r\nimport cons from \"../../../../constants\";\r\nimport defaultAvatar from \"../../../../assets/img/theme/default-avatar.png\";\r\nimport \"./ProfileDetail.scss\";\r\nimport ProfileDetailSideBar from \"./ProfileDetailSideBar\";\r\nimport ErrorSummary from \"../../../../components/ErrorSummary\";\r\n\r\nconst statusList = cons.PROVIDER_STATUS_INFO.map((item) => {\r\n  return {\r\n    status: item.status,\r\n    id: Number(item.id),\r\n  };\r\n});\r\nconst provider_types = cons.PROVIDER_TYPE.map((item) => {\r\n  return {\r\n    name: item.provider_type,\r\n    isUsable: false,\r\n    id: item.id,\r\n  };\r\n});\r\n\r\nconst defaultState = () => {\r\n  return {\r\n    id: \"\",\r\n    errors: {},\r\n    isFormReady: {},\r\n    isDeleteAccount: false,\r\n    isOpenSideBar: false,\r\n    statusList: statusList,\r\n    avatar: null,\r\n    isAddNewProvider: false,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    phoneNumber: \"\",\r\n    email: \"\",\r\n  };\r\n};\r\n\r\nconst requiredMessage = \"This Field is required\";\r\n\r\nclass ProfileDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = defaultState();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const providerId = this.props.match.params.id;\r\n    if (providerId === \"create\") {\r\n      this.setState({ isAddNewProvider: true });\r\n    } else {\r\n      this.props.getDetail(providerId);\r\n      delete this.state[\"firstName\"];\r\n      delete this.state[\"lastName\"];\r\n      delete this.state[\"phoneNumber\"];\r\n      delete this.state[\"email\"];\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    const { addProviderAccountError } = this.props;\r\n    delete this.state.errors[\"nonFieldErrors\"];\r\n    delete this.state.errors[name];\r\n    if (addProviderAccountError) {\r\n      this.props.deleteError(name);\r\n    }\r\n    this.setState({\r\n      [name]: value.trim(\"\"),\r\n    });\r\n    if (name === \"status\") {\r\n      this.props.changeStatus(value);\r\n    }\r\n  };\r\n\r\n  handleFile = (event) => {\r\n    const { name, files } = event.target;\r\n    if (files.length) {\r\n      this.setState({\r\n        [name]: files[0],\r\n      });\r\n    }\r\n  };\r\n\r\n  handleMultipleSelectProviderTypes = (e, newArr) => {\r\n    const { id, checked } = e.target;\r\n    const selectedItem = newArr.find((item) => item.id === Number(id));\r\n    selectedItem.isUsable = checked;\r\n    const selectedItems = newArr\r\n      .filter((item) => item.isUsable)\r\n      .map((item) => Number(item.id));\r\n    const selectedItemsString = selectedItems.join(\",\");\r\n    this.props.changeProviderTypes(selectedItemsString);\r\n  };\r\n\r\n  saveForm = () => {\r\n    const { isAddNewProvider } = this.state;\r\n    if (isAddNewProvider) {\r\n      this.addNewProvider();\r\n    } else {\r\n      this.updateProviderAccount();\r\n    }\r\n  };\r\n\r\n  addNewProvider = () => {\r\n    const { firstName, lastName, phoneNumber, email, errors, isFormReady } =\r\n      this.state;\r\n    const data = { firstName, lastName, phoneNumber, email };\r\n    let newError = {};\r\n    for (const key in data) {\r\n      if (data[key] === \"\") {\r\n        newError[key] = [requiredMessage];\r\n      }\r\n      this.setState({ errors: { ...errors, ...newError } });\r\n    }\r\n    if (\r\n      _.isEmpty(errors) &&\r\n      isFormReady.firstName &&\r\n      isFormReady.lastName &&\r\n      isFormReady.phoneNumber &&\r\n      isFormReady.email\r\n    ) {\r\n      this.props.addProviderAccount(data);\r\n    }\r\n  };\r\n\r\n  updateProviderAccount = async () => {\r\n    const { id } = this.props.match.params;\r\n    const data = {\r\n      ...this.state,\r\n      providerTypes: this.props.providerData.providerTypes,\r\n      id,\r\n    };\r\n    if (_.isString(data.avatar) || _.isNull(data.avatar)) {\r\n      delete data[\"avatar\"];\r\n    }\r\n    this.props.update(data);\r\n  };\r\n\r\n  handleError = (field, status) => {\r\n    if (status) {\r\n      let check = true;\r\n      for (let key in this.state.isFormReady) {\r\n        if (key !== field && key !== \"check\") {\r\n          check = check && this.state.isFormReady[key];\r\n        }\r\n      }\r\n      this.setState({\r\n        isFormReady: { ...this.state.isFormReady, [field]: true, check: check },\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isFormReady: {\r\n          ...this.state.isFormReady,\r\n          [field]: false,\r\n          check: false,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleProfileDetailSideBar = () => {\r\n    this.setState({ isOpenSideBar: !this.state.isOpenSideBar });\r\n  };\r\n\r\n  render() {\r\n    const { providerData, isAddNewProviderSuccess, addProviderAccountError } =\r\n      this.props;\r\n    const { status, providerTypes } = providerData;\r\n    const avatarUrl = providerData.avatar ? providerData.avatar : defaultAvatar;\r\n    const tempProviderTypesArr = providerTypes && providerTypes.split(\",\");\r\n    const {\r\n      errors,\r\n      isFormReady,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      statusList,\r\n      avatar,\r\n      isAddNewProvider,\r\n      phoneNumber,\r\n    } = this.state;\r\n    const formValid =\r\n      firstName && email && lastName & phoneNumber && isFormReady.check;\r\n    const newArr = provider_types.map((item) => ({\r\n      ...item,\r\n      isUsable: tempProviderTypesArr\r\n        ? tempProviderTypesArr.includes(String(item.id))\r\n        : false,\r\n    }));\r\n    return (\r\n      <>\r\n        {isAddNewProviderSuccess && <Redirect to=\"/admin/providers\" />}\r\n        <ProfileDetailSideBar\r\n          showSidebar={this.state.isOpenSideBar}\r\n          toggle={this.toggleProfileDetailSideBar}\r\n          providerData={providerData}\r\n        />\r\n        <Container\r\n          className=\"mt-6 d-flex justify-content-center align-items-center wrapper\"\r\n          fluid\r\n        >\r\n          <Card className=\"card-profile card-custom\">\r\n            {!isAddNewProvider ? (\r\n              <>\r\n                <Row className=\"align-items-center card-profile-image\">\r\n                  <div onClick={() => this.openImageFile.click()}>\r\n                    <CardImg\r\n                      alt=\"...\"\r\n                      className=\"rounded-circle custom-avatar avatar\"\r\n                      src={\r\n                        _.isObject(avatar)\r\n                          ? URL.createObjectURL(avatar)\r\n                          : avatarUrl\r\n                      }\r\n                    />\r\n                  </div>\r\n                </Row>\r\n                <CardHeader className=\"text-center border-0 pb-0\">\r\n                  <Row className=\"justify-content-center mt-4\">\r\n                    <Col>\r\n                      <input\r\n                        ref={(ref) => (this.openImageFile = ref)}\r\n                        onChange={this.handleFile}\r\n                        className=\"d-none\"\r\n                        type=\"file\"\r\n                        name=\"avatar\"\r\n                        id=\"roomImage\"\r\n                        accept=\".jpg,.gif,.jpeg,.png\"\r\n                      />\r\n                      <Button\r\n                        className=\"mt-4 align-items-center\"\r\n                        color=\"link\"\r\n                        onClick={() => this.openImageFile.click()}\r\n                      >\r\n                        Change Image\r\n                      </Button>\r\n                      <div className=\"error-text mt-3\">{errors[\"image\"]}</div>\r\n                      <Button\r\n                        className=\"btn-custom\"\r\n                        onClick={this.toggleProfileDetailSideBar}\r\n                        color=\"link\"\r\n                        outline\r\n                      >\r\n                        Ethera Balance\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n              </>\r\n            ) : (\r\n              <CardHeader className=\"text-center\">\r\n                <h2>Add new provider</h2>\r\n              </CardHeader>\r\n            )}\r\n            <CardBody className=\"border-0 pb-0 wrapper__body\">\r\n              <FormGroup>\r\n                <Label className=\"form-control-label\">\r\n                  First Name\r\n                  <sup className=\"text-required\">*</sup>\r\n                </Label>\r\n                <FormInput\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  handleError={this.handleError}\r\n                  errors={errors[\"firstName\"]}\r\n                  onChange={this.handleChange}\r\n                  required={true}\r\n                  defaultValue={providerData.firstName || \"\"}\r\n                  placeholder=\"...\"\r\n                  maxLength={30}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label className=\"form-control-label\">\r\n                  {\" \"}\r\n                  Last Name<sup className=\"text-required\">*</sup>\r\n                </Label>\r\n                <FormInput\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  handleError={this.handleError}\r\n                  errors={errors[\"lastName\"]}\r\n                  onChange={this.handleChange}\r\n                  required={true}\r\n                  defaultValue={providerData.lastName || \"\"}\r\n                  placeholder=\"...\"\r\n                  maxLength={30}\r\n                />\r\n              </FormGroup>\r\n              {!isAddNewProvider && (\r\n                <>\r\n                  <FormGroup>\r\n                    <Label className=\"form-control-label\">City name </Label>\r\n                    <FormInput\r\n                      type=\"text\"\r\n                      name=\"address\"\r\n                      handleError={this.handleError}\r\n                      errors={errors[\"address\"]}\r\n                      onChange={this.handleChange}\r\n                      defaultValue={providerData.address || \"\"}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label className=\"form-control-label\">Provider Type</Label>\r\n                    <Row className=\"mx-0\">\r\n                      {newArr.map((item, i) => {\r\n                        return (\r\n                          <Col\r\n                            md={4}\r\n                            sm={6}\r\n                            key={i}\r\n                            className=\"custom-control custom-checkbox text-left mb-3\"\r\n                          >\r\n                            <Input\r\n                              className=\"custom-control-input\"\r\n                              id={item.id}\r\n                              type=\"checkbox\"\r\n                              name={item.name}\r\n                              checked={item.isUsable}\r\n                              onChange={(e) =>\r\n                                this.handleMultipleSelectProviderTypes(\r\n                                  e,\r\n                                  newArr\r\n                                )\r\n                              }\r\n                            />\r\n                            <Label\r\n                              className=\"custom-control-label\"\r\n                              htmlFor={item.id}\r\n                            >\r\n                              {item.name}\r\n                            </Label>\r\n                          </Col>\r\n                        );\r\n                      })}\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label className=\"form-control-label\">Status</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      onChange={this.handleChange}\r\n                      value={status}\r\n                      name=\"status\"\r\n                    >\r\n                      {statusList.map((item, i) => (\r\n                        <option key={i} value={item.id}>\r\n                          {item.status}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </>\r\n              )}\r\n              <FormGroup>\r\n                <Label className=\"form-control-label\">\r\n                  Phone Number<sup className=\"text-required\">*</sup>{\" \"}\r\n                </Label>\r\n                <FormInput\r\n                  type=\"phoneNumber\"\r\n                  name=\"phoneNumber\"\r\n                  handleError={this.handleError}\r\n                  errors={errors[\"phoneNumber\"]}\r\n                  onChange={this.handleChange}\r\n                  regex=\"phoneNumber\"\r\n                  required={true}\r\n                  defaultValue={providerData.phoneNumber}\r\n                  placeholder=\"Type phone number\"\r\n                  maxLength={15}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label className=\"form-control-label\">\r\n                  E-mail<sup className=\"text-required\">*</sup>\r\n                </Label>\r\n                <FormInput\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  handleError={this.handleError}\r\n                  errors={errors[\"email\"]}\r\n                  onChange={this.handleChange}\r\n                  regex=\"email\"\r\n                  required={true}\r\n                  defaultValue={providerData.email || \"\"}\r\n                  placeholder=\"Type email\"\r\n                />\r\n              </FormGroup>\r\n              {!isAddNewProvider && (\r\n                <>\r\n                  <FormGroup>\r\n                    <Label className=\"form-control-label\">\r\n                      Professional headline\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"headline\"\r\n                      onChange={this.handleChange}\r\n                      defaultValue={providerData.headline || \"\"}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label className=\"form-control-label\">\r\n                      {\" \"}\r\n                      Short biography\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"biography\"\r\n                      onChange={this.handleChange}\r\n                      defaultValue={providerData.biography || \"\"}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label className=\"form-control-label\">Specialties</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"specialties\"\r\n                      onChange={this.handleChange}\r\n                      defaultValue={providerData.specialties || \"\"}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label className=\"form-control-label\">\r\n                      {\" \"}\r\n                      Social media link\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"socialLinks\"\r\n                      onChange={this.handleChange}\r\n                      defaultValue={providerData.socialLinks || \"\"}\r\n                    />\r\n                  </FormGroup>\r\n                </>\r\n              )}\r\n              <ErrorSummary error={addProviderAccountError} className=\"mt-3\" />\r\n            </CardBody>\r\n            <CardFooter className=\"pb-md-4\">\r\n              <Row className=\"justify-content-around\">\r\n                <Link to={`/admin/providers`}>\r\n                  {\" \"}\r\n                  <Button color=\"danger\" outline>\r\n                    {\" \"}\r\n                    CANCEL\r\n                  </Button>\r\n                </Link>\r\n                <Button\r\n                  color=\"success\"\r\n                  outline\r\n                  disabled={false && formValid}\r\n                  onClick={this.saveForm}\r\n                >\r\n                  {\" \"}\r\n                  Save Changes{\" \"}\r\n                </Button>\r\n              </Row>\r\n            </CardFooter>\r\n          </Card>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    providerData: state.provider.data,\r\n    loading: state.provider.loading,\r\n    isAddNewProviderSuccess: state.provider.isAddNewProviderSuccess,\r\n    addProviderAccountError: state.provider.addProviderAccountError,\r\n  };\r\n};\r\n\r\nconst mapActionToProps = {\r\n  getDetail,\r\n  addProviderAccount,\r\n  update,\r\n  changeProviderTypes,\r\n  changeStatus,\r\n  deleteError,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(ProfileDetail);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardFooter = function CardFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-footer'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardFooter.propTypes = propTypes;\nCardFooter.defaultProps = defaultProps;\nexport default CardFooter;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'span'\n};\n\nvar InputGroupText = function InputGroupText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-text'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroupText.propTypes = propTypes;\nInputGroupText.defaultProps = defaultProps;\nexport default InputGroupText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroup = function InputGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      size = props.size,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"size\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\nexport default InputGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport InputGroupText from './InputGroupText';\nvar propTypes = {\n  tag: tagPropType,\n  addonType: PropTypes.oneOf(['prepend', 'append']).isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroupAddon = function InputGroupAddon(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      addonType = props.addonType,\n      children = props.children,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"addonType\", \"children\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-' + addonType), cssModule); // Convenience to assist with transition\n\n  if (typeof children === 'string') {\n    return React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    }), React.createElement(InputGroupText, {\n      children: children\n    }));\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    children: children\n  }));\n};\n\nInputGroupAddon.propTypes = propTypes;\nInputGroupAddon.defaultProps = defaultProps;\nexport default InputGroupAddon;"],"sourceRoot":""}