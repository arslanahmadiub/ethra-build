{"version":3,"sources":["pages/admin/Venues/ConfirmDeleteModal.jsx","pages/admin/Venues/VenueCreate.jsx"],"names":["ConfirmDeleteModal","_this$props","this","props","isOpen","toggle","handle","type","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_6__","className","id","concat","aria-label","data-dismiss","onClick","aria-hidden","reactstrap__WEBPACK_IMPORTED_MODULE_7__","color","React","Component","dayOnWeek","operatingHoursData","map","item","index","dayOfWeek","name","startTime","closeTime","isUsable","VenueCreate","_this","Object","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7__","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8__","call","deleleVenue","venueId","match","params","venueApi","delete","then","toast","success","history","push","catch","error","toggleConfirmDelete","setState","isDeleteVenue","state","addBlackoutDates","data","blackoutDates","date","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_4__","setBlackoutDates","e","Date","_d","tempData","getDate","deleteBlackoutDates","tempArr","splice","blackoutDateValidate","currentDate","check","forEach","isGTENowDay","handleChange","_e$target","target","value","errors","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","handleChangeTime","getHours","getMinutes","setHours","setMinutes","operatingHours","getTime","handleCheckTime","_e$target2","checked","Number","handleFile","event","_event$target","files","length","handleError","field","status","_objectSpread2","key","isFormReady","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","saveForm","preventDefault","submitData","_","isString","image","roomMap","formData","FormData","keys","Array","isArray","append","JSON","stringify","smsPass","smsFail","apiCall","update","create","res","err","response","address","phoneNumber","email","contactPerson","mapImage","mapData","roomMapWrapper","document","getElementById","getImageMeta","width","height","parentWidth","clientWidth","parentHeight","convertToDecimal","weightWidth","weightHeight","draw","SVG","size","parse","pointArr","childItem","link","_this2","getVenueId","listPoint","coords","shape","i","pointData","polyline","x","y","rect","attr","fill","mouseover","mouseout","_this3","detail","roomMapMapping","operatingHoursUpdated","drawSVG","_this4","_this$state","isEmpty","react__WEBPACK_IMPORTED_MODULE_10___default","Fragment","_ConfirmDeleteModal_jsx__WEBPACK_IMPORTED_MODULE_33__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","fluid","reactstrap__WEBPACK_IMPORTED_MODULE_18__","reactstrap__WEBPACK_IMPORTED_MODULE_19__","reactstrap__WEBPACK_IMPORTED_MODULE_20__","reactstrap__WEBPACK_IMPORTED_MODULE_21__","onSubmit","reactstrap__WEBPACK_IMPORTED_MODULE_22__","reactstrap__WEBPACK_IMPORTED_MODULE_23__","md","reactstrap__WEBPACK_IMPORTED_MODULE_24__","reactstrap__WEBPACK_IMPORTED_MODULE_25__","components_Form__WEBPACK_IMPORTED_MODULE_30__","required","defaultValue","onChange","reactstrap__WEBPACK_IMPORTED_MODULE_26__","alt","src","isObject","URL","createObjectURL","top","openImageFile","click","ref","style","display","accept","reactstrap__WEBPACK_IMPORTED_MODULE_27__","openMapFile","fontSize","htmlFor","regex","lg","reactstrap__WEBPACK_IMPORTED_MODULE_28__","react_datetime__WEBPACK_IMPORTED_MODULE_13___default","getMomentObject","timeFormat","dateFormat","closeOnSelect","sm","xs","inputProps","placeholder","isValidDate","react_router_dom__WEBPACK_IMPORTED_MODULE_12__","to","disabled","mapActionToProps","removeVenue","connect"],"mappings":"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","file":"static/js/47.9d0ca2fe.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport {\r\n    Button,\r\n    Modal\r\n} from \"reactstrap\";\r\n\r\n\r\nexport default class ConfirmDeleteModal extends React.Component {\r\n    render() {\r\n      const { isOpen, toggle, handle, type } = this.props;\r\n        return(\r\n          <Modal\r\n            className=\"modal-dialog-centered\"\r\n            isOpen={isOpen}\r\n            toggle={toggle}\r\n          >\r\n            <div className=\"modal-header\">\r\n              <h6 className=\"modal-title\" id=\"modal-title-default\">\r\n                {`Confirm delete ${type}!`}\r\n              </h6>\r\n              <button\r\n                aria-label=\"Close\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                type=\"button\"\r\n                onClick={toggle}\r\n              >\r\n                <span aria-hidden={true}>×</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>\r\n                {`Do you want to delete this ${type}?`}\r\n              </p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <Button color=\"danger\" type=\"button\" onClick={handle}>\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                className=\"ml-auto\"\r\n                color=\"link\"\r\n                data-dismiss=\"modal\"\r\n                type=\"button\"\r\n                onClick={toggle}\r\n              >\r\n                Close\r\n              </Button>\r\n            </div>\r\n        </Modal>)\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// nodejs library that concatenates classes\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// reactstrap components\r\nimport ReactDatetime from \"react-datetime\";\r\nimport _ from \"lodash\";\r\nimport { toast } from \"react-toastify\";\r\nimport SVG from \"svg.js\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardImg,\r\n  CardHeader,\r\n  Label,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\n// core components\r\n\r\nimport {\r\n  getTime,\r\n  getDate,\r\n  getMomentObject,\r\n  isGTENowDay,\r\n  convertToDecimal,\r\n  getImageMeta,\r\n} from \"helpers/UtilsHelper\";\r\nimport { FormInput } from \"components/Form\";\r\n\r\nimport venueApi from \"api/venueApi\";\r\nimport { removeVenue } from \"../../../redux/actions/venuesActions\";\r\nimport ConfirmDeleteModal from \"./ConfirmDeleteModal.jsx\";\r\n\r\nimport \"./Venues.scss\";\r\n\r\nconst startTimeDefault = \"8:00\";\r\nconst closeTimeDefault = \"20:00\";\r\nconst dayOnWeek = [\r\n  \"monday\",\r\n  \"tuesday\",\r\n  \"wednesday\",\r\n  \"thursday\",\r\n  \"friday\",\r\n  \"saturday\",\r\n  \"sunday\",\r\n];\r\nconst operatingHoursData = dayOnWeek.map((item, index) => {\r\n  return {\r\n    dayOfWeek: index + 1,\r\n    name: item,\r\n    startTime: startTimeDefault,\r\n    closeTime: closeTimeDefault,\r\n    isUsable: false,\r\n  };\r\n});\r\n\r\nclass VenueCreate extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: null,\r\n      image: null,\r\n      roomMap: null,\r\n      address: null,\r\n      phoneNumber: null,\r\n      email: null,\r\n      contactPerson: null,\r\n      operatingHours: operatingHoursData,\r\n      blackoutDates: [],\r\n      errors: {},\r\n      isFormReady: {},\r\n      isDeleteVenue: false,\r\n    };\r\n  }\r\n\r\n  deleleVenue = () => {\r\n    const { venueId } = this.props.match.params;\r\n    venueApi\r\n      .delete(venueId)\r\n      .then(() => {\r\n        toast.success(\"Delete venue successfully\");\r\n        this.props.history.push(\"/admin/venues\");\r\n      })\r\n      .catch(() => {\r\n        toast.error(\"Delete venue failed\");\r\n      });\r\n  };\r\n\r\n  toggleConfirmDelete = () => {\r\n    this.setState({ isDeleteVenue: !this.state.isDeleteVenue });\r\n  };\r\n\r\n  addBlackoutDates = (data) => {\r\n    this.setState({\r\n      blackoutDates: [{ date: null }, ...this.state.blackoutDates],\r\n    });\r\n  };\r\n\r\n  setBlackoutDates = (e, index) => {\r\n    const date = new Date(e._d + \"\");\r\n    let tempData = this.state.blackoutDates;\r\n    tempData[index] = { date: getDate(date) };\r\n    this.setState({ blackoutDates: tempData });\r\n  };\r\n\r\n  deleteBlackoutDates = (index) => {\r\n    let tempArr = this.state.blackoutDates;\r\n    tempArr.splice(index, 1);\r\n    this.setState({ blackoutDates: tempArr });\r\n  };\r\n\r\n  blackoutDateValidate = (currentDate) => {\r\n    const { blackoutDates } = this.state;\r\n    let check = false;\r\n    blackoutDates.forEach((item) => {\r\n      check = check || getDate(currentDate) === item.date;\r\n    });\r\n    return isGTENowDay(currentDate) && !check;\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    delete this.state.errors[name];\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleChangeTime = (e, index, type) => {\r\n    const date = new Date(e._d + \"\");\r\n    if (\r\n      type === \"closeTime\" &&\r\n      date.getHours() === 0 &&\r\n      date.getMinutes() === 0\r\n    ) {\r\n      date.setHours(23);\r\n      date.setMinutes(59);\r\n    }\r\n\r\n    let tempData = this.state.operatingHours;\r\n    tempData[index][type] = getTime(date, \"HH:mm\");\r\n    this.setState({ operatingHours: tempData });\r\n  };\r\n\r\n  handleCheckTime = (e) => {\r\n    let tempData = this.state.operatingHours;\r\n    const { name, checked } = e.target;\r\n    tempData[Number(name)].isUsable = checked;\r\n    this.setState({ operatingHours: tempData });\r\n  };\r\n\r\n  handleFile = (event) => {\r\n    const { name, files } = event.target;\r\n    if (files.length) {\r\n      this.setState({\r\n        [name]: files[0],\r\n      });\r\n    }\r\n  };\r\n\r\n  handleError = (field, status) => {\r\n    let check = true;\r\n    if (status) {\r\n      for (let key in this.state.isFormReady) {\r\n        check = check && this.state.isFormReady[key];\r\n      }\r\n    }\r\n    this.setState({\r\n      isFormReady: {\r\n        ...this.state.isFormReady,\r\n        [field]: status,\r\n        check: check && status,\r\n      },\r\n    });\r\n  };\r\n\r\n  saveForm = (e) => {\r\n    e.preventDefault();\r\n    const { venueId } = this.props.match.params;\r\n    const submitData = this.state;\r\n    if (_.isString(submitData.image)) {\r\n      delete submitData[\"image\"];\r\n    }\r\n    if (_.isString(submitData.roomMap)) {\r\n      delete submitData[\"roomMap\"];\r\n    }\r\n    let formData = new FormData();\r\n    Object.keys(submitData).forEach((key) => {\r\n      if (Array.isArray(this.state[key])) {\r\n        formData.append([key], JSON.stringify(this.state[key]));\r\n      } else {\r\n        formData.append([key], this.state[key]);\r\n      }\r\n    });\r\n    let smsPass,\r\n      smsFail,\r\n      apiCall = null;\r\n    if (venueId) {\r\n      apiCall = venueApi.update({ formData, venueId });\r\n      smsPass = \"Update venue successfully\";\r\n      smsFail = \"Update venue failed\";\r\n    } else {\r\n      apiCall = venueApi.create(formData);\r\n      smsPass = \"Create venue successfully\";\r\n      smsFail = \"Create venue failed\";\r\n    }\r\n    apiCall\r\n      .then((res) => {\r\n        toast.success(smsPass);\r\n        if (!venueId) {\r\n          this.props.history.push(`/admin/venues/${res.id}`);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        const errors = err.response.data;\r\n        this.setState({ errors });\r\n        toast.error(smsFail);\r\n      });\r\n  };\r\n\r\n  getVenueId() {\r\n    const { venueId } = this.props.match.params;\r\n    return venueId;\r\n  }\r\n\r\n  async drawSVG(mapImage, mapData) {\r\n    const roomMapWrapper = document.getElementById(\"room-map-wrapper\");\r\n    const { width, height } = await getImageMeta(mapImage);\r\n    const parentWidth = roomMapWrapper ? roomMapWrapper.clientWidth : 500;\r\n    const parentHeight = convertToDecimal((height / width) * parentWidth, 4);\r\n    const weightWidth = parentWidth / width;\r\n    const weightHeight = parentHeight / height;\r\n\r\n    let draw = SVG(\"svg-drawing\").size(parentWidth, parentHeight);\r\n    draw.image(mapImage, parentWidth, parentHeight);\r\n    try {\r\n      JSON.parse(mapData).forEach((item) => {\r\n        let pointArr, childItem;\r\n        childItem = draw.link(\r\n          `#/admin/venues/${this.getVenueId()}/spaces/${item.id}`\r\n        );\r\n        const listPoint = item.coords;\r\n        switch (item.shape) {\r\n          case \"poly\":\r\n            pointArr = [];\r\n            for (let i = 0; i < listPoint.length; i += 2) {\r\n              const pointData = [\r\n                listPoint[i] * weightWidth,\r\n                listPoint[i + 1] * weightHeight,\r\n              ];\r\n              pointArr.push(pointData);\r\n            }\r\n            childItem.polyline(pointArr);\r\n            break;\r\n          case \"rect\":\r\n            const x = (listPoint[2] - listPoint[0]) * weightWidth;\r\n            const y = (listPoint[3] - listPoint[1]) * weightHeight;\r\n            childItem.rect(x, y).attr({\r\n              x: listPoint[0] * weightWidth,\r\n              y: listPoint[1] * weightHeight,\r\n            });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        childItem\r\n          .attr({ fill: \"transparent\" })\r\n          .mouseover(function () {\r\n            this.fill({ color: \"rgba(0,0,0,0.5)\" });\r\n          })\r\n          .mouseout(function () {\r\n            this.fill({ color: \"transparent\" });\r\n          });\r\n      });\r\n    } catch (e) {}\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { venueId } = this.props.match.params;\r\n    if (venueId) {\r\n      venueApi.detail(venueId).then((res) => {\r\n        const {\r\n          name,\r\n          image,\r\n          roomMap,\r\n          roomMapMapping,\r\n          address,\r\n          phoneNumber,\r\n          email,\r\n          contactPerson,\r\n          operatingHours,\r\n          blackoutDates,\r\n        } = res;\r\n        const operatingHoursUpdated = operatingHours.map((item, index) => {\r\n          item.name = dayOnWeek[index];\r\n          return item;\r\n        });\r\n        if (roomMap && roomMapMapping && roomMapMapping.length) {\r\n          this.drawSVG(roomMap, roomMapMapping);\r\n        }\r\n        this.setState({\r\n          name,\r\n          image,\r\n          roomMap,\r\n          address,\r\n          phoneNumber,\r\n          email,\r\n          contactPerson,\r\n          operatingHours: operatingHoursUpdated,\r\n          blackoutDates,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      email,\r\n      address,\r\n      contactPerson,\r\n      phoneNumber,\r\n      blackoutDates,\r\n      image,\r\n      operatingHours,\r\n      roomMap,\r\n      errors,\r\n      isFormReady,\r\n    } = this.state;\r\n    const formValid =\r\n      name &&\r\n      email &&\r\n      image &&\r\n      roomMap &&\r\n      !_.isEmpty(blackoutDates) &&\r\n      !_.isEmpty(operatingHours) &&\r\n      isFormReady.check;\r\n    const { venueId } = this.props.match.params;\r\n    return (\r\n      <>\r\n        <ConfirmDeleteModal\r\n          className=\"modal-dialog-centered\"\r\n          isOpen={this.state.isDeleteVenue}\r\n          toggle={this.toggleConfirmDelete}\r\n          handle={this.deleleVenue}\r\n          type=\"Vanue\"\r\n        />\r\n        <Container className=\"venues mt--12\" fluid>\r\n          <Card className=\"mb-4\">\r\n            <CardHeader>\r\n              <h3 className=\"mb-0\">Create Venue</h3>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Form onSubmit={this.saveForm}>\r\n                <Row>\r\n                  <Col md=\"6\">\r\n                    <FormGroup className=\"row\">\r\n                      <Label className=\"form-control-label\" md=\"3\">\r\n                        Venue Name\r\n                      </Label>\r\n                      <Col md=\"7\">\r\n                        <FormInput\r\n                          required={true}\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          defaultValue={name}\r\n                          handleError={this.handleError}\r\n                          errors={errors[\"name\"]}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"row\">\r\n                      <Label className=\"form-control-label\" md=\"3\">\r\n                        Image\r\n                      </Label>\r\n                      <Col md=\"7\">\r\n                        <Card className=\"align-items-center\">\r\n                          {image ? (\r\n                            <CardImg\r\n                              alt=\"...\"\r\n                              src={\r\n                                _.isObject(image)\r\n                                  ? URL.createObjectURL(image)\r\n                                  : image\r\n                              }\r\n                              top\r\n                            />\r\n                          ) : (\r\n                            <div\r\n                              className=\"venues__placeholder-image\"\r\n                              onClick={() => this.openImageFile.click()}\r\n                            >\r\n                              <div className=\"venues__placeholder-image__label\">\r\n                                No Image\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                          <input\r\n                            ref={(ref) => (this.openImageFile = ref)}\r\n                            onChange={this.handleFile}\r\n                            style={{ display: \"none\" }}\r\n                            type=\"file\"\r\n                            name=\"image\"\r\n                            id=\"roomImage\"\r\n                            accept=\".jpg,.gif,.jpeg,.png\"\r\n                          />\r\n                          <Button\r\n                            className=\"mt-3 w-30\"\r\n                            color=\"default\"\r\n                            onClick={() => this.openImageFile.click()}\r\n                          >\r\n                            Select Image\r\n                          </Button>\r\n                          <div className=\"error-text mt-3\">\r\n                            {errors[\"image\"]}\r\n                          </div>\r\n                        </Card>\r\n                      </Col>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"row\">\r\n                      <Label className=\"form-control-label\" md=\"3\">\r\n                        Room Map\r\n                      </Label>\r\n                      <Col md=\"7\" id=\"room-map-wrapper\" className=\"p-0\">\r\n                        {this.getVenueId() ? (\r\n                          <div id=\"svg-drawing\"></div>\r\n                        ) : (\r\n                          <Card className=\"align-items-center\">\r\n                            <input\r\n                              ref={(ref) => (this.openMapFile = ref)}\r\n                              onChange={this.handleFile}\r\n                              style={{ display: \"none\" }}\r\n                              type=\"file\"\r\n                              name=\"roomMap\"\r\n                              id=\"roomMap\"\r\n                              accept=\".zip\"\r\n                            />\r\n                            <div className=\"d-flex w-100 justify-content-between align-items-center\">\r\n                              <div\r\n                                className=\"nav-link\"\r\n                                style={{ fontSize: \".85rem\" }}\r\n                              >\r\n                                {roomMap && roomMap.name\r\n                                  ? roomMap.name\r\n                                  : \"No room map zip file!\"}\r\n                              </div>\r\n                              <Button\r\n                                color=\"default\"\r\n                                onClick={() => this.openMapFile.click()}\r\n                              >\r\n                                Select Mapping\r\n                              </Button>\r\n                            </div>\r\n                            {errors && errors[\"roomMap\"] && (\r\n                              <div className=\"error-text mt-3\">\r\n                                {errors[\"roomMap\"]}\r\n                              </div>\r\n                            )}\r\n                          </Card>\r\n                        )}\r\n                      </Col>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"6\">\r\n                    <FormGroup className=\"row\">\r\n                      <Label className=\"form-control-label\" md=\"3\">\r\n                        Address\r\n                      </Label>\r\n                      <Col md=\"7\">\r\n                        <FormInput\r\n                          type=\"text\"\r\n                          name=\"address\"\r\n                          defaultValue={address}\r\n                          handleError={this.handleError}\r\n                          errors={errors[\"address\"]}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"row\">\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"example-search-input\"\r\n                        md=\"3\"\r\n                      >\r\n                        Tel\r\n                      </Label>\r\n                      <Col md=\"7\">\r\n                        <FormInput\r\n                          type=\"text\"\r\n                          name=\"phoneNumber\"\r\n                          defaultValue={phoneNumber}\r\n                          handleError={this.handleError}\r\n                          errors={errors[\"phoneNumber\"]}\r\n                          onChange={this.handleChange}\r\n                          regex=\"phoneNumber\"\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"row\">\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"example-email-input\"\r\n                        md=\"3\"\r\n                      >\r\n                        E-mail\r\n                      </Label>\r\n                      <Col md=\"7\">\r\n                        <FormInput\r\n                          required\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          defaultValue={email}\r\n                          handleError={this.handleError}\r\n                          errors={errors[\"email\"]}\r\n                          onChange={this.handleChange}\r\n                          regex=\"email\"\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"row\">\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"example-password-input\"\r\n                        md=\"3\"\r\n                      >\r\n                        Contact person\r\n                      </Label>\r\n                      <Col md=\"7\">\r\n                        <FormInput\r\n                          type=\"text\"\r\n                          name=\"contactPerson\"\r\n                          defaultValue={contactPerson}\r\n                          handleError={this.handleError}\r\n                          errors={errors[\"contactPerson\"]}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                      </Col>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"row\">\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"example-password-input\"\r\n                        md=\"12\"\r\n                        lg=\"3\"\r\n                      >\r\n                        Operating Hours\r\n                      </Label>\r\n                      <Col className=\"venues__openrating-hours\" md=\"12\" lg=\"7\">\r\n                        <Table className=\"venues__table-openrating-hours w-100\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th width=\"50%\"></th>\r\n                              <th width=\"25%\">Open</th>\r\n                              <th width=\"25%\">Close</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {operatingHours.map((item, index) => (\r\n                              <tr key={index}>\r\n                                <td>\r\n                                  <div className=\"custom-control custom-checkbox\">\r\n                                    <input\r\n                                      className=\"custom-control-input\"\r\n                                      id={item.name}\r\n                                      name={index}\r\n                                      type=\"checkbox\"\r\n                                      checked={item.isUsable}\r\n                                      onChange={this.handleCheckTime}\r\n                                    />\r\n                                    <label\r\n                                      className=\"custom-control-label text-capitalize\"\r\n                                      htmlFor={item.name}\r\n                                    >\r\n                                      {item.name}\r\n                                    </label>\r\n                                  </div>\r\n                                </td>\r\n                                <td>\r\n                                  <ReactDatetime\r\n                                    className=\"venues__select-time\"\r\n                                    value={getMomentObject(\r\n                                      item.startTime,\r\n                                      \"HH:mm\"\r\n                                    )}\r\n                                    timeFormat={true}\r\n                                    dateFormat={false}\r\n                                    closeOnSelect={true}\r\n                                    onChange={(event) =>\r\n                                      this.handleChangeTime(\r\n                                        event,\r\n                                        index,\r\n                                        \"startTime\"\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                  <ReactDatetime\r\n                                    className=\"venues__select-time\"\r\n                                    value={getMomentObject(\r\n                                      item.closeTime,\r\n                                      \"HH:mm\"\r\n                                    )}\r\n                                    closeOnSelect={true}\r\n                                    timeFormat={true}\r\n                                    dateFormat={false}\r\n                                    onChange={(event) =>\r\n                                      this.handleChangeTime(\r\n                                        event,\r\n                                        index,\r\n                                        \"closeTime\"\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                </td>\r\n                              </tr>\r\n                            ))}\r\n                          </tbody>\r\n                        </Table>\r\n                        <div className=\"error-text mt-3\">\r\n                          {errors[\"operatingHours\"]}\r\n                        </div>\r\n                      </Col>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"row mt-5\">\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"example-password-input\"\r\n                        md=\"3\"\r\n                      >\r\n                        Blackout Dates\r\n                      </Label>\r\n                      <Col\r\n                        md=\"7\"\r\n                        className={`venues__blackout-date ${\r\n                          blackoutDates.length > 4\r\n                            ? \"venues__blackout-date--scroll\"\r\n                            : \"\"\r\n                        }`}\r\n                      >\r\n                        <Row className=\"mb-3\">\r\n                          <Col lg=\"6\">\r\n                            <Button\r\n                              className=\"w-5\"\r\n                              color=\"secondary\"\r\n                              onClick={this.addBlackoutDates}\r\n                            >\r\n                              &#x2b;\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n                        <div className=\"venues__blackout-date-section\">\r\n                          {blackoutDates.map((item, index) => (\r\n                            <Row key={index} className=\"mb-2\">\r\n                              <Col lg=\"6\" sm=\"8\" xs=\"8\">\r\n                                <ReactDatetime\r\n                                  inputProps={{\r\n                                    placeholder: \"Date Picker\",\r\n                                  }}\r\n                                  closeOnSelect={true}\r\n                                  timeFormat={false}\r\n                                  dateFormat={true}\r\n                                  value={getMomentObject(\r\n                                    item.date,\r\n                                    \"YYYY:MM:DD\"\r\n                                  )}\r\n                                  onChange={(event) =>\r\n                                    this.setBlackoutDates(event, index)\r\n                                  }\r\n                                  isValidDate={this.blackoutDateValidate}\r\n                                />\r\n                              </Col>\r\n                              <Col md=\"2\" xs=\"2\">\r\n                                <Button\r\n                                  className=\"w-5\"\r\n                                  color=\"secondary\"\r\n                                  onClick={() =>\r\n                                    this.deleteBlackoutDates(index)\r\n                                  }\r\n                                >\r\n                                  &#8722;\r\n                                </Button>\r\n                              </Col>\r\n                            </Row>\r\n                          ))}\r\n                        </div>\r\n                        <div className=\"error-text mt-3\">\r\n                          {errors[\"blackoutDates\"]}\r\n                        </div>\r\n                      </Col>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md=\"6\" className=\"mb-3\">\r\n                    {venueId && (\r\n                      <Button color=\"danger\" onClick={this.toggleConfirmDelete}>\r\n                        Delete Venue\r\n                      </Button>\r\n                    )}\r\n                  </Col>\r\n                  <Col md=\"6\" className=\"mb-3\">\r\n                    <Link to={\"/admin/venues\"} className=\"mr-3\">\r\n                      <Button color=\"secondary\">Cancel</Button>\r\n                    </Link>\r\n                    <Button\r\n                      color=\"success\"\r\n                      onClick={this.saveForm}\r\n                      disabled={false && formValid}\r\n                    >\r\n                      {this.getVenueId() ? \"Save Changes\" : \"Create Venue\"}\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapActionToProps = { removeVenue };\r\n\r\nexport default connect(null, mapActionToProps)(VenueCreate);\r\n"],"sourceRoot":""}