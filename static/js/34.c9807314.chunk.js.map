{"version":3,"sources":["pages/client/ClientInfo/ClientInfo.jsx","pages/client/ClientInfo/index.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/CardFooter.js","components/Form/ChangePassword.jsx"],"names":["axios","require","ClientInfo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getState","get","then","response","setState","us_state","data","catch","error","console","log","handleError","field","status","_objectSpread2","check","key","state","isFormReady","objectSpread","defineProperty","handleCheckBox","e","_e$target","target","name","checked","validDate","current","today","moment","subtract","isBefore","setDateOfBirth","value","dateOfBirth","checkMinor","_this$state","isMinor","guardian","isGuardianFail","handleChange","_e$target2","errors","handlePhone","phoneNumber","handleSelectionChange","Number","handleChangeState","handleChangeLocation","focusFirstError","element","document","querySelectorAll","focus","saveForm","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","date","_date","wrap","_context","prev","next","_","isNull","isString","getDate","update","isObject","_d","format","stop","_x","apply","arguments","_this$state2","relationshipStatus","firstName","lastName","preferredName","middleName","suffix","address","gender","race","preferredLanguage","employmentStatus","id","signedDocument","city","zipcode","clientApi","res","toast","success","err","getValue","text","_this2","user","AuthHelper","getUserInfo","detail","user_id","_this3","_this$state3","email","firstSeenAt","react_default","createElement","Container","className","Card","CardHeader","CardBody","Row","Col","md","FormGroup","Label","Form","type","onChange","required","placeholder","regex","disabled","Input","map","item","code","concat","DateTime_default","inputProps","getDateFormat","closeOnSelect","timeFormat","dateFormat","isValidDate","cons","RELATIONSHIP_INFO","i","RACE","LANGUAGE","GENDER","EMPLOYMENT","getDateTime","Button","ErrorSummary","CardFooter","color","onClick","ChangePassword","Component","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","string","cssModule","object","Tag","attributes","classes","defaultProps","__webpack_exports__","misMatchPasswordMessage","requiredMessage","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","toggle","isOpen","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","_objectSpread3","handleChangePassword","errorsPassword","handleCheckPasswordMatch","new_password","confirmPassword","tempError","updatePassword","old_password","newError","isEmpty","getApiUpdatePassword","passwordApi","password","react__WEBPACK_IMPORTED_MODULE_7___default","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","outline","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","components_Form__WEBPACK_IMPORTED_MODULE_16__","minLength","components_ErrorSummary__WEBPACK_IMPORTED_MODULE_17__","reactstrap__WEBPACK_IMPORTED_MODULE_15__"],"mappings":"8ZA4BMA,UAAQC,EAAQ,MA2jBPC,cAxjBb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAsBRQ,SAAW,WACTX,EACGY,IAAI,yBACJC,KAAK,SAACC,GACLV,EAAKW,SAAS,CAAEC,SAAUF,EAASG,SAEpCC,MAAM,SAAUC,GACfC,QAAQC,IAAIF,MA9BCf,EAkCnBkB,YAAc,SAACC,EAAOC,GAAW,IAAAC,EAC3BC,GAAQ,EACZ,GAAIF,EACF,IAAK,IAAIG,KAAOvB,EAAKwB,MAAMC,YACzBH,EAAQA,GAAStB,EAAKwB,MAAMC,YAAYF,GAG5CvB,EAAKW,SAAS,CACZc,YAAYxB,OAAAyB,EAAA,EAAAzB,CAAA,GACPD,EAAKwB,MAAMC,aADLJ,EAAA,GAAApB,OAAA0B,EAAA,EAAA1B,CAAAoB,EAERF,EAAQC,GAFAnB,OAAA0B,EAAA,EAAA1B,CAAAoB,EAAA,QAGFC,GAASF,GAHPC,OA1CIrB,EAkDnB4B,eAAiB,SAACC,GAAM,IAAAC,EACID,EAAEE,OAApBC,EADcF,EACdE,KAAMC,EADQH,EACRG,QACD,WAATD,GACc,IAAZC,EACFjC,EAAKW,SAAS,CAAES,OAAQ,IAExBpB,EAAKW,SAAS,CAAES,OAAQ,IAG1BpB,EAAKW,SAALV,OAAA0B,EAAA,EAAA1B,CAAA,GAAiB+B,EAAOC,KA3DTjC,EA+DnBkC,UAAY,SAACC,GACX,IAAIC,EAAQC,MAASC,SAAS,EAAG,OACjC,OAAOH,EAAQI,SAASH,IAjEPpC,EAoEnBwC,eAAiB,SAACC,GAChBzC,EAAKW,SAAS,CAAE+B,YAAaD,KArEZzC,EAwEnB2C,WAAa,WAAM,IAAAC,EACa5C,EAAKwB,MAA3BqB,EADSD,EACTC,QAASC,EADAF,EACAE,SACbD,GAAwB,KAAbC,EACb9C,EAAKW,SAAS,CAAEoC,gBAAgB,IAEhC/C,EAAKW,SAAS,CAAEoC,gBAAgB,KA7EjB/C,EAiFnBgD,aAAe,SAACnB,GAAM,IAAAoB,EACIpB,EAAEE,OAAlBC,EADYiB,EACZjB,KAAMS,EADMQ,EACNR,aACPzC,EAAKwB,MAAM0B,OAAOlB,UAClBhC,EAAKwB,MAAM0B,OAAX,eACPlD,EAAKW,SAALV,OAAA0B,EAAA,EAAA1B,CAAA,GAAiB+B,EAAOS,IACX,aAATT,GAAuBS,EACzBzC,EAAKW,SAAS,CAAEoC,gBAAgB,IACd,aAATf,GAAwBS,GACjCzC,EAAKW,SAAS,CAAEoC,gBAAgB,KAzFjB/C,EA6FnBmD,YAAc,SAACC,GACbpD,EAAKW,SAAS,CAAEyC,iBA9FCpD,EAiGnBqD,sBAAwB,SAACxB,EAAGV,GAAU,IAC9BsB,EAAUZ,EAAEE,OAAZU,MACQ,sBAAVtB,EACFnB,EAAKW,SAALV,OAAA0B,EAAA,EAAA1B,CAAA,GACGkB,EAAQsB,IAGXzC,EAAKW,SAALV,OAAA0B,EAAA,EAAA1B,CAAA,GACGkB,EAAQmC,OAAOb,MAzGHzC,EA8GnBuD,kBAAoB,SAAC1B,EAAGV,UACfnB,EAAKwB,MAAM0B,OAAO/B,GADO,IAE1BsB,EAAUZ,EAAEE,OAAZU,MACNzC,EAAKW,SAALV,OAAA0B,EAAA,EAAA1B,CAAA,GAAiBkB,EAAQsB,KAjHRzC,EAoHnBwD,qBAAuB,SAAC3B,EAAGV,GAAU,IAC7BsB,EAAUZ,EAAEE,OAAZU,MACNzC,EAAKW,SAALV,OAAA0B,EAAA,EAAA1B,CAAA,GAAiBkB,EAAQsB,KAtHRzC,EAyHnByD,gBAAkB,WAChB,IAAMC,EAAUC,SAASC,iBACvB,kCACA,GACEF,GACFA,EAAQG,SA9HO7D,EAkInB8D,SAlImB,eAAAC,EAAA9D,OAAA+D,EAAA,EAAA/D,CAAAgE,EAAAC,EAAAC,KAkIR,SAAAC,EAAOvC,GAAP,IAAAa,EAAA2B,EAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACDhC,EAAgB1C,EAAKwB,MAArBkB,aACHiC,IAAEC,OAAOlC,IAAgBiC,IAAEE,SAASnC,IACnC2B,EAAOS,YAAQpC,GACnB1C,EAAK+E,OAAOV,IACHM,IAAEK,SAAStC,IACd2B,EAAOhC,IAAOK,EAAYuC,IAAIC,OAAO,cAC3ClF,EAAK+E,OAAOV,IAEZrE,EAAK+E,SATE,wBAAAP,EAAAW,SAAAf,MAlIQ,gBAAAgB,GAAA,OAAArB,EAAAsB,MAAAlF,KAAAmF,YAAA,GAAAtF,EA+InB+E,OAAS,SAACrC,GAAgB,IAAA6C,EAmBpBvF,EAAKwB,MACHX,EAAO,CACX2E,mBArBsBD,EAEtBC,mBAoBAC,UAtBsBF,EAGtBE,UAoBAC,SAvBsBH,EAItBG,SAoBAC,cAxBsBJ,EAKtBI,cAoBAC,WAzBsBL,EAMtBK,WAoBAC,OA1BsBN,EAOtBM,OAoBAzC,YA3BsBmC,EAQtBnC,YAoBA0C,QA5BsBP,EAStBO,QAoBApD,cACAqD,OA9BsBR,EAUtBQ,OAqBAC,KA/BsBT,EAWtBS,KAqBAC,kBAhCsBV,EAYtBU,kBAqBAC,iBAjCsBX,EAatBW,iBAqBAC,GAlCsBZ,EActBY,GAqBAC,eAnCsBb,EAetBa,eAqBA5E,MApCsB+D,EAgBtB/D,MAqBA6E,KArCsBd,EAiBtBc,KAqBAC,QAtCsBf,EAkBtBe,SAsBFC,IACGxB,OAAOlE,GACPJ,KAAK,SAAC+F,GACLC,IAAMC,QAAQ,kBACd1G,EAAKW,SAAS,CAAEuC,OAAQ,OAEzBpC,MAAM,SAAC6F,GACN,IAAMzD,EAASyD,EAAIjG,SAASG,KAC5Bb,EAAKyD,gBAAgBP,GACrBlD,EAAKW,SAAS,CAAEuC,WAChBuD,IAAM1F,MAAM,kBAjMCf,EAqMnB4G,SAAW,SAACC,GACV,OAAKA,GAAiB,SAATA,GAA4B,cAATA,GAGzBA,GAFE,IArMT7G,EAAKwB,MAAQ,CACXC,YAAa,GACbyB,OAAQ,GACRtC,SAAU,GACVY,MAAO,IANQxB,mFAUC,IAAA8G,EAAA3G,KACZ4G,EAAOC,IAAWC,cACxBV,IACGW,OAAOH,EAAKI,SACZ1G,KAAK,SAAC+F,GACLM,EAAKnG,SAALV,OAAAyB,EAAA,EAAAzB,CAAA,GAAmBuG,MAEpB1F,MAAM,SAAC6F,GACN3F,QAAQD,MAAM4F,KAElBxG,KAAKI,4CAwLE,IAAA6G,EAAAjH,KAAAkH,EAuBHlH,KAAKqB,MArBP0B,EAFKmE,EAELnE,OACAH,EAHKsE,EAGLtE,eACAyC,EAJK6B,EAIL7B,mBACAC,EALK4B,EAKL5B,UACAC,EANK2B,EAML3B,SACAC,EAPK0B,EAOL1B,cACAC,EARKyB,EAQLzB,WACAC,EATKwB,EASLxB,OACAzC,EAVKiE,EAULjE,YACAkE,EAXKD,EAWLC,MACAxB,EAZKuB,EAYLvB,QACApD,EAbK2E,EAaL3E,YACAqD,EAdKsB,EAcLtB,OACAC,EAfKqB,EAeLrB,KACAC,EAhBKoB,EAgBLpB,kBACAC,EAjBKmB,EAiBLnB,iBACAqB,EAlBKF,EAkBLE,YACA/F,EAnBK6F,EAmBL7F,MACA6E,EApBKgB,EAoBLhB,KACAC,EArBKe,EAqBLf,QACA1F,EAtBKyG,EAsBLzG,SAEF,OACE4G,EAAAtD,EAAAuD,cAACC,EAAA,EAAD,CAAWC,UAAU,oBACnBH,EAAAtD,EAAAuD,cAACG,EAAA,EAAD,CAAMD,UAAU,QACdH,EAAAtD,EAAAuD,cAACI,EAAA,EAAD,CAAYF,UAAU,eACpBH,EAAAtD,EAAAuD,cAAA,2BAEFD,EAAAtD,EAAAuD,cAACK,EAAA,EAAD,CAAUH,UAAU,QAClBH,EAAAtD,EAAAuD,cAACM,EAAA,EAAD,KACEP,EAAAtD,EAAAuD,cAACO,EAAA,EAAD,CAAKC,GAAI,GACPT,EAAAtD,EAAAuD,cAACS,EAAA,EAAD,KACEV,EAAAtD,EAAAuD,cAACU,EAAA,EAAD,CAAOR,UAAU,sBACd,IADH,cAEaH,EAAAtD,EAAAuD,cAAA,OAAKE,UAAU,iBAAf,MAEbH,EAAAtD,EAAAuD,cAACW,EAAA,EAAD,CACEC,KAAK,OACLrG,KAAK,YACLd,YAAaf,KAAKe,YAClBgC,OAAQA,EAAM,UACdoF,SAAUnI,KAAK6C,aACfuF,UAAU,EACVC,YAAY,0BACZ/F,MAAOtC,KAAKyG,SAASnB,OAI3B+B,EAAAtD,EAAAuD,cAACO,EAAA,EAAD,CAAKC,GAAI,GACPT,EAAAtD,EAAAuD,cAACS,EAAA,EAAD,KACEV,EAAAtD,EAAAuD,cAACU,EAAA,EAAD,CAAOR,UAAU,sBACd,IADH,aAEYH,EAAAtD,EAAAuD,cAAA,OAAKE,UAAU,iBAAf,MAEZH,EAAAtD,EAAAuD,cAACW,EAAA,EAAD,CACEC,KAAK,OACLrG,KAAK,WACLd,YAAaf,KAAKe,YAClBgC,OAAQA,EAAM,SACdoF,SAAUnI,KAAK6C,aACfuF,UAAU,EACVC,YAAY,yBACZ/F,MAAOtC,KAAKyG,SAASlB,OAI3B8B,EAAAtD,EAAAuD,cAACO,EAAA,EAAD,CAAKC,GAAI,GACPT,EAAAtD,EAAAuD,cAACS,EAAA,EAAD,KACEV,EAAAtD,EAAAuD,cAACU,EAAA,EAAD,CAAOR,UAAU,sBAAjB,oBACAH,EAAAtD,EAAAuD,cAACW,EAAA,EAAD,CACEC,KAAK,OACLrG,KAAK,gBACLd,YAAaf,KAAKe,YAClBgC,OAAQA,EAAM,cACdoF,SAAUnI,KAAK6C,aACfwF,YAAY,8BACZ/F,MAAOtC,KAAKyG,SAASjB,OAI3B6B,EAAAtD,EAAAuD,cAACO,EAAA,EAAD,CAAKC,GAAI,GACPT,EAAAtD,EAAAuD,cAACS,EAAA,EAAD,KACEV,EAAAtD,EAAAuD,cAACU,EAAA,EAAD,CAAOR,UAAU,sBAAjB,iBACAH,EAAAtD,EAAAuD,cAACW,EAAA,EAAD,CACEC,KAAK,OACLrG,KAAK,aACLd,YAAaf,KAAKe,YAClBgC,OAAQA,EAAM,WACdoF,SAAUnI,KAAK6C,aACfwF,YAAY,2BACZ/F,MAAOtC,KAAKyG,SAAShB,OAI3B4B,EAAAtD,EAAAuD,cAACO,EAAA,EAAD,CAAKC,GAAI,GACPT,EAAAtD,EAAAuD,cAACS,EAAA,EAAD,KACEV,EAAAtD,EAAAuD,cAACU,EAAA,EAAD,CAAOR,UAAU,sBAAjB,YACAH,EAAAtD,EAAAuD,cAACW,EAAA,EAAD,CACEC,KAAK,OACLrG,KAAK,SACLd,YAAaf,KAAKe,YAClBgC,OAAQA,EAAM,OACdoF,SAAUnI,KAAK6C,aACfwF,YAAY,sBACZ/F,MAAOtC,KAAKyG,SAASf,QAK7B2B,EAAAtD,EAAAuD,cAAA,WACAD,EAAAtD,EAAAuD,cAACM,EAAA,EAAD,KACEP,EAAAtD,EAAAuD,cAACO,EAAA,EAAD,CAAKC,GAAI,GACPT,EAAAtD,EAAAuD,cAACS,EAAA,EAAD,KACEV,EAAAtD,EAAAuD,cAACU,EAAA,EAAD,CAAOR,UAAU,sBAAjB,WACAH,EAAAtD,EAAAuD,cAACW,EAAA,EAAD,CACEC,KAAK,OACLrG,KAAK,QACLd,YAAaf,KAAKe,YAClBgC,OAAQA,EAAM,MACdoF,SAAUnI,KAAK6C,aACfuF,UAAU,EACVE,MAAM,QACND,YAAY,qBACZ/F,MAAOtC,KAAKyG,SAASU,GACrBoB,UAAU,MAIhBlB,EAAAtD,EAAAuD,cAACO,EAAA,EAAD,CAAKC,GAAI,GACPT,EAAAtD,EAAAuD,cAACS,EAAA,EAAD,KACEV,EAAAtD,EAAAuD,cAACU,EAAA,EAAD,CAAOR,UAAU,sBAAjB,kBACAH,EAAAtD,EAAAuD,cAACW,EAAA,EAAD,CACEC,KAAK,OACLrG,KAAK,cACLd,YAAaf,KAAKe,YAClBgC,OAAQA,EAAM,YACdoF,SAAUnI,KAAK6C,aACfyF,MAAM,cACND,YAAY,4BACZ/F,MAAOtC,KAAKyG,SAASxD,OAI3BoE,EAAAtD,EAAAuD,cAACO,EAAA,EAAD,CAAKC,GAAI,GACPT,EAAAtD,EAAAuD,cAACS,EAAA,EAAD,KACEV,EAAAtD,EAAAuD,cAACU,EAAA,EAAD,CAAOR,UAAU,sBAAjB,aACAH,EAAAtD,EAAAuD,cAACW,EAAA,EAAD,CACEC,KAAK,OACLrG,KAAK,UACLd,YAAaf,KAAKe,YAClBgC,OAAQA,EAAM,QACdoF,SAAUnI,KAAK6C,aACfP,MAAOtC,KAAKyG,SAASd,OAI3B0B,EAAAtD,EAAAuD,cAACO,EAAA,EAAD,CAAKC,GAAI,GACPT,EAAAtD,EAAAuD,cAACS,EAAA,EAAD,KACEV,EAAAtD,EAAAuD,cAACU,EAAA,EAAD,CAAOR,UAAU,sBAAjB,UACAH,EAAAtD,EAAAuD,cAACW,EAAA,EAAD,CACEC,KAAK,OACLrG,KAAK,OACLd,YAAaf,KAAKe,YAClBgC,OAAQA,EAAM,KACdoF,SAAUnI,KAAK6C,aACfP,MAAOtC,KAAKyG,SAASP,OAI3BmB,EAAAtD,EAAAuD,cAACO,EAAA,EAAD,CAAKC,GAAI,GACPT,EAAAtD,EAAAuD,cAACS,EAAA,EAAD,KACEV,EAAAtD,EAAAuD,cAACU,EAAA,EAAD,CAAOR,UAAU,sBAAjB,WACAH,EAAAtD,EAAAuD,cAACkB,EAAA,EAAD,CACEN,KAAK,SACL5F,MAAOjB,EACP8G,SAAU,SAACzG,GAAD,OAAOuF,EAAK7D,kBAAkB1B,EAAG,WAE3C2F,EAAAtD,EAAAuD,cAAA,eACC7G,GACCA,EAASgI,IAAI,SAACC,GACZ,OACErB,EAAAtD,EAAAuD,cAAA,UAAQlG,IAAKsH,EAAKC,KAAMrG,MAAOoG,EAAKC,MACjCD,EAAK7G,WAOpBwF,EAAAtD,EAAAuD,cAACO,EAAA,EAAD,CAAKC,GAAI,GACPT,EAAAtD,EAAAuD,cAACS,EAAA,EAAD,KACEV,EAAAtD,EAAAuD,cAACU,EAAA,EAAD,CAAOR,UAAU,sBAAjB,cACAH,EAAAtD,EAAAuD,cAACW,EAAA,EAAD,CACEC,KAAK,OACLrG,KAAK,UACLd,YAAaf,KAAKe,YAClBgC,OAAQA,EAAM,QACdoF,SAAUnI,KAAK6C,aACfP,MAAOtC,KAAKyG,SAASN,GACrBzG,QAAO,GAAAkJ,SAAK1C,QAKpBmB,EAAAtD,EAAAuD,cAAA,WACAD,EAAAtD,EAAAuD,cAACM,EAAA,EAAD,KACEP,EAAAtD,EAAAuD,cAACO,EAAA,EAAD,CAAKC,GAAI,GACPT,EAAAtD,EAAAuD,cAACS,EAAA,EAAD,KACEV,EAAAtD,EAAAuD,cAACU,EAAA,EAAD,CAAOR,UAAU,sBAAjB,iBACAH,EAAAtD,EAAAuD,cAACuB,EAAA9E,EAAD,CACE+E,WAAY,CACVT,YAAW,GAAAO,OACTrG,EAAcwG,YAAcxG,GAAe,eAG/CyG,eAAe,EACfC,YAAY,EACZC,WAAW,aACXC,YAAanJ,KAAK+B,UAClBoG,SAAU,SAACjE,GAAD,OAAU+C,EAAK5E,eAAe6B,QAI9CmD,EAAAtD,EAAAuD,cAACO,EAAA,EAAD,CAAKC,GAAI,GACPT,EAAAtD,EAAAuD,cAACS,EAAA,EAAD,KACEV,EAAAtD,EAAAuD,cAACU,EAAA,EAAD,CAAOR,UAAU,sBAAjB,oBACAH,EAAAtD,EAAAuD,cAACkB,EAAA,EAAD,CACEN,KAAK,SACL5F,MAAO+C,EACP8C,SAAU,SAACzG,GAAD,OACRuF,EAAK/D,sBAAsBxB,EAAG,wBAG/B0H,IAAKC,kBAAkBZ,IAAI,SAACC,EAAMY,GACjC,OACEjC,EAAAtD,EAAAuD,cAAA,UAAQlG,IAAKkI,EAAGhH,MAAOoG,EAAK1C,IACzB0C,EAAKrD,yBAOlBgC,EAAAtD,EAAAuD,cAACO,EAAA,EAAD,CAAKC,GAAI,GACPT,EAAAtD,EAAAuD,cAACS,EAAA,EAAD,KACEV,EAAAtD,EAAAuD,cAACU,EAAA,EAAD,CAAOR,UAAU,sBAAjB,UACAH,EAAAtD,EAAAuD,cAACkB,EAAA,EAAD,CACEN,KAAK,SACL5F,MAAOuD,EACPsC,SAAU,SAACzG,GAAD,OAAOuF,EAAK/D,sBAAsBxB,EAAG,UAE9C0H,IAAKG,KAAKd,IAAI,SAACC,EAAMY,GACpB,OACEjC,EAAAtD,EAAAuD,cAAA,UAAQlG,IAAKkI,EAAGhH,MAAOoG,EAAK1C,IACzB0C,EAAK7C,WAOlBwB,EAAAtD,EAAAuD,cAACO,EAAA,EAAD,CAAKC,GAAI,GACPT,EAAAtD,EAAAuD,cAACS,EAAA,EAAD,KACEV,EAAAtD,EAAAuD,cAACU,EAAA,EAAD,CAAOR,UAAU,sBACd,IADH,qBAEqB,KAErBH,EAAAtD,EAAAuD,cAACkB,EAAA,EAAD,CACEN,KAAK,SACL5F,MAAOwD,EACPqC,SAAU,SAACzG,GAAD,OACRuF,EAAK/D,sBAAsBxB,EAAG,uBAG/B0H,IAAKI,SAASf,IAAI,SAACC,EAAMY,GACxB,OACEjC,EAAAtD,EAAAuD,cAAA,UAAQlG,IAAKkI,EAAGhH,MAAOoG,EAAKC,MACzBD,EAAK5C,wBAOlBuB,EAAAtD,EAAAuD,cAACO,EAAA,EAAD,CAAKC,GAAI,GACPT,EAAAtD,EAAAuD,cAACS,EAAA,EAAD,KACEV,EAAAtD,EAAAuD,cAACU,EAAA,EAAD,CAAOR,UAAU,sBAAjB,UACAH,EAAAtD,EAAAuD,cAACkB,EAAA,EAAD,CACEN,KAAK,SACL5F,MAAOsD,EACPuC,SAAU,SAACzG,GAAD,OAAOuF,EAAK/D,sBAAsBxB,EAAG,YAE9C0H,IAAKK,OAAOhB,IAAI,SAACC,EAAMY,GACtB,OACEjC,EAAAtD,EAAAuD,cAAA,UAAQlG,IAAKkI,EAAGhH,MAAOoG,EAAK1C,IACzB0C,EAAK9C,aAOlByB,EAAAtD,EAAAuD,cAACO,EAAA,EAAD,CAAKC,GAAI,GACPT,EAAAtD,EAAAuD,cAACS,EAAA,EAAD,KACEV,EAAAtD,EAAAuD,cAACU,EAAA,EAAD,CAAOR,UAAU,sBACd,IADH,oBAEoB,KAEpBH,EAAAtD,EAAAuD,cAACkB,EAAA,EAAD,CACEN,KAAK,SACL5F,MAAOyD,EACPoC,SAAU,SAACzG,GAAD,OACRuF,EAAK/D,sBAAsBxB,EAAG,sBAG/B0H,IAAKM,WAAWjB,IAAI,SAACC,EAAMY,GAC1B,OACEjC,EAAAtD,EAAAuD,cAAA,UAAQlG,IAAKkI,EAAGhH,MAAOoG,EAAK1C,IACzB0C,EAAK3C,uBAOlBsB,EAAAtD,EAAAuD,cAACO,EAAA,EAAD,CAAKC,GAAI,GAAIN,UAAU,cACrBH,EAAAtD,EAAAuD,cAACU,EAAA,EAAD,CAAOR,UAAU,aAAjB,oBACoB,IACjBmC,YAAYvC,IACXC,EAAAtD,EAAAuD,cAAA,QAAME,UAAU,eAAhB,SAINH,EAAAtD,EAAAuD,cAACO,EAAA,EAAD,CAAKC,GAAI,IACPT,EAAAtD,EAAAuD,cAACsC,EAAA,EAAD,6BAGJvC,EAAAtD,EAAAuD,cAACuC,EAAA,EAAD,CAAcjJ,MAAOmC,EAAQyE,UAAU,UAEzCH,EAAAtD,EAAAuD,cAACwC,EAAA,EAAD,KACEzC,EAAAtD,EAAAuD,cAACM,EAAA,EAAD,CAAKJ,UAAU,0BACbH,EAAAtD,EAAAuD,cAAA,MAAIE,UAAS,eAAAoB,OAAiBhG,EAAiB,GAAK,WACjD,IADH,2BAKFyE,EAAAtD,EAAAuD,cAACM,EAAA,EAAD,CAAKJ,UAAU,QACbH,EAAAtD,EAAAuD,cAACO,EAAA,EAAD,CAAKL,UAAU,eACbH,EAAAtD,EAAAuD,cAACsC,EAAA,EAAD,CAAQG,MAAM,UAAUC,QAAShK,KAAK2D,UACnC,IADH,eAEe,SAMvB0D,EAAAtD,EAAAuD,cAAC2C,EAAA,EAAD,cAnjBiBC,aC5BVvK,8CCFf,IAAAwK,EAAAC,EAAA,IAAAC,EAAAD,EAAA,IAAAE,EAAAF,EAAA,GAAAG,EAAAH,EAAAI,EAAAF,GAAAG,EAAAL,EAAA,GAAAM,EAAAN,EAAAI,EAAAC,GAAAE,EAAAP,EAAA,IAAAQ,EAAAR,EAAAI,EAAAG,GAAAE,EAAAT,EAAA,GAMAU,EAAA,CACAC,IAAOF,EAAA,EACPrD,UAAakD,EAAA3G,EAASiH,OACtBC,UAAaP,EAAA3G,EAASmH,QAMtBxD,EAAA,SAAA9H,GACA,IAAA4H,EAAA5H,EAAA4H,UACAyD,EAAArL,EAAAqL,UACAE,EAAAvL,EAAAmL,IACAK,EAAmBtL,OAAAuK,EAAA,EAAAvK,CAA6BF,EAAA,iCAEhDyL,EAAgBvL,OAAA+K,EAAA,EAAA/K,CAAgB8K,IAAUpD,EAAA,eAAAyD,GAC1C,OAASV,EAAAxG,EAAKuD,cAAA6D,EAAoBrL,OAAAqK,EAAA,EAAArK,CAAQ,GAAGsL,EAAA,CAC7C5D,UAAA6D,MAIA3D,EAAAoD,YACApD,EAAA4D,aAjBA,CACAP,IAAA,OAiBeQ,EAAA,sCC7Bf,IAAApB,EAAAC,EAAA,IAAAC,EAAAD,EAAA,IAAAE,EAAAF,EAAA,GAAAG,EAAAH,EAAAI,EAAAF,GAAAG,EAAAL,EAAA,GAAAM,EAAAN,EAAAI,EAAAC,GAAAE,EAAAP,EAAA,IAAAQ,EAAAR,EAAAI,EAAAG,GAAAE,EAAAT,EAAA,GAMAU,EAAA,CACAC,IAAOF,EAAA,EACPrD,UAAakD,EAAA3G,EAASiH,OACtBC,UAAaP,EAAA3G,EAASmH,QAMtBpB,EAAA,SAAAlK,GACA,IAAA4H,EAAA5H,EAAA4H,UACAyD,EAAArL,EAAAqL,UACAE,EAAAvL,EAAAmL,IACAK,EAAmBtL,OAAAuK,EAAA,EAAAvK,CAA6BF,EAAA,iCAEhDyL,EAAgBvL,OAAA+K,EAAA,EAAA/K,CAAgB8K,IAAUpD,EAAA,eAAAyD,GAC1C,OAASV,EAAAxG,EAAKuD,cAAA6D,EAAoBrL,OAAAqK,EAAA,EAAArK,CAAQ,GAAGsL,EAAA,CAC7C5D,UAAA6D,MAIAvB,EAAAgB,YACAhB,EAAAwB,aAjBA,CACAP,IAAA,OAiBeQ,EAAA,mOCbTC,EAA0B,0BAC1BC,EAAkB,yBAElBxB,cACF,SAAAA,EAAYrK,GAAO,IAAAC,EAAA,OAAAC,OAAA4L,EAAA,EAAA5L,CAAAE,KAAAiK,IACfpK,EAAAC,OAAA6L,EAAA,EAAA7L,CAAAE,KAAAF,OAAA8L,EAAA,EAAA9L,CAAAmK,GAAA9J,KAAAH,KAAMJ,KAaViM,OAAS,WACLhM,EAAKW,SAAS,CAAEsL,QAASjM,EAAKwB,MAAMyK,UAfrBjM,EAkBnBkB,YAAc,SAACC,EAAOC,GAClB,GAAIA,EAAQ,KAAAC,EACJC,GAAQ,EACZ,IAAK,IAAIC,KAAOvB,EAAKwB,MAAMC,YACnBF,IAAQJ,GAAiB,UAARI,IACjBD,EAAQA,GAAStB,EAAKwB,MAAMC,YAAYF,IAGhDvB,EAAKW,SAAS,CAAEc,YAAYxB,OAAAiM,EAAA,EAAAjM,CAAA,GAAMD,EAAKwB,MAAMC,aAAlBJ,EAAA,GAAApB,OAAAkM,EAAA,EAAAlM,CAAAoB,EAAgCF,GAAQ,GAAxClB,OAAAkM,EAAA,EAAAlM,CAAAoB,EAAA,QAAqDC,GAArDD,UACxB,KAAA+K,EACHpM,EAAKW,SAAS,CAAEc,YAAYxB,OAAAiM,EAAA,EAAAjM,CAAA,GAAMD,EAAKwB,MAAMC,aAAlB2K,EAAA,GAAAnM,OAAAkM,EAAA,EAAAlM,CAAAmM,EAAgCjL,GAAQ,GAAxClB,OAAAkM,EAAA,EAAAlM,CAAAmM,EAAA,SAAsD,GAAtDA,QA5BhBpM,EAgCnBqM,qBAAuB,SAAAxK,GAAK,IAAAC,EACAD,EAAEE,OAAlBC,EADgBF,EAChBE,KAAMS,EADUX,EACVW,aACPzC,EAAKwB,MAAM0B,OAAX,sBACAlD,EAAKwB,MAAM0B,OAAOlB,UAClBhC,EAAKwB,MAAM8K,eAAetK,GACjChC,EAAKW,SAALV,OAAAkM,EAAA,EAAAlM,CAAA,GAAiB+B,EAAOS,GAAS,SAACT,GAAD,OAAUhC,EAAKuM,yBAAyBvK,MArC1DhC,EAwCnBuM,yBAA2B,SAACvK,GAAS,IAAAY,EACyB5C,EAAKwB,MAAvDgL,EADyB5J,EACzB4J,aAAcC,EADW7J,EACX6J,gBAAiBH,EADN1J,EACM0J,eACvC,GAAIE,GAAgBC,GAAmBD,IAAiBC,EACpDzM,EAAKW,SAAS,CAAE2L,eAAerM,OAAAiM,EAAA,EAAAjM,CAAA,GAAMqM,EAAP,CAAuBG,gBAAiB,CAACd,WACpE,CACH,IAAMe,EAAYJ,SACXI,EAAS,gBAChB1M,EAAKW,SAAS,CAAE2L,eAAgBI,MA/CrB1M,EAmDnB2M,eAAiB,WAAM,IAAApH,EACkEvF,EAAKwB,MAAlFgL,EADWjH,EACXiH,aAAcI,EADHrH,EACGqH,aAAcN,EADjB/G,EACiB+G,eAAgB7K,EADjC8D,EACiC9D,YAAagL,EAD9ClH,EAC8CkH,gBAC3D5L,EAAO,CAAE2L,eAAcI,eAAcH,mBACvCI,EAAW,GACf,IAAK,IAAMtL,KAAOV,EACI,KAAdA,EAAKU,KACLsL,EAAStL,GAAO,CAACqK,IAErB5L,EAAKW,SAAS,CAAE2L,eAAerM,OAAAiM,EAAA,EAAAjM,CAAA,GAAMqM,EAAmBO,KAExDlI,IAAEmI,QAAQR,IAAmB7K,EAAY+K,cAAgB/K,EAAYgL,iBAAmBhL,EAAYmL,cAAgBJ,IAAiBC,GACrIzM,EAAK+M,qBAAqBlM,IA9Dfb,EAkEnB+M,qBAAuB,SAAClM,GACpBmM,IAAYjI,OAAOlE,GAAMJ,KAAK,SAAA+F,GAC1BC,IAAMC,QAAQ,6BACf5F,MAAM,SAAA6F,GACL,IAAMzD,EAASyD,EAAIjG,UAAYiG,EAAIjG,SAASG,KACxCqC,GACAlD,EAAKW,SAAS,CAAEuC,WAEpBuD,IAAM1F,MAAM,2BAxEhBf,EAAKwB,MAAQ,CACTyK,QAAQ,EACRgB,SAAU,GACVL,aAAc,GACdJ,aAAc,GACdC,gBAAiB,GACjBH,eAAgB,GAChBpJ,OAAQ,GACRzB,YAAa,IAVFzB,wEA8EV,IAAAqH,EACsClH,KAAKqB,MAAxCyK,EADH5E,EACG4E,OAAQK,EADXjF,EACWiF,eAAgBpJ,EAD3BmE,EAC2BnE,OAChC,OACIgK,EAAAhJ,EAAAuD,cAAC0F,EAAA,EAAD,CAAMxF,UAAU,QACZuF,EAAAhJ,EAAAuD,cAAA,OAAKE,UAAU,8BACXuF,EAAAhJ,EAAAuD,cAAC2F,EAAA,EAAD,CAAQlD,MAAM,OAAOmD,SAAO,EAAClD,QAAShK,KAAK6L,QAA3C,kBAEMC,EAEEiB,EAAAhJ,EAAAuD,cAAA,KAAGE,UAAU,iCADbuF,EAAAhJ,EAAAuD,cAAA,KAAGE,UAAU,qCAIzBuF,EAAAhJ,EAAAuD,cAAC6F,EAAA,EAAD,CAAUrB,OAAQA,GACdiB,EAAAhJ,EAAAuD,cAAC8F,EAAA,EAAD,KACIL,EAAAhJ,EAAAuD,cAAC+F,EAAA,EAAD,KACIN,EAAAhJ,EAAAuD,cAACgG,EAAA,EAAD,CAAO9F,UAAU,sBAAjB,mBAEAuF,EAAAhJ,EAAAuD,cAAA,OAAKE,UAAU,iBAAf,MAEAuF,EAAAhJ,EAAAuD,cAACiG,EAAA,EAAD,CACIrF,KAAK,WACLrG,KAAK,eACLd,YAAaf,KAAKe,YAClBgC,OAAQoJ,EAAc,aACtBhE,SAAUnI,KAAKkM,qBACf9D,UAAU,KAGlB2E,EAAAhJ,EAAAuD,cAAC+F,EAAA,EAAD,KACIN,EAAAhJ,EAAAuD,cAACgG,EAAA,EAAD,CAAO9F,UAAU,sBAAjB,eAEAuF,EAAAhJ,EAAAuD,cAAA,OAAKE,UAAU,iBAAf,MAEAuF,EAAAhJ,EAAAuD,cAACiG,EAAA,EAAD,CACIrF,KAAK,WACLrG,KAAK,eACLd,YAAaf,KAAKe,YAClBgC,OAAQoJ,EAAc,aACtBhE,SAAUnI,KAAKkM,qBACfsB,UAAW,EACXlF,MAAM,WACNF,UAAU,KAGlB2E,EAAAhJ,EAAAuD,cAAC+F,EAAA,EAAD,KACIN,EAAAhJ,EAAAuD,cAACgG,EAAA,EAAD,CAAO9F,UAAU,sBAAjB,mBAEAuF,EAAAhJ,EAAAuD,cAAA,OAAKE,UAAU,iBAAf,MAEAuF,EAAAhJ,EAAAuD,cAACiG,EAAA,EAAD,CACIrF,KAAK,WACLrG,KAAK,kBACLd,YAAaf,KAAKe,YAClBgC,OAAQoJ,EAAc,gBACtBhE,SAAUnI,KAAKkM,qBACf9D,UAAU,KAGlB2E,EAAAhJ,EAAAuD,cAACmG,EAAA,EAAD,CAAc7M,MAAOmC,EAAQyE,UAAU,UAE3CuF,EAAAhJ,EAAAuD,cAACoG,EAAA,EAAD,CAAYlG,UAAU,eAClBuF,EAAAhJ,EAAAuD,cAAC2F,EAAA,EAAD,CAAQlD,MAAM,OAAOC,QAAShK,KAAKwM,gBAAnC,6BA5IKtC,aAoJdD","file":"static/js/34.c9807314.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  FormGroup,\r\n  Label,\r\n  CardHeader,\r\n} from \"reactstrap\";\r\n\r\nimport ErrorSummary from \"components/ErrorSummary\";\r\nimport ReactDatetime from \"react-datetime\";\r\nimport AuthHelper from \"helpers/AuthHelper\";\r\nimport { getDate, getDateFormat, getDateTime } from \"helpers/UtilsHelper\";\r\nimport { FormInput } from \"components/Form\";\r\nimport { toast } from \"react-toastify\";\r\nimport ChangePassword from \"components/Form/ChangePassword.jsx\";\r\nimport clientApi from \"../../../api/clientApi\";\r\nimport cons from \"../../../constants\";\r\nimport \"./ClientInfo.scss\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nclass ClientInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isFormReady: {},\r\n      errors: {},\r\n      us_state: [],\r\n      state: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthHelper.getUserInfo();\r\n    clientApi\r\n      .detail(user.user_id)\r\n      .then((res) => {\r\n        this.setState({ ...res });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n    this.getState();\r\n  }\r\n\r\n  getState = () => {\r\n    axios\r\n      .get(\"/location/states.json\")\r\n      .then((response) => {\r\n        this.setState({ us_state: response.data });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleError = (field, status) => {\r\n    let check = true;\r\n    if (status) {\r\n      for (let key in this.state.isFormReady) {\r\n        check = check && this.state.isFormReady[key];\r\n      }\r\n    }\r\n    this.setState({\r\n      isFormReady: {\r\n        ...this.state.isFormReady,\r\n        [field]: status,\r\n        check: check && status,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleCheckBox = (e) => {\r\n    const { name, checked } = e.target;\r\n    if (name === \"status\") {\r\n      if (checked === true) {\r\n        this.setState({ status: 0 });\r\n      } else {\r\n        this.setState({ status: 1 });\r\n      }\r\n    } else {\r\n      this.setState({ [name]: checked });\r\n    }\r\n  };\r\n\r\n  validDate = (current) => {\r\n    var today = moment().subtract(0, \"day\");\r\n    return current.isBefore(today);\r\n  };\r\n\r\n  setDateOfBirth = (value) => {\r\n    this.setState({ dateOfBirth: value });\r\n  };\r\n\r\n  checkMinor = () => {\r\n    const { isMinor, guardian } = this.state;\r\n    if (isMinor && guardian === \"\") {\r\n      this.setState({ isGuardianFail: true });\r\n    } else {\r\n      this.setState({ isGuardianFail: false });\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    delete this.state.errors[name];\r\n    delete this.state.errors[\"nonFieldErrors\"];\r\n    this.setState({ [name]: value });\r\n    if (name === \"guardian\" && value) {\r\n      this.setState({ isGuardianFail: false });\r\n    } else if (name === \"guardian\" && !value) {\r\n      this.setState({ isGuardianFail: true });\r\n    }\r\n  };\r\n\r\n  handlePhone = (phoneNumber) => {\r\n    this.setState({ phoneNumber });\r\n  };\r\n\r\n  handleSelectionChange = (e, field) => {\r\n    let { value } = e.target;\r\n    if (field === \"preferredLanguage\") {\r\n      this.setState({\r\n        [field]: value,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [field]: Number(value),\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChangeState = (e, field) => {\r\n    delete this.state.errors[field];\r\n    let { value } = e.target;\r\n    this.setState({ [field]: value });\r\n  };\r\n\r\n  handleChangeLocation = (e, field) => {\r\n    let { value } = e.target;\r\n    this.setState({ [field]: value });\r\n  };\r\n\r\n  focusFirstError = () => {\r\n    const element = document.querySelectorAll(\r\n      \".form__controller--error input\"\r\n    )[0];\r\n    if (element) {\r\n      element.focus();\r\n    }\r\n  };\r\n\r\n  saveForm = async (e) => {\r\n    const { dateOfBirth } = this.state;\r\n    if (!_.isNull(dateOfBirth) && _.isString(dateOfBirth)) {\r\n      let date = getDate(dateOfBirth);\r\n      this.update(date);\r\n    } else if (_.isObject(dateOfBirth)) {\r\n      const date = moment(dateOfBirth._d).format(\"YYYY-MM-DD\");\r\n      this.update(date);\r\n    } else {\r\n      this.update();\r\n    }\r\n  };\r\n\r\n  update = (dateOfBirth) => {\r\n    const {\r\n      relationshipStatus,\r\n      firstName,\r\n      lastName,\r\n      preferredName,\r\n      middleName,\r\n      suffix,\r\n      phoneNumber,\r\n      address,\r\n      gender,\r\n      race,\r\n      preferredLanguage,\r\n      employmentStatus,\r\n      id,\r\n      signedDocument,\r\n      state,\r\n      city,\r\n      zipcode,\r\n    } = this.state;\r\n    const data = {\r\n      relationshipStatus,\r\n      firstName,\r\n      lastName,\r\n      preferredName,\r\n      middleName,\r\n      suffix,\r\n      phoneNumber,\r\n      address,\r\n      dateOfBirth,\r\n      gender,\r\n      race,\r\n      preferredLanguage,\r\n      employmentStatus,\r\n      id,\r\n      signedDocument,\r\n      state,\r\n      city,\r\n      zipcode,\r\n    };\r\n    clientApi\r\n      .update(data)\r\n      .then((res) => {\r\n        toast.success(\"Update Success\");\r\n        this.setState({ errors: {} });\r\n      })\r\n      .catch((err) => {\r\n        const errors = err.response.data;\r\n        this.focusFirstError(errors);\r\n        this.setState({ errors });\r\n        toast.error(\"Update Fail\");\r\n      });\r\n  };\r\n\r\n  getValue = (text) => {\r\n    if (!text || text === \"null\" || text === \"undefined\") {\r\n      return \"\";\r\n    }\r\n    return text || \"\";\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      errors,\r\n      isGuardianFail,\r\n      relationshipStatus,\r\n      firstName,\r\n      lastName,\r\n      preferredName,\r\n      middleName,\r\n      suffix,\r\n      phoneNumber,\r\n      email,\r\n      address,\r\n      dateOfBirth,\r\n      gender,\r\n      race,\r\n      preferredLanguage,\r\n      employmentStatus,\r\n      firstSeenAt,\r\n      state,\r\n      city,\r\n      zipcode,\r\n      us_state,\r\n    } = this.state;\r\n    return (\r\n      <Container className=\"client-info mt-6\">\r\n        <Card className=\"mt-3\">\r\n          <CardHeader className=\"text-center\">\r\n            <h2>Edit Profile</h2>\r\n          </CardHeader>\r\n          <CardBody className=\"mx-3\">\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">\r\n                    {\" \"}\r\n                    First Name <sup className=\"text-required\">*</sup>\r\n                  </Label>\r\n                  <FormInput\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    handleError={this.handleError}\r\n                    errors={errors[\"firstName\"]}\r\n                    onChange={this.handleChange}\r\n                    required={true}\r\n                    placeholder=\"Type your first name...\"\r\n                    value={this.getValue(firstName)}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">\r\n                    {\" \"}\r\n                    Last Name <sup className=\"text-required\">*</sup>\r\n                  </Label>\r\n                  <FormInput\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    handleError={this.handleError}\r\n                    errors={errors[\"lastName\"]}\r\n                    onChange={this.handleChange}\r\n                    required={true}\r\n                    placeholder=\"Type your last name...\"\r\n                    value={this.getValue(lastName)}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\"> Preferred name </Label>\r\n                  <FormInput\r\n                    type=\"text\"\r\n                    name=\"preferredName\"\r\n                    handleError={this.handleError}\r\n                    errors={errors[\"preferredName\"]}\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"Type your preferred name...\"\r\n                    value={this.getValue(preferredName)}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\"> Middle Name </Label>\r\n                  <FormInput\r\n                    type=\"text\"\r\n                    name=\"middleName\"\r\n                    handleError={this.handleError}\r\n                    errors={errors[\"middleName\"]}\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"Type your middle name...\"\r\n                    value={this.getValue(middleName)}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\"> Suffix </Label>\r\n                  <FormInput\r\n                    type=\"text\"\r\n                    name=\"suffix\"\r\n                    handleError={this.handleError}\r\n                    errors={errors[\"suffix\"]}\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"Type your suffix...\"\r\n                    value={this.getValue(suffix)}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <hr />\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\"> Email </Label>\r\n                  <FormInput\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    handleError={this.handleError}\r\n                    errors={errors[\"email\"]}\r\n                    onChange={this.handleChange}\r\n                    required={true}\r\n                    regex=\"email\"\r\n                    placeholder=\"Type your email...\"\r\n                    value={this.getValue(email)}\r\n                    disabled={true}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\"> Phone Number </Label>\r\n                  <FormInput\r\n                    type=\"text\"\r\n                    name=\"phoneNumber\"\r\n                    handleError={this.handleError}\r\n                    errors={errors[\"phoneNumber\"]}\r\n                    onChange={this.handleChange}\r\n                    regex=\"phoneNumber\"\r\n                    placeholder=\"Type your phone number...\"\r\n                    value={this.getValue(phoneNumber)}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\"> Address </Label>\r\n                  <FormInput\r\n                    type=\"text\"\r\n                    name=\"address\"\r\n                    handleError={this.handleError}\r\n                    errors={errors[\"address\"]}\r\n                    onChange={this.handleChange}\r\n                    value={this.getValue(address)}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\"> City </Label>\r\n                  <FormInput\r\n                    type=\"text\"\r\n                    name=\"city\"\r\n                    handleError={this.handleError}\r\n                    errors={errors[\"city\"]}\r\n                    onChange={this.handleChange}\r\n                    value={this.getValue(city)}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\"> State </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    value={state}\r\n                    onChange={(e) => this.handleChangeState(e, \"state\")}\r\n                  >\r\n                    <option></option>\r\n                    {us_state &&\r\n                      us_state.map((item) => {\r\n                        return (\r\n                          <option key={item.code} value={item.code}>\r\n                            {item.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\"> Zip Code </Label>\r\n                  <FormInput\r\n                    type=\"text\"\r\n                    name=\"zipcode\"\r\n                    handleError={this.handleError}\r\n                    errors={errors[\"zipcode\"]}\r\n                    onChange={this.handleChange}\r\n                    value={this.getValue(zipcode)}\r\n                    require={`${city ? true : false}`}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <hr />\r\n            <Row>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Date of Birth</Label>\r\n                  <ReactDatetime\r\n                    inputProps={{\r\n                      placeholder: `${\r\n                        dateOfBirth ? getDateFormat(dateOfBirth) : \"MM/DD/YYYY\"\r\n                      }`,\r\n                    }}\r\n                    closeOnSelect={true}\r\n                    timeFormat={false}\r\n                    dateFormat=\"MM/DD/YYYY\"\r\n                    isValidDate={this.validDate}\r\n                    onChange={(date) => this.setDateOfBirth(date)}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\"> Marital Status </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    value={relationshipStatus}\r\n                    onChange={(e) =>\r\n                      this.handleSelectionChange(e, \"relationshipStatus\")\r\n                    }\r\n                  >\r\n                    {cons.RELATIONSHIP_INFO.map((item, i) => {\r\n                      return (\r\n                        <option key={i} value={item.id}>\r\n                          {item.relationshipStatus}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\"> Race </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    value={race}\r\n                    onChange={(e) => this.handleSelectionChange(e, \"race\")}\r\n                  >\r\n                    {cons.RACE.map((item, i) => {\r\n                      return (\r\n                        <option key={i} value={item.id}>\r\n                          {item.race}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">\r\n                    {\" \"}\r\n                    Preferred Language{\" \"}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    value={preferredLanguage}\r\n                    onChange={(e) =>\r\n                      this.handleSelectionChange(e, \"preferredLanguage\")\r\n                    }\r\n                  >\r\n                    {cons.LANGUAGE.map((item, i) => {\r\n                      return (\r\n                        <option key={i} value={item.code}>\r\n                          {item.preferredLanguage}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Gender</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    value={gender}\r\n                    onChange={(e) => this.handleSelectionChange(e, \"gender\")}\r\n                  >\r\n                    {cons.GENDER.map((item, i) => {\r\n                      return (\r\n                        <option key={i} value={item.id}>\r\n                          {item.gender}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">\r\n                    {\" \"}\r\n                    Employment Status{\" \"}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    value={employmentStatus}\r\n                    onChange={(e) =>\r\n                      this.handleSelectionChange(e, \"employmentStatus\")\r\n                    }\r\n                  >\r\n                    {cons.EMPLOYMENT.map((item, i) => {\r\n                      return (\r\n                        <option key={i} value={item.id}>\r\n                          {item.employmentStatus}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={12} className=\"text-right\">\r\n                <Label className=\"join-date\">\r\n                  Date First Seen :{\" \"}\r\n                  {getDateTime(firstSeenAt) || (\r\n                    <span className=\"text-danger\">N/A</span>\r\n                  )}\r\n                </Label>\r\n              </Col>\r\n              <Col md={12}>\r\n                <Button>Download Documents</Button>\r\n              </Col>\r\n            </Row>\r\n            <ErrorSummary error={errors} className=\"mt-3\" />\r\n          </CardBody>\r\n          <CardFooter>\r\n            <Row className=\"justify-content-center\">\r\n              <li className={`text-danger ${isGuardianFail ? \"\" : \"d-none\"}`}>\r\n                {\" \"}\r\n                Please select Guardian\r\n              </li>\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n              <Col className=\"text-center\">\r\n                <Button color=\"success\" onClick={this.saveForm}>\r\n                  {\" \"}\r\n                  Save Changes{\" \"}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </CardFooter>\r\n        </Card>\r\n        <ChangePassword />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClientInfo;\r\n","import ClientInfo from './ClientInfo';\r\n\r\nexport default ClientInfo;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardFooter = function CardFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-footer'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardFooter.propTypes = propTypes;\nCardFooter.defaultProps = defaultProps;\nexport default CardFooter;","import React, { Component } from 'react';\r\nimport _ from \"lodash\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    FormGroup,\r\n    Label,\r\n    CardFooter,\r\n    Button,\r\n    Collapse,\r\n} from \"reactstrap\";\r\nimport { FormInput } from 'components/Form';\r\nimport ErrorSummary from 'components/ErrorSummary';\r\nimport passwordApi from '../../api/passwordApi'\r\nimport { toast } from 'react-toastify';\r\n\r\nconst misMatchPasswordMessage = \"Password does not match\";\r\nconst requiredMessage = \"This Field is required\";\r\n\r\nclass ChangePassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n            password: '',\r\n            old_password: '',\r\n            new_password: '',\r\n            confirmPassword: '',\r\n            errorsPassword: {},\r\n            errors: {},\r\n            isFormReady: {},\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({ isOpen: !this.state.isOpen })\r\n    }\r\n\r\n    handleError = (field, status) => {\r\n        if (status) {\r\n            let check = true;\r\n            for (let key in this.state.isFormReady) {\r\n                if (key !== field && key !== 'check') {\r\n                    check = check && this.state.isFormReady[key];\r\n                }\r\n            }\r\n            this.setState({ isFormReady: { ...this.state.isFormReady, [field]: true, check: check } });\r\n        } else {\r\n            this.setState({ isFormReady: { ...this.state.isFormReady, [field]: false, check: false } });\r\n        }\r\n    }\r\n\r\n    handleChangePassword = e => {\r\n        const { name, value } = e.target;\r\n        delete this.state.errors[\"nonFieldErrors\"];\r\n        delete this.state.errors[name];\r\n        delete this.state.errorsPassword[name];\r\n        this.setState({ [name]: value }, (name) => this.handleCheckPasswordMatch(name));\r\n    }\r\n\r\n    handleCheckPasswordMatch = (name) => {\r\n        const { new_password, confirmPassword, errorsPassword } = this.state;\r\n        if (new_password && confirmPassword && new_password !== confirmPassword) {\r\n            this.setState({ errorsPassword: { ...errorsPassword, confirmPassword: [misMatchPasswordMessage] } })\r\n        } else {\r\n            const tempError = errorsPassword;\r\n            delete tempError['confirmPassword'];\r\n            this.setState({ errorsPassword: tempError });\r\n        }\r\n    }\r\n\r\n    updatePassword = () => {\r\n        const { new_password, old_password, errorsPassword, isFormReady, confirmPassword } = this.state;\r\n        const data = { new_password, old_password, confirmPassword }\r\n        let newError = {}\r\n        for (const key in data) {\r\n            if (data[key] === '') {\r\n                newError[key] = [requiredMessage]\r\n            }\r\n            this.setState({ errorsPassword: { ...errorsPassword, ...newError } })\r\n        }\r\n        if (_.isEmpty(errorsPassword) && isFormReady.new_password && isFormReady.confirmPassword && isFormReady.old_password && new_password === confirmPassword) {\r\n            this.getApiUpdatePassword(data)\r\n        }\r\n    }\r\n\r\n    getApiUpdatePassword = (data) => {\r\n        passwordApi.update(data).then(res => {\r\n            toast.success(\"Update password success\");\r\n        }).catch(err => {\r\n            const errors = err.response && err.response.data;\r\n            if (errors) {\r\n                this.setState({ errors });\r\n            }\r\n            toast.error(\"Update password fail\");\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { isOpen, errorsPassword, errors } = this.state\r\n        return (\r\n            <Card className=\"my-3\">\r\n                <div className=\"text-center mt-3 mb-3 mb-0\">\r\n                    <Button color=\"info\" outline onClick={this.toggle}>\r\n                        Change Password\r\n                        {!isOpen ?\r\n                            <i className=\"fas fa-chevron-down fa-lg ml-2\" /> :\r\n                            <i className=\"fas fa-chevron-up fa-lg ml-2\" />}\r\n                    </Button>\r\n                </div>\r\n                <Collapse isOpen={isOpen}>\r\n                    <CardBody>\r\n                        <FormGroup>\r\n                            <Label className=\"form-control-label\" >\r\n                                Current Password\r\n                            <sup className=\"text-required\">*</sup>\r\n                            </Label>\r\n                            <FormInput\r\n                                type=\"password\"\r\n                                name=\"old_password\"\r\n                                handleError={this.handleError}\r\n                                errors={errorsPassword['old_password']}\r\n                                onChange={this.handleChangePassword}\r\n                                required={true}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label className=\"form-control-label\" >\r\n                                New Password\r\n                            <sup className=\"text-required\">*</sup>\r\n                            </Label>\r\n                            <FormInput\r\n                                type=\"password\"\r\n                                name=\"new_password\"\r\n                                handleError={this.handleError}\r\n                                errors={errorsPassword['new_password']}\r\n                                onChange={this.handleChangePassword}\r\n                                minLength={8}\r\n                                regex=\"password\"\r\n                                required={true}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label className=\"form-control-label\" >\r\n                                Confirm Password\r\n                            <sup className=\"text-required\">*</sup>\r\n                            </Label>\r\n                            <FormInput\r\n                                type=\"password\"\r\n                                name=\"confirmPassword\"\r\n                                handleError={this.handleError}\r\n                                errors={errorsPassword['confirmPassword']}\r\n                                onChange={this.handleChangePassword}\r\n                                required={true}\r\n                            />\r\n                        </FormGroup>\r\n                        <ErrorSummary error={errors} className=\"mt-3\" />\r\n                    </CardBody>\r\n                    <CardFooter className=\"text-center\">\r\n                        <Button color=\"info\" onClick={this.updatePassword}>Update Password</Button>\r\n                    </CardFooter>\r\n                </Collapse>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChangePassword;"],"sourceRoot":""}