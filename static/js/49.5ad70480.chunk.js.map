{"version":3,"sources":["pages/client/ProviderInfo/ProviderInfo.jsx","pages/client/ProviderInfo/index.js"],"names":["provider_types","cons","PROVIDER_TYPE","map","item","name","provider_type","isUsable","id","ProviderInfo","dispatch","useDispatch","providerData","useSelector","state","provider","data","useEffect","user","AuthHelper","getUserInfo","clientApi","detail","user_id","then","res","getDetail","userProvider","catch","err","console","error","providerTypes","tempProviderTypesArr","split","listProviderType","Object","objectSpread","includes","String","filter","avatarUrl","_","get","defaultAvatar","fullName","getUserFullName","react_default","a","createElement","className","Card","Row","CardImg","alt","src","CardBody","FormGroup","Label","Col","md","i","key","formatPhoneNumber","phoneNumber","email"],"mappings":"iRAsBMA,UAAiBC,IAAKC,cAAcC,IAAI,SAACC,GAC7C,MAAO,CACLC,KAAMD,EAAKE,cACXC,UAAU,EACVC,GAAIJ,EAAKI,OAiGEC,MA7Ff,WACE,IAAMC,EAAWC,cACXC,EAAeC,YAAY,SAACC,GAAD,OAAWA,EAAMC,SAASC,OAE3DC,oBAAU,WACR,IAAMC,EAAOC,IAAWC,cACxBC,IACGC,OAAOJ,EAAKK,SACZC,KAAK,SAACC,GACLf,EAASgB,YAAUD,EAAIE,iBAExBC,MAAM,SAACC,GACNC,QAAQC,MAAMF,MAEjB,IAdmB,IAgBdG,EAAkBpB,EAAlBoB,cACFC,EAAuBD,GAAiBA,EAAcE,MAAM,KAO5DC,EANUnC,EAAeG,IAAI,SAACC,GAAD,OAAAgC,OAAAC,EAAA,EAAAD,CAAA,GAC9BhC,EAD8B,CAEjCG,WAAU0B,GACNA,EAAqBK,SAASC,OAAOnC,EAAKI,SAGfgC,OAAO,SAACpC,GAAD,OAAUA,EAAKG,WACjDkC,EAAYC,IAAEC,IAAI/B,EAAc,SAAUgC,KAC1CC,EAAWC,YAAgBlC,GAEjC,OACEmC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,QACdH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKF,UAAU,yCACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,IAAI,MACJJ,UAAU,sCACVK,IAAKd,MAIXM,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAUN,UAAU,aAClBH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAOR,UAAU,sBAAjB,WAEFH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKF,UAAU,WACbH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAKC,GAAI,GACPb,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaL,MAIhCE,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAOR,UAAU,sBAAjB,oBAEFH,EAAAC,EAAAC,cAAA,UACGd,EAAiBhC,IAAI,SAACC,EAAMyD,GAC3B,OACEd,EAAAC,EAAAC,cAAA,MAAIa,IAAKD,EAAGX,UAAU,aACpBH,EAAAC,EAAAC,cAAA,SAAI7C,EAAKC,WAMnB0C,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAOR,UAAU,sBAAjB,YAEFH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKF,UAAU,WACbH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAKC,GAAI,GACPb,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aACVa,YAAkBnD,EAAaoD,cAAgB,WAKxDjB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,KACEV,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAOR,UAAU,sBAAjB,YAEFH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKF,UAAU,WACbH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAKC,GAAI,GACPb,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAatC,EAAaqD,OAAS,eC/GjDxD","file":"static/js/49.5ad70480.chunk.js","sourcesContent":["import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  FormGroup,\r\n  Label,\r\n  CardImg,\r\n} from \"reactstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getDetail } from \"../../../redux/actions/providerAction\";\r\nimport { getUserFullName } from \"helpers/UtilsHelper\";\r\nimport AuthHelper from \"helpers/AuthHelper\";\r\nimport defaultAvatar from \"../../../assets/img/theme/default-avatar.png\";\r\nimport clientApi from \"../../../api/clientApi\";\r\nimport cons from \"../../../constants\";\r\nimport \"./ProviderInfo.scss\";\r\nimport { useEffect } from \"react\";\r\nimport { formatPhoneNumber } from \"../../../helpers/UtilsHelper\";\r\n\r\nconst provider_types = cons.PROVIDER_TYPE.map((item) => {\r\n  return {\r\n    name: item.provider_type,\r\n    isUsable: false,\r\n    id: item.id,\r\n  };\r\n});\r\n\r\nfunction ProviderInfo() {\r\n  const dispatch = useDispatch();\r\n  const providerData = useSelector((state) => state.provider.data);\r\n\r\n  useEffect(() => {\r\n    const user = AuthHelper.getUserInfo();\r\n    clientApi\r\n      .detail(user.user_id)\r\n      .then((res) => {\r\n        dispatch(getDetail(res.userProvider));\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }, []);\r\n\r\n  const { providerTypes } = providerData;\r\n  const tempProviderTypesArr = providerTypes && providerTypes.split(\",\");\r\n  const tempArr = provider_types.map((item) => ({\r\n    ...item,\r\n    isUsable: tempProviderTypesArr\r\n      ? tempProviderTypesArr.includes(String(item.id))\r\n      : false,\r\n  }));\r\n  const listProviderType = tempArr.filter((item) => item.isUsable);\r\n  const avatarUrl = _.get(providerData, \"avatar\", defaultAvatar);\r\n  const fullName = getUserFullName(providerData);\r\n\r\n  return (\r\n    <div className=\"provider-info-wrapper mt-7\">\r\n      <Card className=\"mt-3\">\r\n        <Row className=\"align-items-center card-profile-image\">\r\n          <div>\r\n            <CardImg\r\n              alt=\"...\"\r\n              className=\"rounded-circle custom-avatar avatar\"\r\n              src={avatarUrl}\r\n            />\r\n          </div>\r\n        </Row>\r\n        <CardBody className=\"mx-3 mt-6\">\r\n          <FormGroup>\r\n            <Row>\r\n              <Label className=\"form-control-label\"> Name </Label>\r\n            </Row>\r\n            <Row className=\"d-block\">\r\n              <Col md={8}>\r\n                <b className=\"text-info\">{fullName}</b>\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Row>\r\n              <Label className=\"form-control-label\"> Provider Type </Label>\r\n            </Row>\r\n            <ul>\r\n              {listProviderType.map((item, i) => {\r\n                return (\r\n                  <li key={i} className=\"text-info\">\r\n                    <b>{item.name}</b>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Row>\r\n              <Label className=\"form-control-label\"> Phone </Label>\r\n            </Row>\r\n            <Row className=\"d-block\">\r\n              <Col md={8}>\r\n                <b className=\"text-info\">\r\n                  {formatPhoneNumber(providerData.phoneNumber) || \"None\"}\r\n                </b>\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Row>\r\n              <Label className=\"form-control-label\"> Email </Label>\r\n            </Row>\r\n            <Row className=\"d-block\">\r\n              <Col md={8}>\r\n                <b className=\"text-info\">{providerData.email || \"None\"}</b>\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProviderInfo;\r\n","import ProviderInfo from './ProviderInfo';\r\n\r\nexport default ProviderInfo;"],"sourceRoot":""}