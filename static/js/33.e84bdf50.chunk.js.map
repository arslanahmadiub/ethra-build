{"version":3,"sources":["pages/provider/Billing/BookingInvoice.jsx","pages/provider/Billing/ListBookingInvoice.jsx","pages/provider/Billing/index.js","components/PaginationBar/index.js","helpers/BillingHelper.js"],"names":["BookingInvoice","props","item","status","getStatusInfo","cons","BILLING_STATUS_INFO","react_default","a","createElement","className","getDateTime","createdAt","react_router_dom","to","concat","id","invoiceNumber","dueDate","Badge","color","fixNumber","totalAmount","defaultState","dropdownStatusName","isLoading","isOpenSideBar","dropdownStatusOpen","checkVoidStatus","start_date","end_date","defaultFilters","limit","offset","selected","desc","ListBookingInvoice","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeFilterStatus","e","itemName","_e$target","target","value","name","Number","BILLING_STATUS","VOID","setState","filters","resetFilterData","getList","handleFilterVoidBilling","checked","filter","_this$state","state","objectSpread","getDate","_d","sort","attributes","ordering","handleReactDatetimeChange","_ref","asyncToGenerator","regenerator_default","mark","_callee","who","date","wrap","_context","prev","next","Date","defineProperty","stop","_x","_x2","apply","arguments","getClassNameReactDatetimeDays","selectPageSize","tickCheckAll","selectPage","_ref2","Math","ceil","clearFilterData","toggleSelectStatus","exportCSV","_callee2","tableData","data","filename","options","_context2","bookingInvoiceData","result","getExportData","BILLING_EXPORT_CSV_CODE","PROVIDER_BOOKING_INVOICE","String","moment","valueOf","fieldSeparator","quoteStrings","decimalSeparator","showLabels","showTitle","useTextFile","useBom","useKeysAsHeaders","ExportToCsv","generateCsv","user","AuthHelper","getUserInfo","getDetail","user_id","getInvoiceDetail","_this2","_this$props","loading","providerData","bookingInvoiceDetail","bookingList","getBookingList","totalChargedBookings","getTotalChargedBooking","_this$state2","bookingInvoiceArr","_this$filters","totalPage","count","paginationSetting","sortClass","title","get","Fragment","Col","Row","md","etheraCredit","promoCredit","cancelationBalance","Card","Loading","CardHeader","xl","lg","xs","sm","DateTime_default","inputProps","placeholder","closeOnSelect","timeFormat","dateFormat","onChange","renderDay","currentDate","selectedDate","classes","assign","Button","size","onClick","disabled","length","CardBody","Table","responsive","classNames","map","i","Billing_BookingInvoice","key","check","handleCheckbox","openSideBar","toggleSideBar","setStatus","getProviderUpdateStatus","toggleAction","PaginationBar","setting","handleClick","Input","bsSize","type","Label","Component","mapActionToProps","connect","billing","provider","detailData","Billing","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_paginate__WEBPACK_IMPORTED_MODULE_1__","react_paginate__WEBPACK_IMPORTED_MODULE_1___default","previousLabel","nextLabel","breakLabel","breakClassName","breakLinkClassName","pageCount","forcePage","marginPagesDisplayed","marginPages","pageRangeDisplayed","pageRange","onPageChange","containerClassName","subContainerClassName","activeClassName","pageLinkClassName","pageClassName","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","disabledClassName","forEach","booking","prices","price","prevHours","totalHours","C_Users_Arslan_Documents_ethera_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","hours","push","getCancellationList","BOOKING_STATUS","CANCELED","getCredit","totalCredit","PAID","promoApplied","appliedPromoCredit","etheraApplied","appliedEtheraCredit","listData","reduce","total","currentValue","getTotalCharged","creditApplied"],"mappings":"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","file":"static/js/33.e84bdf50.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Badge } from \"reactstrap\";\r\nimport {\r\n  getDateTime,\r\n  getDateFormat,\r\n  getStatusInfo,\r\n  fixNumber,\r\n} from \"helpers/UtilsHelper\";\r\nimport cons from \"../../../constants\";\r\nimport moment from \"moment\";\r\nconst BookingInvoice = (props) => {\r\n  const { item } = props;\r\n\r\n  const status = getStatusInfo(cons.BILLING_STATUS_INFO, item.status);\r\n\r\n  // let startOfWeek = moment(item.createdAt).startOf(\"week\");\r\n  // let endOfWeek = moment(item.createdAt).endOf(\"week\");\r\n\r\n  // let startDate = getDateFormat(startOfWeek, \"MM/DD/YYYY\");\r\n  // let endDate = getDateFormat(endOfWeek, \"MM/DD/YYYY\");\r\n\r\n  return (\r\n    <tr className=\"invoice\">\r\n      <td className=\"text-center\">\r\n        {getDateTime(item.createdAt, \"MM/DD/YYYY\")}\r\n        {/* {startDate} */}\r\n      </td>\r\n      <td className=\"text-center\">\r\n        <Link to={`/provider/billings/booking-invoice/detail/${item.id}`}>\r\n          #{item.invoiceNumber}\r\n        </Link>\r\n      </td>\r\n      <td className=\"text-center\">\r\n        {getDateTime(item.dueDate, \"MM/DD/YYYY\")}\r\n        {/* {endDate} */}\r\n      </td>\r\n      <td className=\"text-center\">\r\n        <Badge color=\"\" className=\"badge-dot mr-4\">\r\n          <i className={`bg-${status.color}`} />\r\n          <span className=\"status\">{status.status || \"Unknown\"}</span>\r\n        </Badge>\r\n      </td>\r\n      <td className=\"table-actions text-center\">\r\n        {fixNumber(item.totalAmount)}\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default BookingInvoice;\r\n","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames/bind\";\r\nimport ReactDatetime from \"react-datetime\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Table,\r\n  Row,\r\n  Col,\r\n  CardHeader,\r\n  CardBody,\r\n  Input,\r\n  Label,\r\n  ButtonGroup,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\nimport {\r\n  getDate,\r\n  getExportData,\r\n  fixNumber,\r\n} from \"../../../helpers/UtilsHelper\";\r\nimport { getBookingList, getTotalChargedBooking } from \"helpers/BillingHelper\";\r\nimport AuthHelper from \"../../../helpers/AuthHelper\";\r\nimport { getDetail } from \"../../../redux/actions/providerAction\";\r\nimport {\r\n  getList,\r\n  getInvoiceDetail,\r\n} from \"../../../redux/actions/billingAction\";\r\nimport { ExportToCsv } from \"export-to-csv\";\r\nimport PaginationBar from \"../../../components/PaginationBar\";\r\nimport Loading from \"../../../components/Loading\";\r\nimport cons from \"../../../constants\";\r\nimport BookingInvoice from \"./BookingInvoice\";\r\nimport \"./ListInvoice.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst defaultState = () => {\r\n  return {\r\n    dropdownStatusName: \"All Status\",\r\n    status: \"\",\r\n    isLoading: true,\r\n    isOpenSideBar: false,\r\n    dropdownStatusOpen: false,\r\n    checkVoidStatus: false,\r\n    start_date: \"\",\r\n    end_date: \"\",\r\n  };\r\n};\r\nconst defaultFilters = () => {\r\n  return {\r\n    limit: 10,\r\n    offset: 0,\r\n    selected: 0,\r\n    desc: false,\r\n    status: \"\",\r\n  };\r\n};\r\n\r\nclass ListBookingInvoice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = defaultState();\r\n    this.filters = defaultFilters();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getList(this.filters);\r\n    const user = AuthHelper.getUserInfo();\r\n    this.props.getDetail(user.user_id);\r\n    const invoiceId = \"preview-invoice\";\r\n    this.props.getInvoiceDetail(invoiceId);\r\n  }\r\n\r\n  handleChangeFilterStatus = (e, itemName) => {\r\n    const { value, name } = e.target;\r\n    if (name === \"status\") {\r\n      if (Number(value) === cons.BILLING_STATUS.VOID) {\r\n        this.setState({ checkVoidStatus: true });\r\n      } else {\r\n        this.setState({ checkVoidStatus: false });\r\n      }\r\n    }\r\n    this.setState({ dropdownStatusName: itemName });\r\n    this.filters[name] = value;\r\n    this.resetFilterData();\r\n    this.props.getList(this.filters);\r\n  };\r\n\r\n  handleFilterVoidBilling = (e) => {\r\n    const { checked } = e.target;\r\n    if (checked) {\r\n      this.filters.status = cons.BILLING_STATUS.VOID;\r\n      this.setState({ dropdownStatusName: \"Void created\" });\r\n    } else {\r\n      this.filters.status = \"\";\r\n      this.setState({ dropdownStatusName: \"All Status\" });\r\n    }\r\n    this.setState({ checkVoidStatus: checked });\r\n    this.resetFilterData();\r\n    this.props.getList(this.filters);\r\n  };\r\n\r\n  filter = () => {\r\n    const { start_date, end_date } = this.state;\r\n    this.filters = {\r\n      ...this.filters,\r\n      start_date: start_date ? getDate(start_date._d) : \"\",\r\n      end_date: end_date ? getDate(end_date._d) : \"\",\r\n    };\r\n    this.resetFilterData();\r\n    this.props.getList(this.filters);\r\n  };\r\n\r\n  sort = (e) => {\r\n    let name = e.target.attributes.name.value;\r\n    if (name && name === this.filters.ordering) {\r\n      this.filters.desc = !this.filters.desc;\r\n    } else {\r\n      this.filters.ordering = name;\r\n      this.filters.desc = true;\r\n    }\r\n    this.resetFilterData();\r\n    this.props.getList(this.filters);\r\n  };\r\n\r\n  handleReactDatetimeChange = async (who, date) => {\r\n    if (\r\n      this.state.start_date &&\r\n      who === \"end_date\" &&\r\n      new Date(this.state.start_date._d + \"\") > new Date(date._d + \"\")\r\n    ) {\r\n      await this.setState({\r\n        start_date: date,\r\n        end_date: date,\r\n      });\r\n      this.filter();\r\n    } else if (\r\n      this.state.end_date &&\r\n      who === \"start_date\" &&\r\n      new Date(this.state.end_date._d + \"\") < new Date(date._d + \"\")\r\n    ) {\r\n      await this.setState({\r\n        start_date: date,\r\n        end_date: date,\r\n      });\r\n      this.filter();\r\n    } else {\r\n      await this.setState({\r\n        [who]: date,\r\n      });\r\n      this.filter();\r\n    }\r\n  };\r\n\r\n  getClassNameReactDatetimeDays = (date) => {\r\n    if (this.state.start_date && this.state.end_date) {\r\n    }\r\n    if (\r\n      this.state.start_date &&\r\n      this.state.end_date &&\r\n      this.state.start_date._d + \"\" !== this.state.end_date._d + \"\"\r\n    ) {\r\n      if (\r\n        new Date(this.state.end_date._d + \"\") > new Date(date._d + \"\") &&\r\n        new Date(this.state.start_date._d + \"\") < new Date(date._d + \"\")\r\n      ) {\r\n        return \" middle-date\";\r\n      }\r\n      if (this.state.end_date._d + \"\" === date._d + \"\") {\r\n        return \" end-date\";\r\n      }\r\n      if (this.state.start_date._d + \"\" === date._d + \"\") {\r\n        return \" start-date\";\r\n      }\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  selectPageSize = (e) => {\r\n    const { value } = e.target;\r\n    if (value) {\r\n      this.resetFilterData();\r\n      this.setState({ isOpenSideBar: false, tickCheckAll: false });\r\n      this.filters.limit = value;\r\n      this.props.getList(this.filters);\r\n    }\r\n  };\r\n\r\n  selectPage = ({ selected }) => {\r\n    this.filters.selected = selected || 0;\r\n    this.filters.offset = Math.ceil(selected * this.filters.limit);\r\n    this.setState({ isOpenSideBar: false, tickCheckAll: false });\r\n    this.props.getList(this.filters);\r\n  };\r\n\r\n  resetFilterData = () => {\r\n    this.filters.offset = 0;\r\n    this.filters.selected = 0;\r\n  };\r\n\r\n  clearFilterData = () => {\r\n    this.filters = defaultFilters();\r\n    this.setState(defaultState());\r\n    this.props.getList(this.filters);\r\n  };\r\n\r\n  toggleSelectStatus = () => {\r\n    this.setState({ dropdownStatusOpen: !this.state.dropdownStatusOpen });\r\n  };\r\n\r\n  exportCSV = async () => {\r\n    const tableData = this.props.bookingInvoiceData.result;\r\n    const data = getExportData(\r\n      tableData,\r\n      cons.BILLING_EXPORT_CSV_CODE.PROVIDER_BOOKING_INVOICE\r\n    );\r\n    const filename = String(moment().valueOf());\r\n    const options = {\r\n      filename,\r\n      fieldSeparator: \",\",\r\n      quoteStrings: '\"',\r\n      decimalSeparator: \".\",\r\n      showLabels: true,\r\n      showTitle: false,\r\n      useTextFile: false,\r\n      useBom: true,\r\n      useKeysAsHeaders: true,\r\n    };\r\n    const csvExporter = new ExportToCsv(options);\r\n    csvExporter.generateCsv(data);\r\n  };\r\n\r\n  render() {\r\n    const { bookingInvoiceData, loading, providerData, bookingInvoiceDetail } =\r\n      this.props;\r\n\r\n    const bookingList = getBookingList(bookingInvoiceDetail.result);\r\n    const totalChargedBookings = getTotalChargedBooking(bookingList);\r\n\r\n    const { dropdownStatusName, dropdownStatusOpen } = this.state;\r\n    const bookingInvoiceArr = bookingInvoiceData.result;\r\n    const { limit, selected } = this.filters;\r\n    const totalPage = Math.ceil(bookingInvoiceData.count / limit) || 0;\r\n    const paginationInfo = {\r\n      from: selected * limit + 1,\r\n      to:\r\n        (selected + 1) * limit < bookingInvoiceData.count\r\n          ? (selected + 1) * limit\r\n          : bookingInvoiceData.count,\r\n      total: bookingInvoiceData.count,\r\n      getShowOne: function () {\r\n        return this.from === this.to;\r\n      },\r\n    };\r\n    const paginationSetting = {\r\n      totalPage,\r\n      selected: this.filters.selected,\r\n    };\r\n    const sortClass = {\r\n      title: this.filters.ordering,\r\n      value: this.filters.desc,\r\n      get: function (name) {\r\n        if (this.title === name) {\r\n          return `sort ${this.value ? \"sort-desc\" : \"sort-asc\"}`;\r\n        }\r\n        return \"sort\";\r\n      },\r\n    };\r\n    return (\r\n      <>\r\n        <Col className=\"list-invoice\">\r\n          <Row className=\"d-flex justify-content-md-end justify-content-center mt-3\">\r\n            <Col md={6} className=\"d-flex justify-content-md-start\">\r\n              <ul className=\"d-flex flex-column current-amount\">\r\n                <b>This week's balance: ${fixNumber(totalChargedBookings)}</b>\r\n                <Link\r\n                  to=\"/provider/billings/booking-invoice/detail/preview-invoice\"\r\n                  className=\"mt-3\"\r\n                >\r\n                  <b className=\"cursor-pointer\">Preview this week's invoice</b>\r\n                </Link>\r\n              </ul>\r\n            </Col>\r\n            <Col md={6} className=\"d-flex justify-content-md-end\">\r\n              <ul className=\"d-flex flex-column current-amount\">\r\n                <b>\r\n                  Ethera Credit: ${providerData && providerData.etheraCredit}\r\n                </b>\r\n                <b>Promo Credit: ${providerData && providerData.promoCredit}</b>\r\n                <b>\r\n                  Remaining Cancellations:{\" \"}\r\n                  {providerData && providerData.cancelationBalance}\r\n                </b>\r\n              </ul>\r\n            </Col>\r\n          </Row>\r\n          <Card>\r\n            {loading && <Loading />}\r\n            <CardHeader className=\"bg-transparent border-0\">\r\n              <Row className=\"d-flex justify-content-between align-items-center\">\r\n                <Col\r\n                  className=\"d-flex justify-content-center justify-content-lg-start\"\r\n                  xl={5}\r\n                  lg={6}\r\n                  xs={12}\r\n                >\r\n                  <Row className=\"align-items-center\">\r\n                    <Col xs={12} sm={5}>\r\n                      <ReactDatetime\r\n                        className=\"custom-date-input\"\r\n                        inputProps={{\r\n                          placeholder: \"-- start date --\",\r\n                        }}\r\n                        closeOnSelect={true}\r\n                        value={this.state.start_date}\r\n                        timeFormat={false}\r\n                        dateFormat={\"MM/DD/YYYY\"}\r\n                        onChange={(e) =>\r\n                          this.handleReactDatetimeChange(\"start_date\", e)\r\n                        }\r\n                        renderDay={(props, currentDate, selectedDate) => {\r\n                          let classes = props.className;\r\n                          classes +=\r\n                            this.getClassNameReactDatetimeDays(currentDate);\r\n                          return (\r\n                            <td {...props} className={classes}>\r\n                              {currentDate.date()}\r\n                            </td>\r\n                          );\r\n                        }}\r\n                      ></ReactDatetime>\r\n                    </Col>\r\n                    <b className=\"d-sm-block d-none\">-</b>\r\n                    <Col xs={12} sm={5}>\r\n                      <ReactDatetime\r\n                        className=\"custom-date-input\"\r\n                        inputProps={{\r\n                          placeholder: \"-- end date --\",\r\n                        }}\r\n                        closeOnSelect={true}\r\n                        value={this.state.end_date}\r\n                        timeFormat={false}\r\n                        dateFormat={\"MM/DD/YYYY\"}\r\n                        onChange={(e) =>\r\n                          this.handleReactDatetimeChange(\"end_date\", e)\r\n                        }\r\n                        renderDay={(props, currentDate, selectedDate) => {\r\n                          let classes = props.className;\r\n                          classes +=\r\n                            this.getClassNameReactDatetimeDays(currentDate);\r\n                          return (\r\n                            <td {...props} className={classes}>\r\n                              {currentDate.date()}\r\n                            </td>\r\n                          );\r\n                        }}\r\n                      ></ReactDatetime>\r\n                    </Col>\r\n                    <Col sm={1} className=\"d-sm-block d-none\">\r\n                      <i className=\"fas fa-calendar-alt\"></i>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                {/* <Col\r\n                  className=\"d-flex justify-content-center justify-content-lg-start\"\r\n                  xl={4}\r\n                  lg={6}\r\n                  xs={12}\r\n                >\r\n                  <Row className=\"align-item-center m-3 m-lg-0\">\r\n                    <Dropdown\r\n                      isOpen={dropdownStatusOpen}\r\n                      toggle={this.toggleSelectStatus}\r\n                      className=\"list-invoice__dropdown\"\r\n                    >\r\n                      <DropdownToggle caret>\r\n                        {dropdownStatusName}\r\n                      </DropdownToggle>\r\n                      <DropdownMenu>\r\n                        <DropdownItem\r\n                          value=\"\"\r\n                          name=\"status\"\r\n                          onClick={(e) =>\r\n                            this.handleChangeFilterStatus(e, \"All Status\")\r\n                          }\r\n                        >\r\n                          All Status\r\n                        </DropdownItem>\r\n                        {cons.BILLING_STATUS_INFO.map((item) => {\r\n                          return (\r\n                            <DropdownItem\r\n                              key={item.id}\r\n                              name=\"status\"\r\n                              onClick={(e) =>\r\n                                this.handleChangeFilterStatus(\r\n                                  e,\r\n                                  `${item.status}`\r\n                                )\r\n                              }\r\n                              value={item.id}\r\n                            >\r\n                              {item.status}\r\n                            </DropdownItem>\r\n                          );\r\n                        })}\r\n                      </DropdownMenu>\r\n                    </Dropdown>\r\n                    <ButtonGroup\r\n                      className=\"btn-group-toggle\"\r\n                      data-toggle=\"buttons\"\r\n                    >\r\n                      <Button\r\n                        className=\"bg-transparent\"\r\n                        color=\"default\"\r\n                        outline\r\n                        onClick={this.filter}\r\n                      >\r\n                        <span>Filter</span>\r\n                        <i className=\"fas fa-filter fa-xs\"></i>\r\n                      </Button>\r\n                      <Button\r\n                        className=\"bg-transparent\"\r\n                        color=\"default\"\r\n                        outline\r\n                        onClick={this.clearFilterData}\r\n                      >\r\n                        <span>Clear</span>\r\n                        <i className=\"fas fa-eraser\"></i>\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </Row>\r\n                </Col> */}\r\n                <Col\r\n                  className=\"d-flex justify-content-center justify-content-xl-end mt-lg-3 mt-xl-0\"\r\n                  xl={3}\r\n                  lg={12}\r\n                  xs={12}\r\n                >\r\n                  <Row className=\"align-items-center\">\r\n                    <Button\r\n                      className=\"mr-lg-3\"\r\n                      color=\"primary\"\r\n                      size=\"sm\"\r\n                      onClick={this.exportCSV}\r\n                      disabled={\r\n                        bookingInvoiceArr && bookingInvoiceArr.length === 0\r\n                      }\r\n                    >\r\n                      <span className=\"btn-inner--text\">Export CSV</span>\r\n                    </Button>\r\n                    {/* <div className=\"d-flex align-items-center\">\r\n                      <small className=\"text-muted mr-3\">\r\n                        {\" \"}\r\n                        Display void invoices\r\n                      </small>\r\n                      <label className=\"custom-toggle mr-1\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          onChange={this.handleFilterVoidBilling}\r\n                          checked={this.state.checkVoidStatus}\r\n                        />\r\n                        <span\r\n                          className=\"custom-toggle-slider rounded-circle\"\r\n                          data-label-off=\"All\"\r\n                          data-label-on=\"Void\"\r\n                        />\r\n                      </label>\r\n                    </div> */}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </CardHeader>\r\n          </Card>\r\n          <Card>\r\n            <CardBody>\r\n              <Table className=\"align-items-center table-sort\" responsive>\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th\r\n                      className={`text-center ${sortClass.get(\"created_at\")}`}\r\n                      name=\"created_at\"\r\n                      onClick={this.sort}\r\n                    >\r\n                      Date Created\r\n                    </th>\r\n                    <th className=\"text-center\"> Invoice number </th>\r\n                    <th\r\n                      className={classNames(\r\n                        \"text-center\",\r\n                        sortClass.get(\"due_date\")\r\n                      )}\r\n                      name=\"due_date\"\r\n                      onClick={this.sort}\r\n                    >\r\n                      {\" \"}\r\n                      Due date{\" \"}\r\n                    </th>\r\n                    <th\r\n                      className={`table__header__w-170 text-center ${sortClass.get(\r\n                        \"status\"\r\n                      )}`}\r\n                      name=\"status\"\r\n                      onClick={this.sort}\r\n                    >\r\n                      {\" \"}\r\n                      Status{\" \"}\r\n                    </th>\r\n                    <th\r\n                      className={classNames(\r\n                        \"text-center\",\r\n                        sortClass.get(\"total_amount\")\r\n                      )}\r\n                      name=\"total_amount\"\r\n                      onClick={this.sort}\r\n                    >\r\n                      {\" \"}\r\n                      Total{\" \"}\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"client\">\r\n                  {bookingInvoiceArr &&\r\n                    bookingInvoiceArr.map((item, i) => {\r\n                      return (\r\n                        <BookingInvoice\r\n                          key={i}\r\n                          check={this.handleCheckbox}\r\n                          openSideBar={this.toggleSideBar}\r\n                          item={item}\r\n                          setStatus={this.getProviderUpdateStatus}\r\n                          toggleAction={this.toggleAction}\r\n                        />\r\n                      );\r\n                    })}\r\n                </tbody>\r\n              </Table>\r\n            </CardBody>\r\n            {bookingInvoiceArr && bookingInvoiceArr.length > 0 && (\r\n              <Row className=\"d-flex justify-content-md-between justify-content-sm-start mb-3 mx-0\">\r\n                <Col className=\"d-flex justify-content-center\">\r\n                  {totalPage > 1 && (\r\n                    <PaginationBar\r\n                      setting={paginationSetting}\r\n                      handleClick={this.selectPage}\r\n                    />\r\n                  )}\r\n                </Col>\r\n                <Col\r\n                  className=\"d-flex align-items-baseline mb-md-0 mb-2\"\r\n                  xs=\"auto\"\r\n                >\r\n                  {/* <Label className=\"mr-1 text-nowrap\" for=\"selectPageSize\">\r\n                    <small>Size</small>\r\n                  </Label> */}\r\n                  <Input\r\n                    onChange={this.selectPageSize}\r\n                    value={limit}\r\n                    bsSize=\"md\"\r\n                    type=\"select\"\r\n                    name=\"selectPageSize\"\r\n                    id=\"selectPageSize\"\r\n                  >\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"10\">10</option>\r\n                    <option value=\"20\">20</option>\r\n                    <option value=\"50\">50</option>\r\n                  </Input>\r\n                  <Label className=\"ml-1 text-nowrap\">\r\n                    {/* <small>\r\n                      {`Showing ${paginationInfo.from} ${\r\n                        paginationInfo.getShowOne()\r\n                          ? \"\"\r\n                          : `to ${paginationInfo.to}`\r\n                      } of ${paginationInfo.total} entries`}\r\n                    </small> */}\r\n                    <small>\r\n                      Page {`${selected + 1}`} of {`${totalPage}`}\r\n                    </small>\r\n                  </Label>\r\n                </Col>\r\n              </Row>\r\n            )}\r\n          </Card>\r\n        </Col>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    bookingInvoiceData: state.billing.data,\r\n    loading: state.billing.loading,\r\n    providerData: state.provider.data,\r\n    bookingInvoiceDetail: state.billing.detailData,\r\n  };\r\n};\r\n\r\nconst mapActionToProps = { getList, getDetail, getInvoiceDetail };\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(ListBookingInvoice);\r\n","import Billing from './ListBookingInvoice.jsx';\r\n\r\nexport default Billing;\r\n","import React from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\nimport \"./style.scss\";\r\n\r\nconst PaginationBar = ({ setting, handleClick }) => {\r\n  return (\r\n    <ReactPaginate\r\n      previousLabel={<i className=\"fas fa-angle-left\" />}\r\n      nextLabel={<i className=\"fas fa-angle-right\" />}\r\n      breakLabel='...'\r\n      breakClassName={'page-item'}\r\n      breakLinkClassName={'page-link'}\r\n      pageCount={setting.totalPage}\r\n      forcePage={setting.selected}\r\n      marginPagesDisplayed={setting.marginPages || 1}\r\n      pageRangeDisplayed={setting.pageRange || 1}\r\n      onPageChange={handleClick}\r\n      containerClassName={'pagination pagination-md'}\r\n      subContainerClassName={'page-item'}\r\n      activeClassName={'active'}\r\n      pageLinkClassName={'page-link'}\r\n      pageClassName={'page-item'}\r\n      previousClassName={'page-item'}\r\n      nextClassName={'page-item'}\r\n      previousLinkClassName={'page-link'}\r\n      nextLinkClassName={'page-link'}\r\n      disabledClassName={'disabled'}\r\n    />\r\n  );\r\n}\r\n\r\nexport default PaginationBar;\r\n","import 'jspdf-autotable';\r\nimport cons from '../constants'\r\n\r\nexport const getBookingList = (bookingList) => {\r\n    let result = []\r\n    bookingList && bookingList.forEach((booking, i) => {\r\n        booking.prices && booking.prices.forEach(price => {\r\n            const prevHours = result.length === 0 ? 0 : result[result.length - 1].totalHours\r\n            let data = {\r\n                ...price,\r\n                ...booking,\r\n                totalHours: Number(price.hours) + Number(prevHours)\r\n            }\r\n            result.push(data)\r\n        })\r\n    })\r\n    return result\r\n}\r\n\r\nexport const getCancellationList = (bookingList) => {\r\n    let result = []\r\n    bookingList && bookingList.forEach(booking => {\r\n        if (booking.status === cons.BOOKING_STATUS.CANCELED) {\r\n            booking.prices.forEach((price) => {\r\n                let data = {\r\n                    ...price,\r\n                    ...booking,\r\n                }\r\n                result.push(data)\r\n            })\r\n        }\r\n    })\r\n    return result\r\n}\r\n\r\nexport const getCredit = (bookingInvoiceData, totalChargedBookings, promoCredit, etheraCredit) => {\r\n    const totalCredit = Number(promoCredit) + Number(etheraCredit)\r\n    if (Number(bookingInvoiceData.status) === cons.BILLING_STATUS.PAID) {\r\n        const promoApplied = bookingInvoiceData.appliedPromoCredit\r\n        const etheraApplied = bookingInvoiceData.appliedEtheraCredit\r\n        return {\r\n            promoApplied,\r\n            etheraApplied,\r\n        }\r\n    }\r\n    else {\r\n        if (Number(totalChargedBookings) < Number(promoCredit)) {\r\n            const promoApplied = totalChargedBookings\r\n            const etheraApplied = 0\r\n            return {\r\n                promoApplied,\r\n                etheraApplied,\r\n            }\r\n        }\r\n        else if (Number(totalChargedBookings) < Number(totalCredit)) {\r\n            const promoApplied = promoCredit\r\n            const etheraApplied = Number(totalChargedBookings) - Number(promoCredit)\r\n            return {\r\n                promoApplied,\r\n                etheraApplied,\r\n            }\r\n        }\r\n        else {\r\n            const promoApplied = promoCredit\r\n            const etheraApplied = etheraCredit\r\n            return {\r\n                promoApplied,\r\n                etheraApplied,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const getTotalChargedBooking = (listData) => {\r\n    const tempArr = listData.length > 0 && listData.map(item => {\r\n        const tempTotal = Number(item.price) * Number(item.hours)\r\n        return tempTotal\r\n    }).reduce((total, currentValue) => total + currentValue)\r\n    return tempArr\r\n}\r\n\r\nexport const getTotalCharged = (totalChargedBookings, creditApplied) => {\r\n    if (Number(totalChargedBookings) > (Number(creditApplied.promoApplied) + Number(creditApplied.etheraApplied))) {\r\n        const totalCharged = Number(totalChargedBookings) - (Number(creditApplied.promoApplied) + Number(creditApplied.etheraApplied))\r\n        return totalCharged\r\n    }\r\n    else {\r\n        return 0\r\n    }\r\n}\r\n\r\n\r\n"],"sourceRoot":""}